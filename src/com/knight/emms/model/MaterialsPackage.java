package com.knight.emms.model;
// Generated 2017-7-17 15:12:21 by Hibernate Tools 3.6.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import com.google.gson.annotations.Expose;
import com.google.gson.annotations.Since;
import com.google.gson.reflect.TypeToken;
import com.knight.core.model.ExportModel;
import com.knight.core.table.CodeFieldDeclare;
import com.knight.core.table.PersistantDeclare;
import com.knight.core.util.GsonUtil;
import com.knight.emms.constant.Constant;
import com.knight.emms.core.ApplyforState;
import com.knight.emms.core.model.SerialNumberStrategy;

import lombok.Data;
import lombok.ToString;

/**
 * TMaterialsPackage generated by hbm2java
 */
@Data
@ToString(callSuper = false, doNotUseGetters = true)
@PersistantDeclare(isExportable = true, exportName = "周材现场装车信息汇总", sheetName = "周材现场装车信息")
@SerialNumberStrategy(name = "packageSerial", strategy = "ZC{yyyyMMdd}", maxseq = 999)
public class MaterialsPackage  extends ApplyforState implements ExportModel{

	private static final long serialVersionUID = 1L;
	
	@Expose
	private Long packageId;
	
	/*装车单号*/
	@Expose
	private String packageSerial;
	
	/*制单时间*/
	@Expose
	private String applyDate;
	
	/*制单人员*/
	@Expose
	private Long userId;
	
	/*制单人员*/
	@Expose
	private String userName;
	
	/*仓库id*/
	@Expose
	private Long storeId;	
	
	/*仓库名称*/
	@Expose
	private String storeName;
	
	/*出库库位id*/
	@Expose
	private Long locationId;
	
	/*出库库位*/
	@Expose
	private String storageLocation;
	
	/*状态*/
	@Expose
	private String status;
	
	/*合同ID*/
	@Expose
	private Long contractId;
	
	/*合同编号*/
	@Expose
	private String contractSerial;
	
	/*承租单位ID*/
	@Expose
	private Long pbEntId;
	
	/*承租单位*/
	@Expose
	private String pbEntName;
	
	/*工程id*/
	@Expose
	private Long projectId;
	
	/*工程名称*/
	@Expose
	private String projectName;
	
	/*装车日期*/
	@Expose
	private String packageDate;
	
	/*附属单据号*/
	@Expose
	private String attachSerial;
	
	/*出租类型*/
	@Expose
	@CodeFieldDeclare(codeId = "rentType", valueField = "rentTypeName")
	private String rentType;	
	
	@Expose
	private String rentTypeName;
	
	/*运输车辆号*/
	@Expose
	private String vehicleNum;
	
	/*运输车辆人员*/
	@Expose
	private String vehiclePerson;
	
	/*二维码*/
	@Expose
	private String qrCode;
	
	/*运费*/
	@Expose
	private String tranportAmount;
	
	/*运费计价方式*/
	@Expose
	private String tranportCaculateType;
	
	/*收发审核人员*/
	@Expose
	private Long dispatchAuditorId;
	
	@Expose
	private String dispatchAuditorName;
	
	/*收发审核时间*/
	@Expose
	private String dispatchAuditorDate;
	
	/*单据审核人员*/
	@Expose
	private Long orderAuditorId;
	
	@Expose
	private String orderAuditorName;
	
	/*单据审核时间*/
	@Expose
	private String orderAuditorDate;
	
	/*装卸费金额*/
	@Expose
	private String handingCharge;
	
	/*包装费金额*/
	@Expose
	private String packAmount;
	
	@Expose
	@CodeFieldDeclare(codeId = "MATERIALS_PACKAGE_STATE", valueField = "applyforStateName")
	private String applyforState;
	
	@Expose
	private String applyforStateName;
	
	@Expose
	private	Long materialsId;
	
	@Expose
	private	Long receiveId;
	
	/*收发人员*/
	@Expose
	private String receiveName;
	
	/*备注*/
	@Expose
	private String remark;
	
	/*审核时间*/
	@Expose
	private Date acceptTime;
	
	/*审批时间*/
	@Expose
	private Date approveTime;
	
	/**签收人*/
	@Expose
	private String signMan;
	
	/**签收时间*/
	@Expose
	private String signDate;
	
	/**签收地点*/
	@Expose
	private String signAddress;
	
	/**
	 * 签收标识
	 * 1：是
	 * 0：否
	 * */
	@Expose
	private String signFlag;
	
	private String delFlag = Constant.ENABLED;
	
	@Override
	public Long getApplyforId() {
		return this.packageId;
	}
	
	@Override
	public void setModelSerial(String serial) {
		this.packageSerial = serial;
		
	}
	
	private String packageDetails = "";
	
	@Expose(deserialize = false, serialize = false)
	@Since(value = 2.0)
	private Set<PackageDetail> packageDetailSet = new HashSet<PackageDetail>();
	
	private String costDetails = "";
	
	@Expose(deserialize = false, serialize = false)
	@Since(value = 2.0)
	private Set<CostDetail> costDetailSet = new HashSet<CostDetail>();

	// ==============================================================================//
		public void setMaterialsPackage() {
			Set<PackageDetail> packageDetailSet = GsonUtil.fromJson(this.getPackageDetails(), new TypeToken<Set<PackageDetail>>() {});
			if (packageDetailSet != null) {
				for (PackageDetail p : packageDetailSet) {
					p.setPackageId(this.getPackageId());
				}
			}
			this.setPackageDetailSet(packageDetailSet);
			
			Set<CostDetail> costDetailSet = GsonUtil.fromJson(this.getCostDetails(), new TypeToken<Set<CostDetail>>() {});
			if (costDetailSet != null) {
				for (CostDetail p :costDetailSet) {
					p.setPackageId(this.getPackageId());
				}
			}
			this.setCostDetailSet(costDetailSet);
		}

}