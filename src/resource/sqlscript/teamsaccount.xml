<?xml version="1.0" encoding="UTF-8"?>
<mapper namespace="teamsaccount">
	<!-- 待核算标准节配件 -->
	<select id="unsettle_knot_diary">
	<![CDATA[
		DECLARE @PRACTI_ID BIGINT
		DECLARE @PROJECT_ID BIGINT
		DECLARE @TEAMS VARCHAR(32)
		DECLARE @START_DATE CHAR(10)
		DECLARE @END_DATE CHAR(10)
		SET @PRACTI_ID = ?
		SET @PROJECT_ID = ?
		SET @TEAMS = ?
		SET @START_DATE = ?
		SET @END_DATE = ?;
		SELECT A.KNOT_TYPE knotType,
		       A.ACCOUNT_DATE accountDate,
		       A.RECORD_ID recordId,
		       A.BUILDING_NUM buildingNum,
		       A.COMPON_GENERIC componGeneric,
		       ISNULL(CG.VALUE, A.COMPON_GENERIC) componGenericName,
		       A.COMPON_SPECIFIC componSpecific,
		       ISNULL(CS.VALUE, A.COMPON_SPECIFIC) componSpecificName,
		       ISNULL(A.KNOT_METRIC, 0) knotMetric,
		       A.COUNTS counts,
		       A.PROJECT_NAME projectName,
		       A.PRACTI_NAME practiName
		  FROM (SELECT CD.JACKING_STAUTS KNOT_TYPE, CD.JACKING_DATE ACCOUNT_DATE, ED.RECORD_ID, ED.BUILDING_NUM, C.COMPON_GENERIC, C.COMPON_SPECIFIC, C.KNOT_METRIC, CD.PROJECT_ID, CD.PROJECT_NAME, CD.JACKING_PRACTI_ID PRACTI_ID, CD.JACKING_PRACTI_NAME PRACTI_NAME, SUM(CD.COUNTS) COUNTS
		          FROM T_COMPONENT_DIARY CD, T_COMPONENT C, T_EQUIPMENT_DIARY ED
		         WHERE CD.JACKING_DATE >= CASE WHEN @START_DATE IS NULL THEN CD.JACKING_DATE ELSE CONVERT(DATE, @START_DATE, 23) END
		           AND CD.JACKING_DATE <= CASE WHEN @END_DATE IS NULL THEN CD.JACKING_DATE ELSE CONVERT(DATE, @END_DATE, 23) END
		           AND CD.JACKING_TEAMS LIKE CASE WHEN @TEAMS IS NULL THEN CD.JACKING_TEAMS  ELSE '%' + @TEAMS + '%' END
		           AND CD.JACKING_PRACTI_ID = CASE WHEN @PRACTI_ID IS NULL THEN CD.JACKING_PRACTI_ID ELSE @PRACTI_ID END
		           AND CD.PROJECT_ID = CASE WHEN @PROJECT_ID IS NULL THEN CD.PROJECT_ID ELSE @PROJECT_ID END
		           AND C.COMPON_ID = CD.COMPON_ID
		           AND CD.FLOW_ID = ED.FLOW_ID
		           AND C.KNOT_FLAG = 1
		           AND CD.JACKING_STAUTS > '0'
		           AND CD.JACKING_ACCOUNT_ID IS NULL
		         GROUP BY CD.JACKING_STAUTS, CD.JACKING_DATE, ED.RECORD_ID, ED.BUILDING_NUM, C.COMPON_GENERIC, C.COMPON_SPECIFIC, C.KNOT_METRIC, CD.PROJECT_ID, CD.PROJECT_NAME, CD.JACKING_PRACTI_ID, CD.JACKING_PRACTI_NAME
		        UNION ALL
		        SELECT CD.DISMANTLE_STAUTS KNOT_TYPE, CD.DISMANTLE_DATE ACCOUNT_DATE, ED.RECORD_ID, ED.BUILDING_NUM, C.COMPON_GENERIC, C.COMPON_SPECIFIC, C.KNOT_METRIC, CD.PROJECT_ID, CD.PROJECT_NAME, CD.DISMANTLE_PRACTI_ID PRACTI_ID, CD.DISMANTLE_PRACTI_NAME PRACTI_NAME, SUM(CD.COUNTS) COUNTS
		          FROM T_COMPONENT_DIARY CD, T_COMPONENT C, T_EQUIPMENT_DIARY ED
		         WHERE CD.DISMANTLE_DATE >= CASE WHEN @START_DATE IS NULL THEN CD.DISMANTLE_DATE ELSE CONVERT(DATE, @START_DATE, 23) END
		           AND CD.DISMANTLE_DATE <= CASE WHEN @END_DATE IS NULL THEN CD.DISMANTLE_DATE ELSE CONVERT(DATE, @END_DATE, 23) END
		           AND CD.DISMANTLE_TEAMS LIKE CASE WHEN @TEAMS IS NULL THEN CD.DISMANTLE_TEAMS  ELSE '%' + @TEAMS + '%' END
		           AND CD.DISMANTLE_PRACTI_ID = CASE WHEN @PRACTI_ID IS NULL THEN CD.DISMANTLE_PRACTI_ID ELSE @PRACTI_ID END
		           AND CD.PROJECT_ID = CASE WHEN @PROJECT_ID IS NULL THEN CD.PROJECT_ID ELSE @PROJECT_ID END
		           AND C.COMPON_ID = CD.COMPON_ID
		           AND CD.FLOW_ID = ED.FLOW_ID
		           AND C.KNOT_FLAG = 1
		           AND CD.DISMANTLE_STAUTS = '3'
		           AND CD.DISMANTLE_ACCOUNT_ID IS NULL
		         GROUP BY CD.DISMANTLE_STAUTS, CD.DISMANTLE_DATE, ED.RECORD_ID, ED.BUILDING_NUM, C.COMPON_GENERIC, C.COMPON_SPECIFIC, C.KNOT_METRIC, CD.PROJECT_ID, CD.PROJECT_NAME, CD.DISMANTLE_PRACTI_ID, CD.DISMANTLE_PRACTI_NAME) A
		  LEFT JOIN BM_COMPONENT_GENERIC CG ON A.COMPON_GENERIC = CG.CODE
		  LEFT JOIN BM_COMPONENT_SPECIFIC CS ON A.COMPON_SPECIFIC = CS.CODE
	]]>
	</select>
	<!-- 待核算附墙配件 -->
	<select id="unsettle_wall_diary">
	<![CDATA[
		DECLARE @PRACTI_ID BIGINT
		DECLARE @PROJECT_ID BIGINT
		DECLARE @TEAMS VARCHAR(32)
		DECLARE @START_DATE CHAR(10)
		DECLARE @END_DATE CHAR(10)
		SET @PRACTI_ID = ?
		SET @PROJECT_ID = ?
		SET @TEAMS = ?
		SET @START_DATE = ?
		SET @END_DATE = ?;
		SELECT A.WALL_TYPE wallType,
		       A.ACCOUNT_DATE accountDate,
		       A.RECORD_ID recordId,
		       A.BUILDING_NUM buildingNum,
		       A.COMPON_GENERIC componGeneric,
		       ISNULL(CG.VALUE, A.COMPON_GENERIC) componGenericName,
		       A.COMPON_SPECIFIC componSpecific,
		       ISNULL(CS.VALUE, A.COMPON_SPECIFIC) componSpecificName,
		       A.COUNTS quantity
		  FROM (SELECT CD.JACKING_STAUTS WALL_TYPE, CD.JACKING_DATE ACCOUNT_DATE, ED.RECORD_ID, ED.BUILDING_NUM, C.COMPON_GENERIC, C.COMPON_SPECIFIC, CD.PROJECT_ID, CD.PROJECT_NAME, CD.JACKING_PRACTI_ID PRACTI_ID, CD.JACKING_PRACTI_NAME PRACTI_NAME, SUM(CD.COUNTS) COUNTS
		          FROM T_COMPONENT_DIARY CD, T_COMPONENT C, T_EQUIPMENT_DIARY ED
		         WHERE CD.JACKING_DATE >= CASE WHEN @START_DATE IS NULL THEN CD.JACKING_DATE ELSE CONVERT(DATE, @START_DATE, 23) END
		           AND CD.JACKING_DATE <= CASE WHEN @END_DATE IS NULL THEN CD.JACKING_DATE ELSE CONVERT(DATE, @END_DATE, 23) END
		           AND CD.JACKING_TEAMS LIKE CASE WHEN @TEAMS IS NULL THEN CD.JACKING_TEAMS ELSE '%' + @TEAMS + '%' END
		           AND CD.JACKING_PRACTI_ID = CASE WHEN @PRACTI_ID IS NULL THEN CD.JACKING_PRACTI_ID ELSE @PRACTI_ID END
		           AND CD.PROJECT_ID = CASE WHEN @PROJECT_ID IS NULL THEN CD.PROJECT_ID ELSE @PROJECT_ID END
		           AND C.COMPON_ID = CD.COMPON_ID
		           AND CD.FLOW_ID = ED.FLOW_ID
		           AND C.WALL_ATTACHE_FLAG = 1
		           AND CD.JACKING_STAUTS > '0'
		           AND CD.JACKING_ACCOUNT_ID IS NULL
		         GROUP BY CD.JACKING_STAUTS, CD.JACKING_DATE, ED.RECORD_ID, ED.BUILDING_NUM, C.COMPON_GENERIC, C.COMPON_SPECIFIC, CD.PROJECT_ID, CD.PROJECT_NAME, CD.JACKING_PRACTI_ID, CD.JACKING_PRACTI_NAME
		        UNION ALL
		        SELECT CD.DISMANTLE_STAUTS WALL_TYPE, CD.DISMANTLE_DATE ACCOUNT_DATE, ED.RECORD_ID, ED.BUILDING_NUM, C.COMPON_GENERIC, C.COMPON_SPECIFIC, CD.PROJECT_ID, CD.PROJECT_NAME, CD.DISMANTLE_PRACTI_ID PRACTI_ID, CD.DISMANTLE_PRACTI_NAME PRACTI_NAME, SUM(CD.COUNTS) COUNTS
		          FROM T_COMPONENT_DIARY CD, T_COMPONENT C, T_EQUIPMENT_DIARY ED
		         WHERE CD.DISMANTLE_DATE >= CASE WHEN @START_DATE IS NULL THEN CD.DISMANTLE_DATE ELSE CONVERT(DATE, @START_DATE, 23) END
		           AND CD.DISMANTLE_DATE <= CASE WHEN @END_DATE IS NULL THEN CD.DISMANTLE_DATE ELSE CONVERT(DATE, @END_DATE, 23) END
		           AND CD.DISMANTLE_TEAMS LIKE CASE WHEN @TEAMS IS NULL THEN CD.DISMANTLE_TEAMS ELSE '%' + @TEAMS + '%' END
		           AND CD.DISMANTLE_PRACTI_ID = CASE WHEN @PRACTI_ID IS NULL THEN CD.DISMANTLE_PRACTI_ID ELSE @PRACTI_ID END
		           AND CD.PROJECT_ID = CASE WHEN @PROJECT_ID IS NULL THEN CD.PROJECT_ID ELSE @PROJECT_ID END
		           AND C.COMPON_ID = CD.COMPON_ID
		           AND CD.FLOW_ID = ED.FLOW_ID
		           AND C.WALL_ATTACHE_FLAG = 1
		           AND CD.DISMANTLE_STAUTS = '3'
		           AND CD.DISMANTLE_ACCOUNT_ID IS NULL
		         GROUP BY CD.DISMANTLE_STAUTS, CD.DISMANTLE_DATE, ED.RECORD_ID, ED.BUILDING_NUM, C.COMPON_GENERIC, C.COMPON_SPECIFIC, CD.PROJECT_ID, CD.PROJECT_NAME, CD.DISMANTLE_PRACTI_ID, CD.DISMANTLE_PRACTI_NAME) A
		  LEFT JOIN BM_COMPONENT_GENERIC CG ON A.COMPON_GENERIC = CG.CODE
		  LEFT JOIN BM_COMPONENT_SPECIFIC CS ON A.COMPON_SPECIFIC = CS.CODE
	]]>
	</select>
	<!-- 待核算汽车吊 -->
	<select id="unsettle_autocrane_diary">
	<![CDATA[
		DECLARE @PRACTI_ID BIGINT
		DECLARE @PROJECT_ID BIGINT
		DECLARE @TEAMS VARCHAR(32)
		SET @PRACTI_ID = ?
		SET @PROJECT_ID = ?
		SET @TEAMS = ?;
		SELECT DA.SPECIFIC_NAME specificName,
		       DA.MACHINE_TEAM machineTeam,
		       D.PRACTI_NAME practiName,
		       D.PROJECT_NAME projectName,
		       SUM(DA.QUANTITY) quantity
		  FROM T_DISPATCH_AUTOCRANE DA, T_DISPATCH D
		 WHERE D.DISPATCH_ID = DA.DISPATCH_ID
		   AND D.PROJECT_ID = CASE WHEN @PROJECT_ID IS NULL THEN D.PROJECT_ID ELSE @PROJECT_ID END 
		   AND (D.APPLYFOR_STATE = '3' OR D.APPLYFOR_STATE = '5')
		   AND D.PRACTI_ID = CASE WHEN @PRACTI_ID IS NULL THEN D.PRACTI_ID ELSE @PRACTI_ID END
		   AND D.TEAMS LIKE CASE WHEN @TEAMS IS NULL THEN D.TEAMS ELSE '%' + @TEAMS + '%' END
		   AND DA.ACCOUNT_ID IS NULL
		 GROUP BY DA.SPECIFIC_NAME, DA.MACHINE_TEAM, DA.QUANTITY, D.PRACTI_ID, D.PRACTI_NAME, D.PROJECT_NAME
	]]>
	</select>
	<!-- 更新标准节/附墙配件班组结算(顶升) -->
	<select id="update_knot_wall_jacking">
	<![CDATA[
		DECLARE @PRACTI_ID BIGINT
		DECLARE @PROJECT_ID BIGINT
		DECLARE @TEAMS VARCHAR(32)
		DECLARE @START_DATE CHAR(10)
		DECLARE @END_DATE CHAR(10)
		DECLARE @ACCOUNT_ID BIGINT
		SET @PRACTI_ID = ?
		SET @PROJECT_ID = ?
		SET @TEAMS = ?
		SET @START_DATE = ?
		SET @END_DATE = ?
		SET @ACCOUNT_ID = ?;
		UPDATE CD
		   SET CD.JACKING_ACCOUNT_ID = @ACCOUNT_ID FROM T_COMPONENT_DIARY CD, T_COMPONENT C
		 WHERE CD.JACKING_DATE >= CASE WHEN @START_DATE IS NULL THEN CD.JACKING_DATE ELSE CONVERT(DATE, @START_DATE, 23) END
		   AND CD.JACKING_DATE <= CASE WHEN @END_DATE IS NULL THEN CD.JACKING_DATE ELSE CONVERT(DATE, @END_DATE, 23) END
		   AND CD.JACKING_TEAMS LIKE CASE WHEN @TEAMS IS NULL THEN CD.JACKING_TEAMS ELSE '%' + @TEAMS + '%' END
		   AND CD.JACKING_PRACTI_ID = CASE WHEN @PRACTI_ID IS NULL THEN CD.JACKING_PRACTI_ID ELSE @PRACTI_ID END
		   AND CD.PROJECT_ID = CASE WHEN @PROJECT_ID IS NULL THEN CD.PROJECT_ID ELSE @PROJECT_ID END
		   AND C.COMPON_ID = CD.COMPON_ID
		   AND (C.KNOT_FLAG = '1' OR C.WALL_ATTACHE_FLAG = '1')
		   AND CD.JACKING_STAUTS > '0'
		   AND CD.JACKING_ACCOUNT_ID IS NULL
	]]>
	</select>
	<!-- 更新标准节/附墙配件班组结算(拆卸) -->
	<select id="update_knot_wall_dismantle">
	<![CDATA[
		DECLARE @PRACTI_ID BIGINT
		DECLARE @PROJECT_ID BIGINT
		DECLARE @TEAMS VARCHAR(32)
		DECLARE @START_DATE CHAR(10)
		DECLARE @END_DATE CHAR(10)
		DECLARE @ACCOUNT_ID BIGINT
		SET @PRACTI_ID = ?
		SET @PROJECT_ID = ?
		SET @TEAMS = ?
		SET @START_DATE = ?
		SET @END_DATE = ?
		SET @ACCOUNT_ID = ?;
		UPDATE CD
		   SET CD.DISMANTLE_ACCOUNT_ID = @ACCOUNT_ID FROM T_COMPONENT_DIARY CD, T_COMPONENT C
		 WHERE CD.DISMANTLE_DATE >= CASE WHEN @START_DATE IS NULL THEN CD.DISMANTLE_DATE ELSE CONVERT(DATE, @START_DATE, 23) END
		   AND CD.DISMANTLE_DATE <= CASE WHEN @END_DATE IS NULL THEN CD.DISMANTLE_DATE ELSE CONVERT(DATE, @END_DATE, 23) END
		   AND CD.DISMANTLE_TEAMS LIKE CASE WHEN @TEAMS IS NULL THEN CD.DISMANTLE_TEAMS ELSE '%' + @TEAMS + '%' END
		   AND CD.DISMANTLE_PRACTI_ID = CASE WHEN @PRACTI_ID IS NULL THEN CD.DISMANTLE_PRACTI_ID ELSE @PRACTI_ID END
		   AND CD.PROJECT_ID = CASE WHEN @PROJECT_ID IS NULL THEN CD.PROJECT_ID ELSE @PROJECT_ID END
		   AND C.COMPON_ID = CD.COMPON_ID
		   AND (C.KNOT_FLAG = '1' OR C.WALL_ATTACHE_FLAG = '1')
		   AND CD.DISMANTLE_STAUTS > '0'
		   AND CD.DISMANTLE_ACCOUNT_ID IS NULL
	]]>
	</select>
	<!-- 更新汽车吊班组结算(调度) -->
	<select id="update_autocrane_dispatch">
	<![CDATA[
		DECLARE @PRACTI_ID BIGINT
		DECLARE @PROJECT_ID BIGINT
		DECLARE @TEAMS VARCHAR(32)
		DECLARE @ACCOUNT_ID BIGINT
		SET @PRACTI_ID = ?
		SET @PROJECT_ID = ?
		SET @TEAMS = ?
		SET @ACCOUNT_ID = ?;
		UPDATE DA
		   SET DA.ACCOUNT_ID = @ACCOUNT_ID FROM T_DISPATCH_AUTOCRANE DA, T_DISPATCH D
		 WHERE D.DISPATCH_ID = DA.DISPATCH_ID
		   AND D.PROJECT_ID = CASE WHEN @PROJECT_ID IS NULL THEN D.PROJECT_ID ELSE @PROJECT_ID END
		   AND (D.APPLYFOR_STATE = '3' OR D.APPLYFOR_STATE = '5')
		   AND D.PRACTI_ID = CASE WHEN @PRACTI_ID IS NULL THEN D.PRACTI_ID ELSE @PRACTI_ID END
		   AND D.TEAMS LIKE CASE WHEN @TEAMS IS NULL THEN D.TEAMS ELSE '%' + @TEAMS + '%' END
		   AND DA.ACCOUNT_ID IS NULL
	]]>
	</select>
	<!-- 置空标准节/附墙配件班组结算(顶升) -->
	<select id="clean_knot_wall_jacking">
	<![CDATA[
		UPDATE CD SET CD.JACKING_ACCOUNT_ID = NULL FROM T_COMPONENT_DIARY CD WHERE CD.JACKING_ACCOUNT_ID = ?
	]]>
	</select>
	<!-- 置空标准节/附墙配件班组结算(拆卸) -->
	<select id="clean_knot_wall_dismantle">
	<![CDATA[
		UPDATE CD SET CD.DISMANTLE_ACCOUNT_ID = NULL FROM T_COMPONENT_DIARY CD WHERE CD.DISMANTLE_ACCOUNT_ID = ?
	]]>
	</select>
	<!-- 更新汽车吊班组结算(置空) -->
	<select id="clean_autocrane_dispatch">
	<![CDATA[
		UPDATE DA SET DA.ACCOUNT_ID = NULL FROM T_DISPATCH_AUTOCRANE DA WHERE DA.ACCOUNT_ID = ?
	]]>
	</select>
</mapper>