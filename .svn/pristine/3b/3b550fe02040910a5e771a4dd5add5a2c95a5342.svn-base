<?xml version="1.0" encoding="UTF-8"?>
<mapper namespace="terminal">
	<!-- 当前设备状态汇总 -->
	<select id="gather">
	<![CDATA[
		SELECT B.CODE BUSINESSSTATUS, COUNT(T.EQUIP_ID) COUNTS
		  FROM BM_BUILTIN_STORAGE B
		  LEFT JOIN T_EQUIPMENT T ON T.BUSINESS_STATUS = B.CODE AND T.STATUS < '6' AND T.DEL_FLAG = 1
		 WHERE 1 = 1
		 GROUP BY B.CODE
	]]>
	</select>
	<!-- 当前人员LBS -->
	<select id="list_user_lbs">
	<![CDATA[
		SELECT U.USERID userId, U.FULLNAME fullname, U.LONGITUDE longitude,
		U.LATITUDE latitude, CONVERT(CHAR(10), U.UPDATE_TIME, 23) updateTime  
		FROM APP_USER U WHERE U.STATUS = 1 AND U.DELFLAG = 0 AND U.USERID > 1 AND U.LATITUDE IS NOT NULL
	]]>
	</select>
	<!-- 待安装的设备列表 -->
	<select id="wait_install">
	<![CDATA[
		DECLARE @PROJECT_NAME VARCHAR(128)
		DECLARE @RECORD_ID VARCHAR(128)
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @BUILDING_NUM VARCHAR(64)
		SET @PROJECT_NAME = ?
		SET @RECORD_ID = ?
		SET @EXW_SERIAL = ?
		SET @BUILDING_NUM = ?
		SELECT DE.DISPATCH_EQUIP_ID dispatchEquipId,
		       DE.DISPATCH_ID       dispatchId,
		       D.PROJECT_NAME       projectName,
		       D.PROJECT_ID         projectId,
		       E.RECORD_ID          recordId,
		       E.EXW_SERIAL         exwSerial,
			   DE.BUILDING_NUM      buildingNum
		  FROM T_DISPATCH D, T_DISPATCH_EQUIP DE, T_EQUIPMENT E
		 WHERE D.APPLYFOR_STATE = '3'
		   AND D.RELATE_MODULE = 'CONTRACT_LEASE'
		   AND DE.DISPATCH_ID = D.DISPATCH_ID
		   AND DE.WORK_STATUS = '0'
		   AND DE.EQUIP_ID = E.EQUIP_ID
		   AND (
			    CHARINDEX((CASE WHEN @PROJECT_NAME IS NULL THEN D.PROJECT_NAME ELSE @PROJECT_NAME END), D.PROJECT_NAME) > 0
			   OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN E.RECORD_ID ELSE @RECORD_ID END), E.RECORD_ID) > 0
			   OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN D.EXW_SERIAL ELSE @EXW_SERIAL END), D.EXW_SERIAL) > 0
			   OR CHARINDEX((CASE WHEN @BUILDING_NUM IS NULL THEN DE.BUILDING_NUM ELSE @BUILDING_NUM END), DE.BUILDING_NUM) > 0
		   )
		   ORDER BY D.DISPATCH_ID desc
	]]>
	</select>
	<!-- 人员信息列表 -->
	<select id="list_practitioner">
	<![CDATA[
		DECLARE @MOBILE VARCHAR(16)
		DECLARE @PRACTI_NAME VARCHAR(64)
		DECLARE @KIND_WORK_NAME VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		SET @MOBILE = ?
		SET @PRACTI_NAME = ?
		SET @KIND_WORK_NAME = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		;WITH QUERY AS (
			SELECT P.PRACTI_ID practiId, P.MOBILE mobile, P.PRACTI_NAME practiName, B.VALUE kindWorkName, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM 
			  FROM T_PRACTITIONER P
			  LEFT JOIN BM_KIND_WORK B ON B.CODE = P.KIND_WORK
			 WHERE CHARINDEX((CASE WHEN @MOBILE IS NULL THEN P.MOBILE ELSE @MOBILE END), P.MOBILE) > 0
			    OR CHARINDEX((CASE WHEN @PRACTI_NAME IS NULL THEN P.PRACTI_NAME ELSE @PRACTI_NAME END), P.PRACTI_NAME) > 0
			    OR CHARINDEX((CASE WHEN @KIND_WORK_NAME IS NULL THEN B.VALUE ELSE @KIND_WORK_NAME END), B.VALUE) > 0
	    ) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!-- 配件信息列表 -->
	<select id="list_component">
	<![CDATA[
		DECLARE @COMPON_SERIAL VARCHAR(64)
		DECLARE @DIMENSIONS VARCHAR(64)
		DECLARE @COMPON_GENERIC_NAME VARCHAR(64)
		DECLARE @COMPON_SPECIFIC_NAME VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		DECLARE @STORE_ID BIGINT
		SET @COMPON_SERIAL = ?
		SET @DIMENSIONS = ?
		SET @COMPON_GENERIC_NAME = ?
		SET @COMPON_SPECIFIC_NAME = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		;WITH QUERY AS (
			SELECT C.COMPON_ID componId  ,CSS.EXW_SERIAL exwSerial, C.COMPON_SERIAL componSerial, C.CONSUME_COUNTS consumeCounts, C.DIMENSIONS dimensions, CG.VALUE componGenericName, CS.VALUE componSpecificName, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			  FROM T_COMPONENT C
			  LEFT JOIN BM_COMPONENT_GENERIC CG ON CG.CODE = C.COMPON_GENERIC
			  LEFT JOIN BM_COMPONENT_SPECIFIC CS ON CS.CODE = C.COMPON_SPECIFIC
			  LEFT JOIN T_EQUIPMENT CSS ON CSS.EQUIP_ID=C.EQUIP_ID
			  WHERE (CHARINDEX((CASE WHEN @COMPON_SERIAL IS NULL THEN C.COMPON_SERIAL ELSE @COMPON_SERIAL END), C.COMPON_SERIAL) > 0
			     OR CHARINDEX((CASE WHEN @DIMENSIONS IS NULL THEN C.DIMENSIONS ELSE @DIMENSIONS END), C.DIMENSIONS) > 0
			     OR CHARINDEX((CASE WHEN @COMPON_GENERIC_NAME IS NULL THEN CG.VALUE ELSE @COMPON_GENERIC_NAME END), CG.VALUE) > 0
			     OR CHARINDEX((CASE WHEN @COMPON_SPECIFIC_NAME IS NULL THEN CS.VALUE ELSE @COMPON_SPECIFIC_NAME END), CS.VALUE) > 0)
			     AND C.DEL_FLAG = '1'
		) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!-- 配件信息列表 -->
	<select id="list_component2">
	<![CDATA[
		DECLARE @COMPON_SERIAL VARCHAR(64)
		DECLARE @DIMENSIONS VARCHAR(64)
		DECLARE @COMPON_GENERIC_NAME VARCHAR(64)
		DECLARE @COMPON_SPECIFIC_NAME VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		DECLARE @STORE_ID BIGINT
		DECLARE @COMPON_IDS VARCHAR(64)
		SET @COMPON_SERIAL = ?
		SET @DIMENSIONS = ?
		SET @COMPON_GENERIC_NAME = ?
		SET @COMPON_SPECIFIC_NAME = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		SET @COMPON_IDS = ?
		;WITH QUERY AS (
			SELECT C.COMPON_ID componId  ,CSS.EXW_SERIAL exwSerial, C.COMPON_SERIAL componSerial, C.CONSUME_COUNTS consumeCounts, C.DIMENSIONS dimensions, CG.VALUE componGenericName, CS.VALUE componSpecificName, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			  FROM T_COMPONENT C
			  LEFT JOIN BM_COMPONENT_GENERIC CG ON CG.CODE = C.COMPON_GENERIC
			  LEFT JOIN BM_COMPONENT_SPECIFIC CS ON CS.CODE = C.COMPON_SPECIFIC
			  LEFT JOIN T_EQUIPMENT CSS ON CSS.EQUIP_ID=C.EQUIP_ID
			  WHERE (CHARINDEX((CASE WHEN @COMPON_SERIAL IS NULL THEN C.COMPON_SERIAL ELSE @COMPON_SERIAL END), C.COMPON_SERIAL) > 0
			     OR CHARINDEX((CASE WHEN @DIMENSIONS IS NULL THEN C.DIMENSIONS ELSE @DIMENSIONS END), C.DIMENSIONS) > 0
			     OR CHARINDEX((CASE WHEN @COMPON_GENERIC_NAME IS NULL THEN CG.VALUE ELSE @COMPON_GENERIC_NAME END), CG.VALUE) > 0
			     OR CHARINDEX((CASE WHEN @COMPON_SPECIFIC_NAME IS NULL THEN CS.VALUE ELSE @COMPON_SPECIFIC_NAME END), CS.VALUE) > 0)
			     AND C.DEL_FLAG = '1'
			     AND charindex(','+ltrim(C.COMPON_ID),','+@COMPON_IDS)>0
		) SELECT * FROM QUERY WHERE _ROWNUM > @START-1 AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	
	<!-- 配件信息列表 -->
	<select id="list_component_dispatch">
		<![CDATA[
		DECLARE @COMPON_SERIAL VARCHAR(64)
		DECLARE @DIMENSIONS VARCHAR(64)
		DECLARE @COMPON_GENERIC_NAME VARCHAR(64)
		DECLARE @COMPON_SPECIFIC_NAME VARCHAR(64)
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		DECLARE @STORE_ID BIGINT
		SET @COMPON_SERIAL = ?
		SET @DIMENSIONS = ?
		SET @COMPON_GENERIC_NAME = ?
		SET @COMPON_SPECIFIC_NAME = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		SET @STORE_ID = ?
		SET @EXW_SERIAL=?

		;WITH QUERY AS (
			SELECT C.COMPON_ID componId  ,CSS.EXW_SERIAL exwSerial, C.COMPON_SERIAL componSerial, C.CONSUME_COUNTS consumeCounts, C.DIMENSIONS dimensions, CG.VALUE componGenericName, CS.VALUE componSpecificName, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_COMPONENT C
			  LEFT JOIN BM_COMPONENT_GENERIC CG ON CG.CODE = C.COMPON_GENERIC
			  LEFT JOIN BM_COMPONENT_SPECIFIC CS ON CS.CODE = C.COMPON_SPECIFIC
			    LEFT JOIN T_EQUIPMENT CSS ON CSS.EQUIP_ID=C.EQUIP_ID
			WHERE (CHARINDEX((CASE WHEN @COMPON_SERIAL IS NULL THEN C.COMPON_SERIAL ELSE @COMPON_SERIAL END), C.COMPON_SERIAL) > 0
				   OR CHARINDEX((CASE WHEN @DIMENSIONS IS NULL THEN C.DIMENSIONS ELSE @DIMENSIONS END), C.DIMENSIONS) > 0
				    OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN CSS.EXW_SERIAL ELSE @EXW_SERIAL END), CSS.EXW_SERIAL) > 0
				   OR CHARINDEX((CASE WHEN @COMPON_GENERIC_NAME IS NULL THEN CG.VALUE ELSE @COMPON_GENERIC_NAME END), CG.VALUE) > 0
				   OR CHARINDEX((CASE WHEN @COMPON_SPECIFIC_NAME IS NULL THEN CS.VALUE ELSE @COMPON_SPECIFIC_NAME END), CS.VALUE) > 0)
				  AND C.DEL_FLAG = '1'
				  AND (@STORE_ID IS NULL OR @STORE_ID = '' OR C.STORE_ID = @STORE_ID)
				  AND C.CONSUME_COUNTS <> 0
		) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!-- 获取设备列表 -->
	<select id="list_equip">
		<![CDATA[
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @RECORD_ID VARCHAR(64)
		DECLARE @EQUIP_VENDER VARCHAR(64)
		DECLARE @EQUIP_GENERIC_NAME VARCHAR(64)
		DECLARE @EQUIP_SPECIFIC_NAME VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		SET @EXW_SERIAL = ?
		SET @RECORD_ID = ?
		SET @EQUIP_VENDER = ?
		SET @EQUIP_GENERIC_NAME =?
		SET @EQUIP_SPECIFIC_NAME = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		;WITH QUERY AS (
			SELECT E.EQUIP_ID equipId  , E.EXW_SERIAL exwSerial, E.RECORD_ID recordId, E.EQUIP_VENDER equipVender, EG.VALUE equipGenericName, ES.VALUE equipSpecificName, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			  FROM T_EQUIPMENT E
			  LEFT JOIN BM_EQUIP_GENERIC EG ON EG.CODE = E.EQUIP_GENERIC
			  LEFT JOIN BM_EQUIP_SPECIFIC ES ON ES.CODE = E.EQUIP_SPECIFIC
			  WHERE (CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN E.EXW_SERIAL ELSE @EXW_SERIAL END), E.EXW_SERIAL) > 0
			     OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN E.RECORD_ID ELSE @RECORD_ID END), E.RECORD_ID) > 0
				 OR CHARINDEX((CASE WHEN @EQUIP_VENDER IS NULL THEN E.EQUIP_VENDER ELSE @EQUIP_VENDER END), E.EQUIP_VENDER) > 0
			     OR CHARINDEX((CASE WHEN @EQUIP_GENERIC_NAME IS NULL THEN EG.VALUE ELSE @EQUIP_GENERIC_NAME END), EG.VALUE) > 0
			     OR CHARINDEX((CASE WHEN @EQUIP_SPECIFIC_NAME IS NULL THEN ES.VALUE ELSE @EQUIP_SPECIFIC_NAME END), ES.VALUE) > 0)
			     AND E.DEL_FLAG = '1'
		) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!-- 安装信息列表 -->
	<select id="list_install_all">
	<![CDATA[
		DECLARE @PROJECT_NAME VARCHAR(64)
		DECLARE @RECORD_ID VARCHAR(64)
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @BUILDING_NUM VARCHAR(64)
		DECLARE @FLOW_STATE VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		SET @PROJECT_NAME = ?
		SET @RECORD_ID = ?
		SET @EXW_SERIAL = ?
		SET @BUILDING_NUM = ?
		SET @FLOW_STATE = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		;WITH QUERY AS (
			SELECT *, ROW_NUMBER() OVER (ORDER BY A.startinDate DESC) AS _ROWNUM
			  FROM (SELECT EI.INSTALL_ID        installId,
			               ED.PROJECT_NAME      projectName,
			               ED.RECORD_ID         recordId,
			               ED.EXW_SERIAL        exwserial,
			               ED.BUILDING_NUM      buildingnum,
			               CONVERT(varchar(10), EI.STARTIN_DATE, 23)      startinDate,
			               CONVERT(varchar(10), EI.ENDIN_DATE, 23)        endinDate,
			               EI.WALL_ATTACHE_QTY  wallAttacheQty,
			               EI.INSTALL_HEIGHT    installHeight,
			               EI.BRACHIUM          brachium,
			               EI.LONGITUDE         longitude,
			               EI.LATITUDE          latitude,
			               EI.USER_NAME         userName,
			               EF.DISPATCH_ID       dispatchId,
			               EF.FLOW_ID           flowId,
			               'EQUIP_INSTALL'      relateModule
			          FROM T_EQUIPMENT_INSTALL EI,
			               T_EQUIPMENT_FLOW    EF,
			               T_EQUIPMENT_DIARY   ED
			         WHERE EI.FLOW_ID = EF.FLOW_ID
			           AND EF.FLOW_ID = ED.FLOW_ID
			           AND EI.DEL_FLAG = 1
					   AND EF.FLOW_STATE = @FLOW_STATE
			           AND (CHARINDEX((CASE WHEN @PROJECT_NAME IS NULL THEN ED.PROJECT_NAME ELSE @PROJECT_NAME END), ED.PROJECT_NAME) > 0
			           			 OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN ED.RECORD_ID ELSE @RECORD_ID END), ED.RECORD_ID) > 0
			           			 OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN ED.EXW_SERIAL ELSE @EXW_SERIAL END), ED.EXW_SERIAL) > 0
			           			 OR CHARINDEX((CASE WHEN @BUILDING_NUM IS NULL THEN ED.BUILDING_NUM ELSE @BUILDING_NUM END), ED.BUILDING_NUM) > 0
			           	   )
			        ) A
		) SELECT (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE) ORDER BY installId desc
	]]>
	</select>
	<!-- 待拆卸列表 -->
	<select id="list_dismantle_wait">
	<![CDATA[
		DECLARE @PROJECT_NAME VARCHAR(64)
		DECLARE @RECORD_ID VARCHAR(64)
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @BUILDING_NUM VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		SET @PROJECT_NAME = ?
		SET @RECORD_ID = ?
		SET @EXW_SERIAL = ?
		SET @BUILDING_NUM = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		;WITH QUERY AS (
			SELECT *, ROW_NUMBER() OVER (ORDER BY A.startinDate DESC) AS _ROWNUM 
			  FROM (SELECT EI.INSTALL_ID        installId,
			               ED.PROJECT_NAME      projectName,
			               ED.RECORD_ID         recordId,
			               ED.EXW_SERIAL        exwserial,
	                       ED.BUILDING_NUM      buildingnum,
			               CONVERT(varchar(10), EI.STARTIN_DATE, 23)      startinDate,
			               CONVERT(varchar(10), EI.ENDIN_DATE, 23)        endinDate,
			               EI.WALL_ATTACHE_QTY  wallAttacheQty,
			               EI.INSTALL_HEIGHT    installHeight,
			               EI.BRACHIUM          brachium,
			               EI.LONGITUDE         longitude,
			               EI.LATITUDE          latitude,
			               EI.USER_NAME         userName,
			               EF.DISPATCH_ID       dispatchId,
			               EF.FLOW_ID           flowId,
			               'EQUIP_INSTALL'      relateModule
			          FROM T_EQUIPMENT_INSTALL EI,
			               T_EQUIPMENT_FLOW    EF,
			               T_EQUIPMENT_DIARY   ED
			         WHERE EI.FLOW_ID = EF.FLOW_ID
			           AND EF.FLOW_ID = ED.FLOW_ID
			           AND (EF.FLOW_STATE = '2' OR EF.FLOW_STATE = '4')
			           AND (CHARINDEX((CASE WHEN @PROJECT_NAME IS NULL THEN ED.PROJECT_NAME ELSE @PROJECT_NAME END), ED.PROJECT_NAME) > 0 
			           		OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN ED.RECORD_ID ELSE @RECORD_ID END), ED.RECORD_ID) > 0
			           		OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN ED.EXW_SERIAL ELSE @EXW_SERIAL END), ED.EXW_SERIAL) > 0
			           		OR CHARINDEX((CASE WHEN @BUILDING_NUM IS NULL THEN ED.BUILDING_NUM ELSE @BUILDING_NUM END), ED.BUILDING_NUM) > 0
			           )
			        ) A
		) SELECT (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE) ORDER BY installId desc
	]]>
	</select>
	<!-- 巡检信息列表 -->
	<select id="list_inspect_all">
	<![CDATA[
		DECLARE @PROJECT_NAME VARCHAR(64)
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @BUILDING_NUM VARCHAR(64)
		DECLARE @RECORD_ID VARCHAR(24)
	    DECLARE @START INT
	    DECLARE @PAGE_SIZE INT
		DECLARE @RECTIFICATION VARCHAR(24)
		DECLARE @INSPECT_RESULT VARCHAR(24)
		DECLARE @dataPermission VARCHAR(300)
		DECLARE	@depId  VARCHAR(256)
		DECLARE	@year  VARCHAR(7)
		DECLARE	@startDate  VARCHAR(7)
		DECLARE	@endDate  VARCHAR(7)

	    SET @PROJECT_NAME = ?
   	    SET @EXW_SERIAL = ?
   	    SET @BUILDING_NUM = ?
   	    SET @RECORD_ID = ?
	    SET @START = ?
	    SET @PAGE_SIZE = ?
		SET @RECTIFICATION = ?
		SET @INSPECT_RESULT =?
		SET @dataPermission =?
		SET @depId =?
		SET @year =?
		SET @startDate =?
		SET @endDate =?

	   ;WITH QUERY AS (
	      SELECT
			CONVERT(CHAR(10),A.inspectDate,23) inspectDate,inspectId,inspectPepoles,inspectResult,exwserial,buildingnum,recordId,
			inspectResultName,statusName,remark,longitude,latitude,projectName,rectification,relateModule
			, ROW_NUMBER() OVER (ORDER BY A.inspectDate DESC) AS _ROWNUM
	        FROM (SELECT EI.INSPECT_DATE     inspectDate,
	                     EI.INSPECT_ID        inspectId,
	                     EI.INSPECT_SERIAL    inspectSerial,
	                     EI.INSPECT_PEPOLES   inspectPepoles,
	                     EI.INSPECT_RESULT    inspectResult,
	                     EI.EXW_SERIAL        exwserial,
	                     EI.BUILDING_NUM      buildingnum,
	                     EI.RECORD_ID         recordId,
	                     B.VALUE              inspectResultName,
	                     EI.STATUS            statusName,
	                     EI.REMARK            remark,
	                     EI.LONGITUDE         longitude,
	                     EI.LATITUDE          latitude,
	                     ED.PROJECT_NAME      projectName,
						 EI.RECTIFICATION     rectification,
	                     'EQUIP_INSPECT'      relateModule
	                FROM T_EQUIPMENT_INSPECT EI 
					LEFT JOIN BM_INSPECT_RESULT B ON B.CODE = EI.INSPECT_RESULT, T_EQUIPMENT_INSPECT_SCHEMA EIS, T_EQUIPMENT_DIARY ED
	                ,T_CONTRACT_LEASE CL
					LEFT JOIN DEPARTMENT D ON CL.COMPETENT_DEPARTMET_ID = D.DEP_ID
	               WHERE ED.EQUIP_DIARY_ID = EIS.EQUIP_DIARY_ID
	                 AND EIS.INSPECT_SCHEMA_ID = EI.INSPECT_SCHEMA_ID
	                 AND CL.CONTRACT_ID=ED.CONTRACT_ID
					  AND (CHARINDEX(','+CONVERT(VARCHAR,D.DEP_ID)+',',@depId)>0  OR @depId = '' OR @depId IS NULL)
					 AND (LEFT(CONVERT(DATE,EI.INSPECT_DATE),7) LIKE '%'+@year+'%' OR @year = '' OR @year IS NULL)
					AND (LEFT(CONVERT(DATE,EI.INSPECT_DATE),7) >= @startDate OR @startDate = '' OR @startDate IS NULL)
					AND (LEFT(CONVERT(DATE,EI.INSPECT_DATE),7) <= @endDate OR @endDate = '' OR @endDate IS NULL)
	                 AND  (CHARINDEX((CASE WHEN @PROJECT_NAME IS NULL THEN ED.PROJECT_NAME ELSE @PROJECT_NAME END), ED.PROJECT_NAME) > 0
												OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN EI.EXW_SERIAL ELSE @EXW_SERIAL END), EI.EXW_SERIAL) > 0
												OR CHARINDEX((CASE WHEN @BUILDING_NUM IS NULL THEN EI.BUILDING_NUM ELSE @BUILDING_NUM END), EI.BUILDING_NUM) > 0
												OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN EI.RECORD_ID ELSE @RECORD_ID END), EI.RECORD_ID) > 0 )
					 AND ( EI.RECTIFICATION ='1' OR ( EI.RECTIFICATION !='2' AND CHARINDEX(EI.INSPECT_RESULT,(CASE WHEN @INSPECT_RESULT IS NULL THEN EI.INSPECT_RESULT ELSE @INSPECT_RESULT END)) > 0) )
					 AND (SELECT dbo.PermissionFilter(CL.PERMISSION_FLAG, @dataPermission))=1
	              ) A
	    ) SELECT (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE) ORDER BY inspectDate desc
	]]>
	</select>
	<!-- 巡检信息列表 -->
	<select id="list_inspect_all2">
	<![CDATA[
		DECLARE @PROJECT_NAME VARCHAR(64)
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @BUILDING_NUM VARCHAR(64)
		DECLARE @RECORD_ID VARCHAR(24)
	    DECLARE @START INT
	    DECLARE @PAGE_SIZE INT
		DECLARE @RECTIFICATION VARCHAR(24)
		DECLARE @INSPECT_RESULT VARCHAR(24)
		DECLARE @dataPermission VARCHAR(300)
		DECLARE	@depId  VARCHAR(256)
		DECLARE	@year  VARCHAR(7)
		DECLARE	@startDate  VARCHAR(7)
		DECLARE	@endDate  VARCHAR(7)

	    SET @PROJECT_NAME = ?
   	    SET @EXW_SERIAL = ?
   	    SET @BUILDING_NUM = ?
   	    SET @RECORD_ID = ?
	    SET @START = ?
	    SET @PAGE_SIZE = ?
		SET @RECTIFICATION = ?
		SET @INSPECT_RESULT =?
		SET @dataPermission =?
		SET @depId =?
		SET @year =?
		SET @startDate =?
		SET @endDate =?

	    ;WITH QUERY AS (
	      SELECT
			CONVERT(CHAR(10),A.inspectDate,23) inspectDate,inspectId,inspectPepoles,inspectResult,exwserial,buildingnum,recordId,
			inspectResultName,statusName,remark,longitude,latitude,projectName,rectification,relateModule
			, ROW_NUMBER() OVER (ORDER BY A.inspectDate DESC) AS _ROWNUM
	        FROM (SELECT EI.INSPECT_DATE     inspectDate,
	                     EI.INSPECT_ID        inspectId,
	                     EI.INSPECT_SERIAL    inspectSerial,
	                     EI.INSPECT_PEPOLES   inspectPepoles,
	                     EI.INSPECT_RESULT    inspectResult,
	                     EI.EXW_SERIAL        exwserial,
	                     EI.BUILDING_NUM      buildingnum,
	                     EI.RECORD_ID         recordId,
	                     B.VALUE              inspectResultName,
	                     EI.STATUS            statusName,
	                     EI.REMARK            remark,
	                     EI.LONGITUDE         longitude,
	                     EI.LATITUDE          latitude,
	                     ED.PROJECT_NAME      projectName,
						 EI.RECTIFICATION     rectification,
	                     'EQUIP_INSPECT'      relateModule
	                FROM T_EQUIPMENT_INSPECT EI LEFT JOIN BM_INSPECT_RESULT B ON B.CODE = EI.INSPECT_RESULT, T_EQUIPMENT_INSPECT_SCHEMA EIS, T_EQUIPMENT_DIARY ED
	                 ,T_CONTRACT_LEASE CL
	                 	LEFT JOIN DEPARTMENT D ON CL.COMPETENT_DEPARTMET_ID = D.DEP_ID
	               WHERE ED.EQUIP_DIARY_ID = EIS.EQUIP_DIARY_ID
	                 AND EIS.INSPECT_SCHEMA_ID = EI.INSPECT_SCHEMA_ID
	                 AND CL.CONTRACT_ID=ED.CONTRACT_ID
	                 AND (CHARINDEX(','+CONVERT(VARCHAR,D.DEP_ID)+',',@depId)>0  OR @depId = '' OR @depId IS NULL)
					 AND (LEFT(CONVERT(DATE,EI.INSPECT_DATE),7) LIKE '%'+@year+'%' OR @year = '' OR @year IS NULL)
					 AND (LEFT(CONVERT(DATE,EI.INSPECT_DATE),7) >= @startDate OR @startDate = '' OR @startDate IS NULL)
					 AND (LEFT(CONVERT(DATE,EI.INSPECT_DATE),7) <= @endDate OR @endDate = '' OR @endDate IS NULL)
	                 AND (CHARINDEX((CASE WHEN @PROJECT_NAME IS NULL THEN ED.PROJECT_NAME ELSE @PROJECT_NAME END), ED.PROJECT_NAME) > 0
												OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN EI.EXW_SERIAL ELSE @EXW_SERIAL END), EI.EXW_SERIAL) > 0
												OR CHARINDEX((CASE WHEN @BUILDING_NUM IS NULL THEN EI.BUILDING_NUM ELSE @BUILDING_NUM END), EI.BUILDING_NUM) > 0
												OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN EI.RECORD_ID ELSE @RECORD_ID END), EI.RECORD_ID) > 0 )
					 AND ( (EI.RECTIFICATION !='1' ) AND CHARINDEX(EI.INSPECT_RESULT,(CASE WHEN @INSPECT_RESULT IS NULL THEN EI.INSPECT_RESULT ELSE @INSPECT_RESULT END)) > 0)
				  	AND (SELECT dbo.PermissionFilter(CL.PERMISSION_FLAG, @dataPermission))=1
				

	              ) A
	    ) SELECT (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE) ORDER BY inspectDate desc
	]]>
	</select>
	<!-- 拆卸信息列表 -->
	<select id="list_dismantle_all">
	<![CDATA[
		DECLARE @PROJECT_NAME VARCHAR(64)
		DECLARE @RECORD_ID VARCHAR(64)
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @BUILDING_NUM VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		SET @PROJECT_NAME = ?
		SET @RECORD_ID = ?
		SET @EXW_SERIAL = ?
		SET @BUILDING_NUM = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		;WITH QUERY AS (
	      SELECT *, ROW_NUMBER() OVER (ORDER BY A.startdisDate DESC) AS _ROWNUM 
	        FROM (SELECT DIS.DISMANTLE_ID     dismantleId,
	                     ED.PROJECT_NAME      projectName,
	                     ED.RECORD_ID         recordId,
	                     ED.EXW_SERIAL        exwserial,
			             ED.BUILDING_NUM      buildingnum,
	                     CONVERT(varchar(10), DIS.STARTDIS_DATE, 23)    startdisDate,
	                     CONVERT(varchar(10), DIS.ENDDIS_DATE, 23)      enddisDate,
	                     DIS.DISMANTLE_HEIGHT dismantleHeight,
	                     DIS.LONGITUDE        longitude,
	                     DIS.LATITUDE         latitude,
	                     DIS.USER_NAME        userName,
	                     EF.DISPATCH_ID       dispatchId,
	                     'EQUIP_DISMANTLE'    relateModule
	                FROM T_EQUIPMENT_DISMANTLE DIS,
	                     T_EQUIPMENT_FLOW      EF,
	                     T_EQUIPMENT_DIARY     ED
	               WHERE DIS.FLOW_ID = EF.FLOW_ID
	                 AND EF.FLOW_ID = ED.FLOW_ID
	                 AND (     CHARINDEX((CASE WHEN @PROJECT_NAME IS NULL THEN ED.PROJECT_NAME ELSE @PROJECT_NAME END), ED.PROJECT_NAME) > 0 
	                 		OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN ED.RECORD_ID ELSE @RECORD_ID END), ED.RECORD_ID) > 0 
	                 		OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN ED.EXW_SERIAL ELSE @EXW_SERIAL END), ED.EXW_SERIAL) > 0 
							OR CHARINDEX((CASE WHEN @BUILDING_NUM IS NULL THEN ED.BUILDING_NUM ELSE @BUILDING_NUM END), ED.BUILDING_NUM) > 0 
	                 		)
	              UNION ALL
	              SELECT DM.DISMANTLE_ID      dismantleId,
	                     DM.PROJECT_NAME      projectName,
	                     DM.RECORD_ID         recordId,
	                     DM.EXW_SERIAL		  exwserial,
			             DM.BUILDING_NUM	  buildingnum,
	                     CONVERT(varchar(10), DM.STARTDIS_DATE, 23)     startdisDate,
	                     CONVERT(varchar(10), DM.ENDDIS_DATE, 23)       enddisDate,
	                     DM.DISMANTLE_HEIGHT  dismantleHeight,
	                     DM.LONGITUDE         longitude,
	                     DM.LATITUDE          latitude,
	                     DM.USER_NAME         userName,
	                     NULL                 dispatchId,
	                     'DISMANTLE_MANAGE'   relateModule
	                FROM T_DISMANTLE_MANAGE DM
	               WHERE CHARINDEX((CASE WHEN @PROJECT_NAME IS NULL THEN DM.PROJECT_NAME ELSE @PROJECT_NAME END), DM.PROJECT_NAME) > 0 
	                  OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN DM.RECORD_ID ELSE @RECORD_ID END), DM.RECORD_ID) > 0 
	                  OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN DM.EXW_SERIAL ELSE @EXW_SERIAL END), DM.EXW_SERIAL) > 0 
					  OR CHARINDEX((CASE WHEN @BUILDING_NUM IS NULL THEN DM.BUILDING_NUM ELSE @BUILDING_NUM END), DM.BUILDING_NUM) > 0 
	              ) A
	    ) SELECT (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE) ORDER BY dismantleId desc
	]]>
	</select>
	<select id="list_chk_man">
	<![CDATA[
		SELECT U.USERID, U.FULLNAME AS USERNAME FROM APP_USER U,USER_ROLE R WHERE U.USERID=R.USERID AND STATUS=1 AND U.DELFLAG=0 
			AND U.FULLNAME LIKE ? AND R.ROLEID=? ORDER BY U.USERID
	]]>	
	</select>
	<select id="list_project">
	<![CDATA[
		SELECT P.PROJECT_ID,P.PROJECT_SERIAL,P.PROJECT_NAME,P.ADDRESS FROM T_PROJECT P WHERE P.DEL_FLAG=1
				AND P.PROJECT_NAME LIKE ? ORDER BY P.PROJECT_ID
	]]>	
	</select>
	<select id="list_inuse_project">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE @STATUS  VARCHAR(64)
        DECLARE @KEYWORD  VARCHAR(64)
        SET @START = ?
        SET @PAGE_SIZE =?
        SET @STATUS = ?
        SET @KEYWORD = ?
        ;WITH QUERY AS (
		SELECT COUNT(_EQUIP.EQUIP_ID) AS coutequip, P.PROJECT_ID AS projectId, P.PROJECT_SERIAL AS projectSerial, P.PROJECT_NAME AS projectName, P.ADDRESS AS address,bc.longitude,bc.latitude
		, (SELECT TOP 1 CL.PA_ENT_NAME FROM T_CONTRACT_LEASE CL WHERE P.PROJECT_ID = CL.PROJECT_ID) AS paEntName,
		(SELECT TOP 1 CL.PA_ENT FROM T_CONTRACT_LEASE CL WHERE P.PROJECT_ID = CL.PROJECT_ID) AS paEnt,ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
		FROM  T_EQUIPMENT _EQUIP, T_PROJECT P,BM_COUNTY bc
			Where _EQUIP.PROJECT_ID = P.PROJECT_ID
			AND P.DEL_FLAG = 1
			AND P.STATUS=3
			AND bc.CODE=P.COUNTY
			AND (CHARINDEX(@KEYWORD, P.PROJECT_NAME) > 0
				 OR P.ADDRESS LIKE '%'+@KEYWORD+'%')
			 GROUP BY P.PROJECT_ID, P.PROJECT_SERIAL, P.PROJECT_NAME, P.ADDRESS,bc.longitude,bc.latitude) 
			SELECT (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>	
	</select>
	<select id="list_inuse_project2">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
         DECLARE @STATUS  VARCHAR(64)
        SET @START = ?
        SET @PAGE_SIZE =?
        SET @STATUS = ?
        ;WITH QUERY AS (
		SELECT COUNT(_EQUIP.EQUIP_ID) AS coutequip, P.PROJECT_ID AS projectId, P.PROJECT_SERIAL AS projectSerial, P.PROJECT_NAME AS projectName, P.ADDRESS AS address,bc.longitude,bc.latitude
		, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
		FROM  T_EQUIPMENT _EQUIP, T_PROJECT P,BM_COUNTY bc
			Where _EQUIP.PROJECT_ID = P.PROJECT_ID
			AND P.DEL_FLAG = 1
			AND _EQUIP.DEL_FLAG = 1
			AND _EQUIP.STATUS = 0
			AND _EQUIP.STORE_STATUS <>5
			AND (_EQUIP.BUSINESS_STATUS BETWEEN 3 AND 6)
			AND bc.CODE=P.COUNTY
			 GROUP BY P.PROJECT_ID, P.PROJECT_SERIAL, P.PROJECT_NAME, P.ADDRESS,bc.longitude,bc.latitude) 
			SELECT (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>	
	</select>
<!-- 	<select id="list_inuse_project">  by_dispatch
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
         DECLARE @STATUS  VARCHAR(64)
        SET @START = ?
        SET @PAGE_SIZE =?
        SET @STATUS = ?
        ;WITH QUERY AS (
		SELECT COUNT(_DE.EQUIP_ID) AS coutequip, P.PROJECT_ID AS projectId, P.PROJECT_SERIAL AS projectSerial, P.PROJECT_NAME AS projectName, P.ADDRESS AS address
		, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
		FROM  T_EQUIPMENT _EQUIP
			FULL JOIN T_DISPATCH_EQUIP _DE ON _DE.EQUIP_ID = _EQUIP.EQUIP_ID
			FULL JOIN T_DISPATCH _DISPATCH ON _DISPATCH.DISPATCH_ID = _DE.DISPATCH_ID 
			FULL JOIN T_PROJECT P ON _DISPATCH.PROJECT_ID = P.PROJECT_ID
			WHERE P.DEL_FLAG = 1
			AND P.STATUS = @STATUS
			 GROUP BY P.PROJECT_ID, P.PROJECT_SERIAL, P.PROJECT_NAME, P.ADDRESS) 
			SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>	
	</select> -->
	<select id="list_users">
	<![CDATA[
		SELECT U.USERID, U.FULLNAME AS USERNAME,U.MOBILE ,D.DEP_NAME DEPNAME,U.CORP_ID,CI.CORP_NAME
		FROM APP_USER U
		LEFT JOIN DEPARTMENT D ON U.DEP_ID = D.DEP_ID
		LEFT JOIN T_CORP_INFO CI ON U.CORP_ID = CI.CORP_ID
		WHERE U.DELFLAG=0 and STATUS=1
		AND (U.FULLNAME LIKE ? or D.DEP_NAME LIKE ?)
		ORDER BY U.USERID
	]]>
	</select>
	<select id="list_usersForConstruct">
		<![CDATA[
		SELECT U.USERID, U.FULLNAME AS USERNAME,U.MOBILE
		FROM APP_USER U
		WHERE U.DELFLAG=0 and STATUS=1
		AND U.FULLNAME LIKE ?
		ORDER BY U.USERID
	]]>
	</select>
	<select id="list_types">
	<![CDATA[
		SELECT *,1 enable FROM T_APP_REPAIR_TYPE where PARENTID=? ORDER BY ID
		]]>	
	</select>

	<select id="list_app_repair">
		<![CDATA[
		SELECT R.*,(SELECT FULLNAME FROM APP_USER WHERE USERID=R.CREATE_BY) AS CREATE_BYNAME,CASE R.STATE WHEN '1' THEN '待处理' WHEN '2' THEN '派工中' 	WHEN '3' THEN '处理中' WHEN '4' THEN '完成' WHEN '0' THEN '结案' END AS STATENAME  
		FROM T_APP_REPAIR R 
		WHERE R.STATE=?  AND (R.CREATE_BY =? OR PROC_MAN LIKE ? ) AND (R.PROJ_NAME LIKE ? OR R.RECORD_SERIAL LIKE ?  OR R.EXW_SERIAL LIKE ? OR R.BUILDING_NUM LIKE ? OR R.EQUIP_ID= ?) ORDER BY R.REPID DESC
		]]>			
	</select>

	<!-- 开工项目-设备-维修信息 -->
	<select id="list_equip_repair">
		<![CDATA[
		SELECT R.*,(SELECT FULLNAME FROM APP_USER WHERE USERID=R.CREATE_BY) AS CREATE_BYNAME,CASE R.STATE WHEN '1' THEN '待处理' WHEN '2' THEN '派工中' 	WHEN '3' THEN '处理中' WHEN '4' THEN '完成' WHEN '0' THEN '结案' END AS STATENAME  
		FROM T_APP_REPAIR R 
		WHERE   R.CREATE_BY =?  AND  R.EQUIP_ID=? ORDER BY R.REPID DESC		]]>			
	</select>
		<select id="list_app_repair_admin">
		<![CDATA[
		DECLARE @projState VARCHAR(1)
		DECLARE @userId VARCHAR(32)
		DECLARE @projName VARCHAR(128)
		DECLARE @recordSerial VARCHAR(128)
		DECLARE @exwSerial VARCHAR(128)
		DECLARE @buildNum VARCHAR(128)
		DECLARE @equipId BIGINT
				SET @projState=?
				SET @userId=?
				SET @projName=?
				SET @recordSerial=?
				SET @exwSerial=?
				SET @buildNum=?
				SET @equipId=?
		SELECT
			R.*, ( SELECT FULLNAME FROM APP_USER WHERE USERID = R.CREATE_BY ) AS CREATE_BYNAME,
		CASE R.STATE 
				WHEN '1' THEN '待处理' 
				WHEN '2' THEN '派工中' 
				WHEN '3' THEN '处理中' 
				WHEN '4' THEN '完成' 
				WHEN '0' THEN '结案' 
			END AS STATENAME 
		FROM T_APP_REPAIR R 
		WHERE R.STATE=@projState
			AND (
				R.PROJ_NAME LIKE @projName
				OR R.RECORD_SERIAL LIKE @recordSerial
				OR R.EXW_SERIAL LIKE @exwSerial
				OR R.BUILDING_NUM LIKE @buildNum 
				OR R.EQUIP_ID= @equipId
			) 
			AND (@projState <>2 OR CREATE_BY=CONVERT(BIGINT,@userId) OR CHARINDEX(@userId, DIS_MAN )>0) 
		ORDER BY R.REPID DESC
		]]>			
	</select>
			<select id="count_app_repair_all">
		<![CDATA[
		DECLARE	@CREATE_BY BIGINT
		DECLARE	@dataPermission  VARCHAR(500)
		SET @CREATE_BY = ?
		SET @dataPermission=?
		SELECT 
			COUNT(CASE WHEN R.STATE = 0 THEN 1 END) as zeroNum,
			COUNT(CASE WHEN R.STATE = 1 THEN 2 END) as oneNum,
			COUNT(CASE WHEN R.STATE = 2 THEN 3 END) as twoNum,
			COUNT(CASE WHEN R.CREATE_BY =@CREATE_BY AND (R.STATE = 3 OR R.STATE = 2) THEN 1 END) as threeNum
		FROM T_APP_REPAIR R 
		LEFT JOIN APP_USER_EXTEND AU ON R.CREATE_BY = AU.USERID
		LEFT JOIN T_PRACTITIONER P ON AU.FOREIGN_ID = P.PRACTI_ID
		WHERE AU.FOREIGN_MODULE = 'PRACTITIONER'
		AND (SELECT dbo.PermissionFilter(P.PERMISSION_FLAG, @dataPermission))=1
		
		]]>			
	</select>
	<select id="count_app_repair">
		<![CDATA[
		SELECT COUNT(*) as NUM,STATE
		FROM T_APP_REPAIR R 
		WHERE (R.PROJ_NAME LIKE ? OR R.RECORD_ID LIKE ?  OR R.EXW_SERIAL LIKE ? OR R.BUILDING_NUM LIKE ? ) GROUP BY R.STATE
		]]>			
	</select>
	<select id="list_app_equips">
		<![CDATA[
		SELECT * FROM (
			SELECT  ROW_NUMBER() OVER (ORDER BY R.EQUIP_ID) AS _ROWNUM ,R.EQUIP_GENERIC,R.EQUIP_SERIAL,R.PROJECT_ID,R.EQUIP_ID ,R.EXW_SERIAL,R.BUILDING_NUM,P.PROJECT_NAME,R.RECORD_ID,(SELECT VALUE FROM BM_EQUIP_SPECIFIC WHERE CODE = R.EQUIP_SPECIFIC) as SPECIFICNAME  
			FROM T_EQUIPMENT R 
			LEFT JOIN T_PROJECT P ON P.PROJECT_ID = R.PROJECT_ID 
			WHERE R.STATUS IN(0,1,2,4,6,7,9) AND (P.PROJECT_NAME LIKE ? OR R.EXW_SERIAL LIKE ? OR R.RECORD_ID like ?) AND R.DEL_FLAG = 1) A WHERE  A._ROWNUM>= ? AND A._ROWNUM <= ?
		]]>			
	</select>
	<select id="get_app_equipnums">
		<![CDATA[
		SELECT  count(*) AS _ROWNUM FROM T_EQUIPMENT R LEFT JOIN T_PROJECT P ON P.PROJECT_ID = R.PROJECT_ID  WHERE R.STATUS IN(0,1,2) AND (P.PROJECT_NAME LIKE ? OR R.EXW_SERIAL LIKE ? OR R.RECORD_ID like ?) AND R.DEL_FLAG = 1
		]]>			
	</select>
	<select id="review_count">
	<![CDATA[
		SELECT COUNT(*) AS NUM,SCORE FROM T_REVIEW WHERE  RELATE_ID=? AND RELATE_MODULE=? GROUP BY SCORE	
			]]>	
	</select>
	<select id="get_currentAppPracti">
	<![CDATA[
		SELECT * FROM T_PRACTITIONER P
		LEFT JOIN T_CORP_INFO CI ON P.CORP_ID = CI.CORP_ID
		WHERE P.USERID = ?	
			]]>
	</select>
	<select id="get_currentAppUser">
	<![CDATA[
		SELECT * FROM APP_USER P
		WHERE P.USERID = ?
			]]>
	</select>
		<select id="get_currentAntiFallAppUser">
	<![CDATA[
		SELECT * FROM T_CORP_INFO P
		WHERE P.CORP_ID = ?	
			]]>	
	</select>
	
		<select id="get_toSendUser">
	<![CDATA[
	 select * from T_CORP_INFO where CORP_ID=(
		select PB_ENT from T_CONTRACT_LEASE where contract_ID=( select RELATE_ID from T_DISPATCH where DISPATCH_ID=?));
			]]>	
	</select>
	
	<select id="get_toSendUserFromContratArrange">
	<![CDATA[
	 select * from T_CORP_INFO where CORP_ID=?;
			]]>	
	</select>
    <!-- 项目配件信息列表 -->
    <select id="list_project_compon">
        <![CDATA[
		DECLARE @COMPON_SERIAL VARCHAR(64)
		DECLARE @DIMENSIONS VARCHAR(64)
		DECLARE @COMPON_GENERIC_NAME VARCHAR(64)
		DECLARE @COMPON_SPECIFIC_NAME VARCHAR(64)
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		DECLARE @PROJECT_ID BIGINT
		SET @COMPON_SERIAL = ?
		SET @DIMENSIONS = ?
		SET @COMPON_GENERIC_NAME = ?
		SET @COMPON_SPECIFIC_NAME = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		SET @PROJECT_ID = ?
		SET @EXW_SERIAL = ?
		;WITH QUERY AS (
			SELECT C.COMPON_ID componId  , CSS.EXW_SERIAL exwSerial,C.COMPON_SERIAL componSerial,PC.COUNTS freeCounts, C.DIMENSIONS dimensions, CG.VALUE componGenericName, CS.VALUE componSpecificName, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			  FROM T_PROJECT_COMPON PC
			  LEFT JOIN T_COMPONENT C ON C.COMPON_ID = PC.COMPON_ID
			  LEFT JOIN BM_COMPONENT_GENERIC CG ON CG.CODE = C.COMPON_GENERIC
			  LEFT JOIN BM_COMPONENT_SPECIFIC CS ON CS.CODE = C.COMPON_SPECIFIC
			  LEFT JOIN T_EQUIPMENT CSS ON CSS.EQUIP_ID=C.EQUIP_ID
			  WHERE (CHARINDEX((CASE WHEN @COMPON_SERIAL IS NULL THEN C.COMPON_SERIAL ELSE @COMPON_SERIAL END), C.COMPON_SERIAL) > 0
			     OR CHARINDEX((CASE WHEN @DIMENSIONS IS NULL THEN C.DIMENSIONS ELSE @DIMENSIONS END), C.DIMENSIONS) > 0
			      OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN CSS.EXW_SERIAL ELSE @EXW_SERIAL END), CSS.EXW_SERIAL) > 0
			     OR CHARINDEX((CASE WHEN @COMPON_GENERIC_NAME IS NULL THEN CG.VALUE ELSE @COMPON_GENERIC_NAME END), CG.VALUE) > 0
			     OR CHARINDEX((CASE WHEN @COMPON_SPECIFIC_NAME IS NULL THEN CS.VALUE ELSE @COMPON_SPECIFIC_NAME END), CS.VALUE) > 0)
			     AND C.DEL_FLAG = '1' AND PC.COUNTS <> 0
			     AND PC.STATUS = '0'
			     AND (@PROJECT_ID IS NULL OR @PROJECT_ID = '' OR PC.PROJECT_ID = @PROJECT_ID)
		) SELECT
			componId,
			componSerial,
			SUM(freeCounts) consumeCounts,
			dimensions,
			componGenericName,
			componSpecificName,
			exwSerial
		FROM(
		SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)) A
		GROUP BY componId,componSerial,dimensions,componGenericName,componSpecificName,exwSerial
	]]>
    </select>
	<!-- 车俩列表 -->
    <select id="list_car">
        <![CDATA[
		DECLARE @LICENSE_PLATE VARCHAR(64)
		DECLARE @SEDAN VARCHAR(64)
		DECLARE @PROPERTY_NAME VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		SET @LICENSE_PLATE = ?
		SET @SEDAN = ?
		SET @PROPERTY_NAME = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		;WITH QUERY AS (
			SELECT top(@PAGE_SIZE) C.CAR_ID carId  , C.LICENSE_PLATE licensePlate, C.SEDAN sedan, C.PROPERTY_NAME propertyName,C.DRIVER_PHONE driverPhone, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			  FROM T_CAR C
			  WHERE (CHARINDEX((CASE WHEN @LICENSE_PLATE IS NULL THEN C.LICENSE_PLATE ELSE @LICENSE_PLATE END), C.LICENSE_PLATE) > 0
			     OR CHARINDEX((CASE WHEN @SEDAN IS NULL THEN C.SEDAN ELSE @SEDAN END), C.SEDAN) > 0
				 OR CHARINDEX((CASE WHEN @PROPERTY_NAME IS NULL THEN C.PROPERTY_NAME ELSE @PROPERTY_NAME END), C.PROPERTY_NAME) > 0)
				 AND C.STATUS = '1'
			     AND C.DEL_FLAG = '1'
		) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE) ORDER BY carId DESC
        ]]>
    </select>
	<!-- 装车物流列表 -->
	<select id="list_logistics">
		<![CDATA[
		DECLARE @KEYWORD VARCHAR(64)
		DECLARE @DELIVERY_MAN VARCHAR(64)
		DECLARE @LICENSE_PLATE VARCHAR(64)
		DECLARE @SEND_WAREHOUSE_NAME VARCHAR(64)
		DECLARE @RECEIVE_WAREHOUSE_NAME VARCHAR(64)
		DECLARE @SUMMARY VARCHAR(64)
		DECLARE @STATUS VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		DECLARE @EQUIP_SERIAL VARCHAR(64)
		SET @KEYWORD = ?
		SET @STATUS = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		SET @DELIVERY_MAN = @KEYWORD
		SET @SEND_WAREHOUSE_NAME = @KEYWORD
		SET @RECEIVE_WAREHOUSE_NAME = @KEYWORD
		SET @LICENSE_PLATE = @KEYWORD
		SET @SUMMARY = @KEYWORD
	    ;WITH QUERY AS (
			SELECT L.LOGI_ID logiId  ,ADED.EQUIP_ID,L.DISID disId,L.DELIVERY_DATE deliveryDate, L.DELIVERY_MAN deliveryMan, L.SEND_WAREHOUSE_NAME sendWarehouseName,L.RECEIVE_WAREHOUSE_NAME receiveWarehouseName, L.PROPERTY_NAME propertyName,L.SUMMARY summary,L.STATUS status,L.LICENSE_PLATE licensePlate, ROW_NUMBER() OVER (ORDER BY L.LOGI_ID DESC) AS _ROWNUM
			  FROM T_APP_LOGISTICS L
			  LEFT JOIN T_APP_DISPATCH_EQUIP_DETAIL ADED ON ADED.DISID = L.DISID
			  WHERE (CHARINDEX((CASE WHEN @DELIVERY_MAN IS NULL THEN L.DELIVERY_MAN ELSE @DELIVERY_MAN END), L.DELIVERY_MAN) > 0
			     OR CHARINDEX((CASE WHEN @SEND_WAREHOUSE_NAME IS NULL THEN L.SEND_WAREHOUSE_NAME ELSE @SEND_WAREHOUSE_NAME END), L.SEND_WAREHOUSE_NAME) > 0
				 OR CHARINDEX((CASE WHEN @RECEIVE_WAREHOUSE_NAME IS NULL THEN L.RECEIVE_WAREHOUSE_NAME ELSE @RECEIVE_WAREHOUSE_NAME END), L.RECEIVE_WAREHOUSE_NAME) > 0
				 OR CHARINDEX((CASE WHEN @LICENSE_PLATE IS NULL THEN L.LICENSE_PLATE ELSE @LICENSE_PLATE END), L.LICENSE_PLATE) > 0
				 OR L.SUMMARY LIKE '%'+@SUMMARY+'%')
				 AND CHARINDEX((CASE WHEN @STATUS IS NULL THEN L.STATUS ELSE @STATUS END), L.STATUS) > 0
		) SELECT Q.*,E.EQUIP_SERIAL AS equipSerial FROM QUERY Q LEFT JOIN T_EQUIPMENT E ON Q.EQUIP_ID = E.EQUIP_ID 
		WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE) ORDER BY _ROWNUM
        ]]>
	</select>
	<!-- 当前设备各状态数量统计 -->
	<select id="equip_count">
	<![CDATA[
		Select INUSE=(COUNT(case when((BUSINESS_STATUS >= '3' or BUSINESS_STATUS <='6') AND (STATUS =0 or STATUS=8 or STATUS =9)) then '1' end))
		,NOTINUSE=(COUNT(case when(BUSINESS_STATUS ='0'  AND STATUS =1) then '2' end))
		,BROKEN=(COUNT(case when(BUSINESS_STATUS='7' or BUSINESS_STATUS ='9' or STATUS =4) then '3' end)) 
		,OUT=(COUNT(case when(BUSINESS_STATUS ='2' AND STATUS =1 AND ) then '4' end))
		,SCRAP= (COUNT(case when(STATUS =6) then '1' end))
		from T_EQUIPMENT t where DEL_FLAG = 1 
	]]>
	</select>
	<!-- 查看指定状态的设备 -->
<!-- 	<select id="list_equip_on_status">
		<![CDATA[
		DECLARE @BUSINESS_STATUS VARCHAR(128)
		DECLARE @BUSINESS_STATUS1 VARCHAR(128)
		SET @BUSINESS_STATUS = ?
		SET @BUSINESS_STATUS1 = ?
		 Select D.* from T_EQUIPMENT D where D.DEL_FLAG = 1  
		 and ((CHARINDEX((CASE WHEN @BUSINESS_STATUS IS NULL THEN D.BUSINESS_STATUS ELSE @BUSINESS_STATUS END), D.BUSINESS_STATUS) > 0 
		 or CHARINDEX((CASE WHEN @BUSINESS_STATUS1 IS NULL THEN D.BUSINESS_STATUS ELSE @BUSINESS_STATUS1 END), D.BUSINESS_STATUS) > 0)) 
        ]]>
	</select> -->
	<!-- 结算详情 -->
	<select id="list_settle_contract">
	<![CDATA[
		DECLARE @PROJECT_ID  VARCHAR(24)
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        SET @PROJECT_ID =?
        SET @START =?
        SET @PAGE_SIZE = ?  	
             ;WITH QUERY AS (
			SELECT SUM(T.SETTLE_AMOUNT) totalAmout,
			SUM(T.BALANCE_AMOUNT) totalFinishAmount,
			SUM(T.FINISHED_AMOUNT) totalBalanceAmount,
			T.BALANCE_AMOUNT balanceAmount,T.FINISHED_AMOUNT finishAmount,T.SETTLE_AMOUNT settleAmout, T.CONTRACT_SERIAL contractSerial,
			T.PA_ENT_NAME paEntName,T.START_SETTLE_DATE startDate,T.END_SETTLE_DATE endDate,
			ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			 FROM T_SETTLE_CONTRACT T 
			 WHERE PROJECT_ID = @PROJECT_ID  AND T.DEL_FLAG = 1 GROUP BY 
			 T.SETTLE_AMOUNT,T.FINISHED_AMOUNT,T.BALANCE_AMOUNT,T.BALANCE_AMOUNT,T.FINISHED_AMOUNT,T.SETTLE_AMOUNT,T.CONTRACT_SERIAL ,
			 T.PA_ENT_NAME,T.START_SETTLE_DATE,T.END_SETTLE_DATE
			 )SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!--消息统计 -->
	<select id="message_count">
	<![CDATA[
		SELECT COUNT(*) COUNTS from T_BUSINESS_MESSAGE T where READ_FLAG = 0 AND MSG_TYPE='1' and RECEIVE_TEL = ?
	]]>
	</select>
	<select id="remote_repair">
	<![CDATA[
		Select * FROM T_ELEVATOR_MONITOR WHERE EQUIPMENT_STATUS = ?
	]]>
	</select>
	<!-- 项目资产-配件 -->
	<select id="query_comp">
	<![CDATA[
		DECLARE @PROJECT_ID  VARCHAR(24)
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
         SET @PROJECT_ID = ?
        SET @START = ?
        SET @PAGE_SIZE = ?
   	     ;WITH QUERY AS (
		 SELECT T.STATUS status,T.COUNTS counts, _BG.VALUE componGeneric, _BC.VALUE componSpecific
		 , ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
		FROM T_PROJECT_COMPON T, T_COMPONENT C
		LEFT JOIN BM_COMPONENT_GENERIC _BG ON _BG.CODE = C.COMPON_GENERIC
		LEFT JOIN BM_COMPONENT_SPECIFIC _BC ON _BC.CODE = C.COMPON_SPECIFIC
		WHERE C.COMPON_ID = T.COMPON_ID
		AND T.PROJECT_ID = @PROJECT_ID
		AND T.COUNTS>0
		)SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!-- 维修次数-->
	<select id="list_repair_counts">
	<![CDATA[
		 DECLARE @PROJECT_ID  VARCHAR(24)
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        SET @PROJECT_ID = ?
        SET @START = ?
        SET @PAGE_SIZE =?
   	     ;WITH QUERY AS (
		SELECT REPAIR_ID AS repairId, REPAIR_SERIAL AS repairSerial, PROJECT_ID AS projectId, EQUIP_ID AS equipId, PHENOMENON AS phenomenon
		, REPAIR_MAN AS repairMan, REPAIR_AMOUNT AS repairAmount, REPAIR_RESULT AS repairResult, STATUS AS status, USER_ID AS userId
		, USER_NAME AS userName, DEP_ID AS depId, PROVIDED_DATE AS providedDate, APPLYFOR_STATE AS applyforState
		 , ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
		FROM T_EQUIPMENT_REPAIR
		WHERE PROJECT_ID =  @PROJECT_ID)SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!-- 首页统计-->
	<select id="list_all_counts">
	<![CDATA[
		DECLARE @STATE VARCHAR(128)
		DECLARE @EQUIPMENT_STATUS VARCHAR(128)
		DECLARE @STATUS VARCHAR(128)
		DECLARE @RECEIVE_TEL VARCHAR(128)
		SET @STATE = ?
		SET  @EQUIPMENT_STATUS = ?
		SET @STATUS = ?
		SET @RECEIVE_TEL = ?
			select  top 1 (select COUNT(*)   from T_APP_REPAIR WHERE STATE = @STATE ) as countRepair,
		(select COUNT(*)  from T_ELEVATOR_MONITOR WHERE EQUIPMENT_STATUS = @EQUIPMENT_STATUS )  as countRemoteRepair, 
		(SELECT COUNT(*) FROM T_BUSINESS_MESSAGE WHERE READ_FLAG = '0' AND MSG_TYPE='0' AND RECEIVE_TEL = @RECEIVE_TEL) as countToDo ,
		(select COUNT(*)  from T_PROJECT P WHERE
			 P.DEL_FLAG = 1
			AND P.STATUS=3
		) as projectInUse from T_PROJECT 
	]]>
	</select>
	
	<!-- 查看指定状态的设备 -->
	
	<!-- 查询闲置在仓设备详情-->
	<select id="list_equip_notinuse_detail">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE @BUSINESS_STATUS VARCHAR(128)
		SET @START = ?
        SET @PAGE_SIZE = ?
        SET @BUSINESS_STATUS =?
        ;WITH QUERY AS (
		SELECT _ACTIVATE.ACTIVATE_DATE AS activateDate, _PROJ.PROJECT_ID AS projectId,_PROJ.PROJECT_NAME AS projectName, _EQUIP.BUILDING_NUM AS				
		buildingNum, _EQUIP.EXW_SERIAL AS exwSerial, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			,_BS.VALUE AS specification,BM.VALUE equipGeneric,  _EQUIP.RECORD_ID AS recordId,_EQUIP.EQUIP_VENDER proName,
			_EQUIP.BRACHIUM brachium,_EQUIP.EQUIP_ID equipId
			FROM T_EQUIPMENT_ACTIVATE _ACTIVATE
			FULL JOIN  T_EQUIPMENT_FLOW _FLOW ON _FLOW.ACTIVATE_ID = _ACTIVATE.ACTIVATE_ID
			FULL JOIN  T_EQUIPMENT _EQUIP ON _EQUIP.FLOW_ID = _FLOW.FLOW_ID
			FULL JOIN T_PROJECT _PROJ ON _EQUIP.PROJECT_ID = _PROJ.PROJECT_ID
			LEFT JOIN BM_EQUIP_GENERIC BM ON BM.CODE = _EQUIP.EQUIP_GENERIC 
			LEFT JOIN BM_EQUIP_SPECIFIC _BS ON _BS.CODE = _EQUIP.EQUIP_SPECIFIC
			WHERE _EQUIP.BUSINESS_STATUS = @BUSINESS_STATUS  AND _EQUIP.DEL_FLAG =1 AND _EQUIP.STATUS = 1) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)				]]>
	</select>
	<!-- 查询出仓未启用设备详情-->
	<select id="list_equip_out_detail">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE @BUSINESS_STATUS VARCHAR(128)
		SET @START = ?
        SET @PAGE_SIZE = ?
        SET @BUSINESS_STATUS =?
		;WITH QUERY AS (
			SELECT _ACTIVATE.ACTIVATE_DATE AS activateDate,_PROJ.PROJECT_ID AS projectId, _PROJ.PROJECT_NAME AS projectName,
			 _EQUIP.BUILDING_NUM AS buildingNum, _EQUIP.EXW_SERIAL AS exwSerial
			, _EQUIP.RECORD_ID AS recordId,_BS.VALUE AS specification,BM.VALUE equipGeneric,  ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_EQUIPMENT_ACTIVATE _ACTIVATE
			FULL JOIN  T_EQUIPMENT_FLOW _FLOW ON _FLOW.ACTIVATE_ID = _ACTIVATE.ACTIVATE_ID
			FULL JOIN  T_EQUIPMENT _EQUIP ON _EQUIP.FLOW_ID = _FLOW.FLOW_ID
			FULL JOIN T_PROJECT _PROJ ON _EQUIP.PROJECT_ID = _PROJ.PROJECT_ID
			LEFT JOIN BM_EQUIP_GENERIC BM ON BM.CODE = _EQUIP.EQUIP_GENERIC 
			LEFT JOIN BM_EQUIP_SPECIFIC _BS ON _BS.CODE = _EQUIP.EQUIP_SPECIFIC
			WHERE  _EQUIP.BUSINESS_STATUS ='2' AND _EQUIP.DEL_FLAG =1 AND _EQUIP.STATUS = 1) 
			SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
			]]>
	</select>
	<!-- 查询报停未入仓设备详情-->
	<select id="list_equip_broke_detail">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE @BUSINESS_STATUS VARCHAR(128)
		SET @START = ?
        SET @PAGE_SIZE = ?
        SET @BUSINESS_STATUS =?
		;WITH QUERY AS (
			SELECT _ACTIVATE.ACTIVATE_DATE AS activateDate,_PROJ.PROJECT_ID AS projectId, _PROJ.PROJECT_NAME AS projectName,
			 _EQUIP.BUILDING_NUM AS buildingNum, _EQUIP.EXW_SERIAL AS exwSerial
			, _EQUIP.RECORD_ID AS recordId,_BS.VALUE AS specification,BM.VALUE equipGeneric, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM  T_EQUIPMENT_ACTIVATE _ACTIVATE
			FULL JOIN  T_EQUIPMENT_FLOW _FLOW ON _FLOW.ACTIVATE_ID = _ACTIVATE.ACTIVATE_ID
				FULL JOIN  T_EQUIPMENT _EQUIP ON _EQUIP.FLOW_ID = _FLOW.FLOW_ID
				FULL JOIN T_PROJECT _PROJ ON _EQUIP.PROJECT_ID = _PROJ.PROJECT_ID
				LEFT JOIN BM_EQUIP_GENERIC BM ON BM.CODE = _EQUIP.EQUIP_GENERIC 
				LEFT JOIN BM_EQUIP_SPECIFIC _BS ON _BS.CODE = _EQUIP.EQUIP_SPECIFIC
			WHERE (_EQUIP.BUSINESS_STATUS = @BUSINESS_STATUS OR _EQUIP.BUSINESS_STATUS='9' OR _EQUIP.STATUS = 4) AND _EQUIP.DEL_FLAG=1) 
			SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
			]]>
	</select>
	<!-- 查看项目对应设备信息-->
	<select id="list_equip_on_project_id">
	<![CDATA[
		DECLARE @PROJECT_ID  VARCHAR(24)
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        SET @START = ?
   	    SET @PAGE_SIZE =?
   	    SET @PROJECT_ID =?
   	      ;WITH QUERY AS (
		SELECT _EQUIP.EQUIP_ID equipId,_EQUIP.BUILDING_NUM buildingNum,
			_DE.INSTALL_HEIGHT installHeight,BM.VALUE equpGeneric
			,_ACTIVATE.ACTIVATE_DATE activateDate,_EQUIP.EXW_SERIAL exwSerial,_EQUIP.EQUIP_VENDER proName,_EQUIP.RECORD_ID recordId,
			BS.VALUE equipSpecific,_DE.BRACHIUM brachium, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			 FROM T_EQUIPMENT _EQUIP
			 LEFT JOIN T_EQUIPMENT_FLOW _FLOW ON _EQUIP.FLOW_ID = _FLOW.FLOW_ID
			 LEFT JOIN T_EQUIPMENT_ACTIVATE _ACTIVATE ON _FLOW.ACTIVATE_ID = _ACTIVATE.ACTIVATE_ID 
			 LEFT JOIN BM_EQUIP_GENERIC BM ON BM.CODE = _EQUIP.EQUIP_GENERIC
			 LEFT JOIN BM_EQUIP_SPECIFIC BS ON BS.CODE = _EQUIP.EQUIP_SPECIFIC
			 LEFT JOIN T_PROJECT _PROJ ON _PROJ.PROJECT_ID = _EQUIP.PROJECT_ID AND _PROJ.STATUS = 2 AND _PROJ.DEL_FLAG = 1
			 LEFT JOIN T_EQUIPMENT_INSTALL _DE ON _DE.FLOW_ID =  _EQUIP.FLOW_ID 
			WHERE
			 _EQUIP.PROJECT_ID = @PROJECT_ID
			AND _EQUIP.DEL_FLAG = 1)SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)				
	]]>
	</select>
	<!-- 查看项目详情-头部统计信息-->
	<select id="list_head_info_on_project_id">
	<![CDATA[
		DECLARE @PROJECT_ID  VARCHAR(24)
		SET @PROJECT_ID =?
			SELECT A.totalAmout,B.repairCount FROM ( SELECT SUM(T.SETTLE_AMOUNT) totalAmout FROM T_SETTLE_CONTRACT T WHERE PROJECT_ID =  @PROJECT_ID AND T.DEL_FLAG =1) A ,
			(SELECT  COUNT(*) repairCount FROM T_EQUIPMENT_REPAIR WHERE PROJECT_ID = @PROJECT_ID ) B  
	]]>
	</select>
		
	<!-- 查看项目对应设备-安全信息-->
	<select id="list_secure_on_equip_id">
	<![CDATA[
	   DECLARE @@EQUIP_ID  VARCHAR(24)
 		DECLARE @PROJECT_ID VARCHAR(24)
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
   	    SET @@EQUIP_ID =?
   	    SET @PROJECT_ID = ?
   	    SET @START = ?
   	     SET @PAGE_SIZE =?
	    ;WITH QUERY AS (
	      SELECT
			CONVERT(CHAR(10),A.inspectDate,23) inspectDate,inspectId,inspectPepoles,inspectResult,exwserial,buildingnum,recordId,
			inspectResultName,statusName,remark,longitude,latitude,projectName,rectification,relateModule
			, ROW_NUMBER() OVER (ORDER BY A.inspectDate DESC) AS _ROWNUM
	        FROM (SELECT EI.INSPECT_DATE     inspectDate,
	                     EI.INSPECT_ID        inspectId,
	                     EI.INSPECT_SERIAL    inspectSerial,
	                     EI.INSPECT_PEPOLES   inspectPepoles,
	                     EI.INSPECT_RESULT    inspectResult,
	                     EI.EXW_SERIAL        exwserial,
	                     EI.BUILDING_NUM      buildingnum,
	                     EI.RECORD_ID         recordId,
	                     B.VALUE              inspectResultName,
	                     EI.STATUS            statusName,
	                     EI.REMARK            remark,
	                     EI.LONGITUDE         longitude,
	                     EI.LATITUDE          latitude,
	                     ED.PROJECT_NAME      projectName,
						 EI.RECTIFICATION     rectification,
	                     'EQUIP_INSPECT'      relateModule
	                FROM T_EQUIPMENT_INSPECT EI LEFT JOIN BM_INSPECT_RESULT B ON B.CODE = EI.INSPECT_RESULT, T_EQUIPMENT_INSPECT_SCHEMA EIS, T_EQUIPMENT_DIARY ED
	               WHERE ED.EQUIP_DIARY_ID = EIS.EQUIP_DIARY_ID
	                 AND EIS.INSPECT_SCHEMA_ID = EI.INSPECT_SCHEMA_ID
	                  AND ED.EQUIP_ID = @@EQUIP_ID
	                  AND ED.PROJECT_ID = @PROJECT_ID
	              UNION ALL
	              SELECT IM.INSPECT_DATE     inspectDate,
	                     IM.INSPECT_ID        inspectId,
	                     NULL                 inspectSerial,
	                     IM.INSPECT_PEPOLES   inspectPepoles,
	                     IM.INSPECT_RESULT    inspectResult,
	                     IM.EXW_SERIAL        exwserial,
	                     IM.BUILDING_NUM      buildingnum,
	                     IM.RECORD_ID         recordId,
	                     B.VALUE              inspectResultName,
	                     NULL                 statusName,
	                     IM.REMARK            remark,
	                     IM.LONGITUDE         longitude,
	                     IM.LATITUDE          latitude,
	                     IM.PROJECT_NAME      projectName,
						 IM.RECTIFICATION     rectification,
	                     'INSPECT_MANAGE'     relateModule
	                FROM T_INSPECT_MANAGE IM LEFT JOIN BM_INSPECT_RESULT B ON B.CODE = IM.INSPECT_RESULT
	                WHERE IM.PROJECT_ID = @PROJECT_ID
	              ) A
	    )SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)  ORDER BY inspectDate desc
		
	]]>
	</select>
	<!-- 远程故障设备-->
	<select id="list_remote_repair">
	<![CDATA[
 		DECLARE @EQUIPMENT_STATUS  VARCHAR(24)
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
   	    SET @EQUIPMENT_STATUS =?
   	    SET @START = ?
   	     SET @PAGE_SIZE =?
	    ;WITH QUERY AS (
	    SELECT  top(@PAGE_SIZE)repid, monitorAddress, equipmentNumber, equipmentStatus,fault,createByname,faultCurrent, breakdownVoltage, failureFrequency, weightOfFailure, faultFloor,
		 inputVoltage,position,hours, minutes, createDateTime, monitorId, switchFault1,switchFault2, switchFault3, 
		 equipId, exwSerial, equipSpecific, projectName,recordSerial, buildingNum ,ROW_NUMBER() OVER (ORDER BY createDateTime DESC) AS _ROWNUM
	     FROM(
		SELECT  
				null repid,
				T.MONITOR_ADDRESS monitorAddress,
				T.EQUIPMENT_NUMBER equipmentNumber,
				T.EQUIPMENT_STATUS equipmentStatus,
				BF.VALUE fault,
				null createByname,
				T.FAULT_CURRENT faultCurrent,
				T.BREAKDOWN_VOLTAGE breakdownVoltage,
				T.FAILURE_FREQUENCY failureFrequency,
				T.WEIGHT_OF_FAILURE weightOfFailure,
				T.FAULT_FLOOR faultFloor,
				T.INPUT_VOLTAGE inputVoltage,
				T.POSITION position,
				T.HOURS hours,
				T.MINUTES minutes,
				T.CREATE_DATE_TIME createDateTime,
				T.MONITOR_ID monitorId,
				T.SWITCH_FAULT_1 switchFault1,
				T.SWITCH_FAULT_2 switchFault2,
				T.SWITCH_FAULT_3 switchFault3, 
				TE.EQUIP_ID equipId,
				TE.EXW_SERIAL exwSerial,
				TE.EQUIP_SPECIFIC equipSpecific,
				TE.PROJECT_NAME projectName,
				TE.RECORD_ID recordSerial,
				TE.BUILDING_NUM buildingNum 
		FROM T_ELEVATOR_MONITOR T 
		LEFT JOIN T_EQUIPMENT TE ON TE.MONITOR_SERIAL = T.EQUIPMENT_NUMBER  
		AND (
			TE.PROJECT_ID IS NULL
			OR 
			TE.PROJECT_ID = 0
		)
		LEFT JOIN BM_REPAIR_FAULT  BF ON T.FAULT = BF.CODE 
		UNION ALL
		SELECT  
				TR.REPID repid,  
				null monitorAddress,
				null equipmentNumber,
				null equipmentStatus,
				TR.FAULT_DESC fault,
				AU.FULLNAME createByname,
				TR.FAULT_LEVEL faultCurrent,
				TR.BREAK_DOWN_VOLTAGE breakdownVoltage,
				null failureFrequency,
				TR.WEIGHT_OF_FAILURE weightOfFailure,
				null faultFloor,
				TR.IMPUT_VOLTAGE inputVoltage,
				TR.LOCATION position,
				null hours,
				null minutes,
				TR.CREATE_DT createDateTime,
				null monitorId,
				TR.SWITCH_FAULT_1 switchFault1,
				TR.SWITCH_FAULT_2 switchFault2,
				TR.SWITCH_FAULT_3 switchFault3,
				TR.EQUIP_ID equipId,
				TR.EXW_SERIAL exwSerial,
				TR.EQUIPSPEC equipSpecific,
				TR.PROJ_NAME projectName,
				TR.RECORD_SERIAL recordSerial,
				TR.BUILDING_NUM buildingNum
 	FROM T_APP_REPAIR TR 
 	LEFT JOIN APP_USER AU ON AU.USERID = TR.CREATE_BY
 	 where TR.STATE = 1
 	 	AND (
 	 	TR.PROJECT_ID IS NULL
 	 	OR
 	 	TR.PROJECT_ID=0	 	
 	 ) ) as woi)
	SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)  ORDER BY createDateTime DESC
	]]>
	</select>
	<!-- 查看部门-->
	<select id="list_department">
	<![CDATA[
		SELECT T.DEP_ID depId,T.DEP_NAME depName FROM DEPARTMENT T WHERE DELFLAG = 1
	]]>
	</select>
	<!-- 查找指定用户APPUSER -->
	<select id="list_app_user">
	<![CDATA[
		SELECT TOP 1 PASSWORD,USERNAME,MOBILE FROM APP_USER WHERE MOBILE = ? AND DELFLAG = 0
	]]>
	</select>
	
		<!-- 查询配件所在的仓库名称-->
	<select id="list_component_store">
	<![CDATA[	
		SELECT c.CONSUME_COUNTS,s.STORE_NAME  FROM T_COMPONENT c LEFT JOIN T_STORE_HOUSE s ON 
		c.TASK_ID=s.TASK_ID
		WHERE s.TASK_ID=?
		]]>
	</select>
	<!-- 查询在用设备详情-->
	<select id="list_equip_online_detail">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE @BUSINESS_STATUS VARCHAR(128)
		SET @START = ?
        SET @PAGE_SIZE = ?
        SET @BUSINESS_STATUS =?
        ;WITH QUERY AS (
		SELECT _ACTIVATE.ACTIVATE_DATE AS activateDate, _PROJ.PROJECT_ID AS projectId,_PROJ.PROJECT_NAME AS projectName, _EQUIP.BUILDING_NUM AS				
		buildingNum, _EQUIP.EXW_SERIAL AS exwSerial, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			,_BS.VALUE AS specification,BM.VALUE equipGeneric,  _EQUIP.RECORD_ID AS recordId,_EQUIP.EQUIP_VENDER proName,
			_EQUIP.BRACHIUM brachium,_EQUIP.EQUIP_ID equipId
			FROM T_EQUIPMENT_ACTIVATE _ACTIVATE
			FULL JOIN  T_EQUIPMENT_FLOW _FLOW ON _FLOW.ACTIVATE_ID = _ACTIVATE.ACTIVATE_ID
			FULL JOIN  T_EQUIPMENT _EQUIP ON _EQUIP.FLOW_ID = _FLOW.FLOW_ID
			FULL JOIN T_PROJECT _PROJ ON _EQUIP.PROJECT_ID = _PROJ.PROJECT_ID
			LEFT JOIN BM_EQUIP_GENERIC BM ON BM.CODE = _EQUIP.EQUIP_GENERIC 
			LEFT JOIN BM_EQUIP_SPECIFIC _BS ON _BS.CODE = _EQUIP.EQUIP_SPECIFIC
			WHERE ( _EQUIP.BUSINESS_STATUS >= '3' AND _EQUIP.BUSINESS_STATUS <= @BUSINESS_STATUS)  AND _EQUIP.DEL_FLAG =1 AND (_EQUIP.STATUS = 0 OR _EQUIP.STATUS=8 OR _EQUIP.STATUS=9)) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)				
		]]>
	</select>
	<!-- 查询报废设备详情-->
	<select id="list_scrap_equip_detail">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
		SET @START = ?
        SET @PAGE_SIZE = ?
        ;WITH QUERY AS (
		SELECT _ACTIVATE.ACTIVATE_DATE AS activateDate, _PROJ.PROJECT_ID AS projectId,_PROJ.PROJECT_NAME AS projectName, _EQUIP.BUILDING_NUM AS				
		buildingNum, _EQUIP.EXW_SERIAL AS exwSerial, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			,_BS.VALUE AS specification,BM.VALUE equipGeneric,  _EQUIP.RECORD_ID AS recordId,_EQUIP.EQUIP_VENDER proName,
			_EQUIP.BRACHIUM brachium,_EQUIP.EQUIP_ID equipId
			FROM T_EQUIPMENT_ACTIVATE _ACTIVATE
			FULL JOIN  T_EQUIPMENT_FLOW _FLOW ON _FLOW.ACTIVATE_ID = _ACTIVATE.ACTIVATE_ID
			FULL JOIN  T_EQUIPMENT _EQUIP ON _EQUIP.FLOW_ID = _FLOW.FLOW_ID
			FULL JOIN T_PROJECT _PROJ ON _EQUIP.PROJECT_ID = _PROJ.PROJECT_ID
			LEFT JOIN BM_EQUIP_GENERIC BM ON BM.CODE = _EQUIP.EQUIP_GENERIC 
			LEFT JOIN BM_EQUIP_SPECIFIC _BS ON _BS.CODE = _EQUIP.EQUIP_SPECIFIC
			WHERE _EQUIP.DEL_FLAG =1 AND _EQUIP.STATUS = 6) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)				]]>
	</select>
	<!--0：所有设备 1：自有设备  2：外租设备-->
	<select id="equip_list">
	<![CDATA[
		DECLARE @type INT
		DECLARE @keyword VARCHAR(128)
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
		SET @START = ?
        SET @PAGE_SIZE = ?
		SET @type = ?
		SET @keyword = ?
    ;WITH QUERY AS (
		SELECT 
		ROW_NUMBER() OVER (ORDER BY T.EQUIP_ID) AS _ROWNUM,
		T.EQUIP_ID AS 'equipId',
		EG.VALUE AS 'equipGenericName',    --设备名称
		T.EXW_SERIAL AS 'exwSerial',    --出厂编号
		T.RECORD_ID AS 'recordId',    --备案编号
		T.RECORD_SERIAL AS 'recordSerial',    --设备编号
		ES.VALUE AS 'equipSpecificName',    --规格型号
		T.PROJECT_NAME AS 'projectName',    --项目名称
		T.PROPERTY_NAME AS 'propertyName'  --产权单位
		FROM T_EQUIPMENT T  
		LEFT JOIN BM_EQUIP_SPECIFIC ES ON ES.CODE=T.EQUIP_SPECIFIC 
		LEFT JOIN BM_EQUIP_GENERIC EG ON EG.CODE=T.EQUIP_GENERIC
		WHERE T.EQUIP_ID IN  (
			--所有设备
			SELECT E.EQUIP_ID FROM T_EQUIPMENT E WHERE E.DEL_FLAG='1' AND 
				(E.BUSINESS_STATUS='0' OR E.BUSINESS_STATUS='A' OR E.STATUS='0' OR (E.BUSINESS_STATUS IN('2','3') AND E.STATUS ='9') OR (E.BUSINESS_STATUS='9' AND E.STATUS='1')) AND @type=0
			UNION --自有设备
			SELECT E.EQUIP_ID FROM T_EQUIPMENT E WHERE E.DEL_FLAG='1' AND 
				(E.BUSINESS_STATUS='0' OR E.BUSINESS_STATUS='A' OR E.STATUS='6' OR E.STATUS='0' OR (E.BUSINESS_STATUS='9' OR E.STATUS='1')) AND @type=1
			UNION --外租设备
			SELECT E.EQUIP_ID FROM T_EQUIPMENT E WHERE E.DEL_FLAG='1' AND 
				(E.STATUS='0' OR (E.BUSINESS_STATUS IN('2','3') AND E.STATUS ='9') OR (E.BUSINESS_STATUS='9' AND E.STATUS='1') OR E.STATUS='5') AND @type=2
		) AND (
			@keyword = '' OR @keyword IS NULL OR
		 	ES.VALUE LIKE '%'+@keyword+'%' OR
			T.EXW_SERIAL LIKE '%'+@keyword+'%' OR
			T.PROJECT_NAME LIKE '%'+@keyword+'%' OR
			T.RECORD_SERIAL LIKE '%'+@keyword+'%' 
		) )
		SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
		]]>	
	</select>
	<!-- 查看项目对应设备信息-->
	<select id="list_equip_on_project_id2">
	<![CDATA[
		DECLARE @PROJECT_ID  VARCHAR(24)
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE	@EQUIP_ID  VARCHAR(24)
        SET @START = ?
   	    SET @PAGE_SIZE =?
   	    SET @PROJECT_ID =?
   	    SET @EQUIP_ID =?
   	      ;WITH QUERY AS (
		SELECT _EQUIP.EQUIP_ID equipId,_EQUIP.BUILDING_NUM buildingNum,
			_DE.INSTALL_HEIGHT installHeight,BM.VALUE equpGeneric
			,_ACTIVATE.ACTIVATE_DATE activateDate,_EQUIP.EXW_SERIAL exwSerial,_EQUIP.EQUIP_VENDER proName,_EQUIP.RECORD_ID recordId,
			BS.VALUE equipSpecific,_DE.BRACHIUM brachium, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			 FROM T_EQUIPMENT _EQUIP
			 LEFT JOIN T_EQUIPMENT_FLOW _FLOW ON _EQUIP.FLOW_ID = _FLOW.FLOW_ID
			 LEFT JOIN T_EQUIPMENT_ACTIVATE _ACTIVATE ON _FLOW.ACTIVATE_ID = _ACTIVATE.ACTIVATE_ID 
			 LEFT JOIN BM_EQUIP_GENERIC BM ON BM.CODE = _EQUIP.EQUIP_GENERIC
			 LEFT JOIN BM_EQUIP_SPECIFIC BS ON BS.CODE = _EQUIP.EQUIP_SPECIFIC
			 LEFT JOIN T_PROJECT _PROJ ON _PROJ.PROJECT_ID = _EQUIP.PROJECT_ID AND _PROJ.STATUS = 2 AND _PROJ.DEL_FLAG = 1
			 LEFT JOIN T_EQUIPMENT_INSTALL _DE ON _DE.FLOW_ID =  _EQUIP.FLOW_ID 
			WHERE
			 _EQUIP.PROJECT_ID = @PROJECT_ID
			 AND  _EQUIP.EQUIP_ID=@EQUIP_ID
			AND _EQUIP.DEL_FLAG = 1)SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)				
	]]>
	</select>
	
		<!-- 微信现场安装之设备安装列表-->
    <select id="wechat_equip_install_list">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE	@keyword  VARCHAR(64)
        DECLARE @dataPermission VARCHAR(500)
        SET @START = ?
   	    SET @PAGE_SIZE =?
   	    SET @keyword =?
   	    SET @dataPermission =?
   	    ;WITH QUERY AS (
		SELECT
		    DE.BUILDING_NUM AS buildingNum,
			BS.VALUE AS equipSpecificName,--设备名称
			BG.VALUE AS equipGenericName,--规格型号
			E.EQUIP_GENERIC AS equipGeneric,
			E.RECORD_ID AS recordId,--备案编号
			E.EXW_SERIAL AS exwSerial,--出厂编号
			E.EQUIP_SERIAL AS equipSerial, --设备自编号
			CL.CONTRACT_ID AS contractId,--合同ID
			D.PROJECT_NAME AS projectName,--项目名称
			DE.DISPATCH_EQUIP_ID AS dispatchEquipId,
			D.PROJECT_ID AS projectId,
			DE.DISPATCH_ID AS dispatchId,
			DE.EQUIP_ID AS equipId,
			ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
		FROM T_DISPATCH_EQUIP DE
		LEFT JOIN T_DISPATCH D ON DE.DISPATCH_ID = D.DISPATCH_ID
		LEFT JOIN T_EQUIPMENT E ON E.EQUIP_ID = DE.EQUIP_ID
		LEFT JOIN BM_EQUIP_SPECIFIC BS ON E.EQUIP_SPECIFIC = BS.CODE
		LEFT JOIN BM_EQUIP_GENERIC BG ON E.EQUIP_GENERIC = BG.CODE
		LEFT JOIN T_CONTRACT_LEASE CL ON CL.CONTRACT_ID = D.RELATE_ID
		WHERE DE.WORK_STATUS = '0'
		AND D.DEL_FLAG = '1'
		AND D.APPLYFOR_STATE = '3' 
		AND CL.CONTRACT_ID != ''
		AND D.RELATE_MODULE = 'CONTRACT_LEASE'
		AND D.EFFECTIVE !='0'
		AND ((E.RECORD_ID LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (E.EXW_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (E.EQUIP_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (D.PROJECT_NAME LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (BG.VALUE LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL ))
		AND (SELECT dbo.PermissionFilter(CL.PERMISSION_FLAG, @dataPermission))=1
		 )
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)		
	]]>
	</select>
	
			<!-- 微信现场安装之顶升加节列表-->
    <select id="wechat_jackup_section_list">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE	@keyword  VARCHAR(64)
        DECLARE	@dataPermission  VARCHAR(500)
        SET @START = ?
   	    SET @PAGE_SIZE =?
   	    SET @keyword =?
   	    SET @dataPermission =?
   	      ;WITH QUERY AS (
		SELECT
		    BS.VALUE AS equipSpecificName,--规格型号
			BG.VALUE AS equipGenericName,--设备名称
			E.EQUIP_GENERIC AS equipGeneric,
		    EI.EQUIP_AMOUNT AS equipAmount,
			EI.INSTALL_HEIGHT AS installHeight,--安装高度
			E.RECORD_ID AS recordId,--备案编号
			E.EXW_SERIAL AS exwSerial,--出厂编号
			E.EQUIP_SERIAL AS equipSerial, --设备自编号
			ED.PROJECT_NAME AS projectName, --项目名称
			EI.BUILDING_NUM AS buildingNum, --项目楼号
			EI.STARTIN_DATE AS startinDate, --安装开始时间
			EI.APP_INSTALL_STATE AS appInstallState,
			ED.PROJECT_ID AS projectId,
			EI.FLOW_ID AS flowId,
			EI.INSTALL_ID AS installId,
			EF.EQUIP_ID AS equipId,
			EF.CONTRACT_ID AS contractId,
			EF.DISPATCH_EQUIP_ID AS dispatchEquipId,
			EI.KNOT_COUNTS AS knotCount,
			EI.WALL_ATTACHE_QTY AS wallAttacheQty,
			EI.WALL_ATTACHE_POLE_COUNT AS wallAttachePoleCount,
			EI.WALL_ATTACHE_FRAME_COUNT AS wallAttacheFrameCount,
			ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
		FROM T_EQUIPMENT_INSTALL EI 
		LEFT JOIN T_EQUIPMENT_FLOW EF ON EI.FLOW_ID = EF.FLOW_ID
		LEFT JOIN T_CONTRACT_LEASE CL ON EF.CONTRACT_ID = CL.CONTRACT_ID
		LEFT JOIN T_EQUIPMENT E ON EF.EQUIP_ID = E.EQUIP_ID
		LEFT JOIN T_EQUIPMENT_DIARY ED ON EF.EQUIP_DIARY_ID = ED.EQUIP_DIARY_ID
		LEFT JOIN BM_EQUIP_SPECIFIC BS ON E.EQUIP_SPECIFIC = BS.CODE
		LEFT JOIN BM_EQUIP_GENERIC BG ON E.EQUIP_GENERIC = BG.CODE
		WHERE EI.APPLYFOR_STATE = '3'  AND EI.DEL_FLAG = '1' AND EI.APP_INSTALL_STATE = '2'
		AND EF.FLOW_STATE = '2'
		AND ((E.RECORD_ID LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (E.EXW_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (E.EQUIP_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (ED.PROJECT_NAME LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (EI.BUILDING_NUM LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (BG.VALUE LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL ))
		AND (SELECT dbo.PermissionFilter(CL.PERMISSION_FLAG, @dataPermission))=1
		 )
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
	]]>
	</select>
	
	<!-- 微信现场安装之显示列表列表-->
    <select id="wechat_install_all_list">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE	@keyword  VARCHAR(64)
        DECLARE @state  VARCHAR(24)
        DECLARE @USER_ID  BIGINT
       	DECLARE	@dataPermission  VARCHAR(500)
		DECLARE	@depId  VARCHAR(256)
		DECLARE	@year  VARCHAR(7)
		DECLARE	@startDate  VARCHAR(7)
		DECLARE	@endDate  VARCHAR(7)
        SET @START = ?
   	    SET @PAGE_SIZE =?
   	    SET @keyword =?
   	    SET @state =?
   	    SET @USER_ID =?
   	    SET @dataPermission=?
		SET @depId =?
		SET @year =?
		SET @startDate =?
		SET @endDate =?
   	        ;WITH QUERY AS (
		SELECT
		    '0' AS state,
   	         TS.DISCLOSURE_LOCATION AS disclosureLocation,
			 TS.DISCLOSURE_PHOTO AS disclosurePhoto,
			 TS.ACCEPTANCE_MAN_ID AS acceptanceManId,
			 TS.ACCEPTANCE_MAN AS acceptanceMan,
			 TS.DISCLOSURE_ID AS disclosureId,
			 TS.ACCEPTANCE_MAN_ID AS disclosureManId,
			 TS.DISCLOSURE_MAN AS disclosureMan,
			 TS.DISCLOSURE_DATE AS disclosureDate, --交底日期
   	         EI.APPROACH_NUMBER AS approachNumber,
   	         TS.OPERATION_WAY AS operationWay,
		    P.MATERIAL_PRACTI_NAME AS materialPractiName,
		    E.EQUIP_SERIAL AS equipSerial,
			E.RECORD_ID AS recordId,--备案编号1
			E.EXW_SERIAL AS exwSerial,--出厂编号
			ED.PROJECT_NAME AS projectName, --项目名称
			EI.BUILDING_NUM AS buildingNum, --项目楼号
			EI.STARTIN_DATE AS startinDate, --安装开始时间
			EI.ENDIN_DATE AS endinDate,--退场时间
			EI.APP_INSTALL_STATE AS appInstallState,
			ED.PROJECT_ID AS projectId,
			EI.FLOW_ID AS flowId,
			 EI.INSTALL_ID AS installId, 
			ROW_NUMBER() OVER (ORDER BY EI.STARTIN_DATE DESC) AS _ROWNUM
		FROM T_EQUIPMENT_INSTALL EI 
		LEFT JOIN T_TECHNICAL_DISCLOSURE TS ON TS.INSTALL_ID = EI.INSTALL_ID
		LEFT JOIN T_EQUIPMENT_FLOW EF ON EI.FLOW_ID = EF.FLOW_ID
		LEFT JOIN T_CONTRACT_LEASE CL ON EF.CONTRACT_ID = CL.CONTRACT_ID
		LEFT JOIN DEPARTMENT D ON CL.COMPETENT_DEPARTMET_ID = D.DEP_ID
		LEFT JOIN T_EQUIPMENT E ON EF.EQUIP_ID = E.EQUIP_ID
		LEFT JOIN T_EQUIPMENT_DIARY ED ON EF.EQUIP_DIARY_ID = ED.EQUIP_DIARY_ID
		LEFT JOIN T_PROJECT P ON P.PROJECT_ID = ED.PROJECT_ID
		WHERE EI.DEL_FLAG = '1'
		AND TS.RELATE_MODULE LIKE 'EQUIP_INSTALL'+'%'
		AND (EI.USER_ID = @USER_ID OR @USER_ID = '' OR @USER_ID IS NULL )
		AND (SELECT dbo.PermissionFilter(CL.PERMISSION_FLAG, @dataPermission))=1
		AND (CHARINDEX(','+EI.APP_INSTALL_STATE+',',@state)>0 OR @state = '' OR @state IS NULL)
		AND (CHARINDEX(','+CONVERT(VARCHAR,D.DEP_ID)+',',@depId)>0  OR @depId = '' OR @depId IS NULL)
		AND (CONVERT(DATE,EI.STARTIN_DATE) LIKE '%'+@year+'%' OR @year = '' OR @year IS NULL)
		AND (LEFT(CONVERT(DATE,EI.STARTIN_DATE),7) >= @startDate OR @startDate = '' OR @startDate IS NULL)
		AND (LEFT(CONVERT(DATE,EI.STARTIN_DATE),7) <= @endDate OR @endDate = '' OR @endDate IS NULL)
		AND ((E.RECORD_ID LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (E.EXW_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (ED.PROJECT_NAME LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (EI.BUILDING_NUM LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (E.EQUIP_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL ))
		UNION ALL
			SELECT
			'1' AS state,
   	         TS.DISCLOSURE_LOCATION AS disclosureLocation,
			 TS.DISCLOSURE_PHOTO AS disclosurePhoto,
			 TS.ACCEPTANCE_MAN_ID AS acceptanceManId,
			 TS.ACCEPTANCE_MAN AS acceptanceMan,
			 TS.DISCLOSURE_ID AS disclosureId,
			 TS.ACCEPTANCE_MAN_ID AS disclosureManId,
			 TS.DISCLOSURE_MAN AS disclosureMan,
			 TS.DISCLOSURE_DATE AS disclosureDate, --交底日期
   	         EI.APPROACH_NUMBER AS approachNumber,
   	         TS.OPERATION_WAY AS operationWay,
		    P.MATERIAL_PRACTI_NAME AS materialPractiName,
		    E.EQUIP_SERIAL AS equipSerial,
			E.RECORD_ID AS recordId,--备案编号1
			E.EXW_SERIAL AS exwSerial,--出厂编号
			ED.PROJECT_NAME AS projectName, --项目名称
			EI.BUILDING_NUM AS buildingNum, --项目楼号
			EI.STARTIN_DATE AS startinDate, --安装开始时间
			EI.ENDIN_DATE AS endinDate,--退场时间
			EARD.APP_INSTALL_STATE AS appInstallState,
			ED.PROJECT_ID AS projectId,
			EI.FLOW_ID AS flowId,
			EARD.ADD_REDUCE_ID AS installId,
			ROW_NUMBER() OVER (ORDER BY EI.STARTIN_DATE DESC) AS _ROWNUM
		FROM T_EQUIP_ADD_REDUCE_DETAIL EARD
		LEFT JOIN T_TECHNICAL_DISCLOSURE TS ON TS.DISCLOSURE_ID = EARD.DISCLOSURE_ID
		LEFT JOIN T_EQUIPMENT_INSTALL EI ON EI.INSTALL_ID = EARD.RELATE_ID
		LEFT JOIN T_EQUIPMENT_FLOW EF ON EI.FLOW_ID = EF.FLOW_ID
		LEFT JOIN T_CONTRACT_LEASE CL ON EF.CONTRACT_ID = CL.CONTRACT_ID
		LEFT JOIN DEPARTMENT D ON CL.COMPETENT_DEPARTMET_ID = D.DEP_ID
		LEFT JOIN T_EQUIPMENT E ON EF.EQUIP_ID = E.EQUIP_ID
		LEFT JOIN T_EQUIPMENT_DIARY ED ON EF.EQUIP_DIARY_ID = ED.EQUIP_DIARY_ID
		LEFT JOIN T_PROJECT P ON P.PROJECT_ID = ED.PROJECT_ID
		WHERE EI.DEL_FLAG = '1' 
		AND TS.RELATE_MODULE LIKE 'EQUIP_INSTALL'+'%'
		AND (EI.USER_ID = @USER_ID OR @USER_ID = '' OR @USER_ID IS NULL )
		AND (SELECT dbo.PermissionFilter(CL.PERMISSION_FLAG, @dataPermission))=1
		AND (CHARINDEX(','+EARD.APP_INSTALL_STATE+',',@state)>0 OR @state = '' OR @state IS NULL)
		AND (CHARINDEX(','+CONVERT(VARCHAR,D.DEP_ID)+',',@depId)>0  OR @depId = '' OR @depId IS NULL)
		AND (CONVERT(DATE,EI.STARTIN_DATE) LIKE '%'+@year+'%' OR @year = '' OR @year IS NULL)
		AND (LEFT(CONVERT(DATE,EI.STARTIN_DATE),7) >= @startDate OR @startDate = '' OR @startDate IS NULL)
		AND (LEFT(CONVERT(DATE,EI.STARTIN_DATE),7) <= @endDate OR @endDate = '' OR @endDate IS NULL)
		AND ((E.RECORD_ID LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (E.EXW_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (ED.PROJECT_NAME LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (EI.BUILDING_NUM LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (E.EQUIP_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL ))
		)
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
		ORDER BY QUERY.startinDate desc
	]]>
	</select>
	
		<!-- 微信现场安装之顶升加节详情-->
    <select id="wechat_jackup_detail">
	<![CDATA[
		DECLARE @INSTALL_ID BIGINT
        SET @INSTALL_ID = ?
   	    SELECT 
			E.RECORD_ID AS recordId,--备案编号
			E.EXW_SERIAL AS exwSerial,--出厂编号
			E.EQUIP_SERIAL AS equipSerial,--设备自编号
			ED.PROJECT_NAME AS projectName, --项目名称
			EI.BUILDING_NUM AS buildingNum, --项目楼号
			EI.STARTIN_DATE AS startinDate, --安装开始时间
			EI.ENDIN_DATE AS endinDate, --安装结束时间
			EI.INSTALL_HEIGHT AS installHeight, --安装高度
			ED.PROJECT_ID AS projectId,
			EI.BRACHIUM AS brachium, --臂长
			EI.FIRST_ATTACH AS firstAttach,--附墙数
			EI.FIRST_KNOT_COUNT AS firstKnotCount,--标准节
			EI.EQUIP_AMOUNT AS equipAmount,
			EI.REMARK AS remark, --备注
			EI.CURRENT_INSTALL_HEIGHT AS currentInstallHeight, --当前高度
			EI.INSTALL_LOCATION AS installLocation, --位置
			EI.CHECK_ATTACH AS checkAttach, --自检照片
			EI.FILE_ATTACHES AS fileAttachs, --安装照片
			EI.INSTALL_ID AS installId,
			EI.PARTAKE AS partake
		FROM T_EQUIPMENT_INSTALL EI
		LEFT JOIN T_EQUIPMENT_FLOW EF ON EI.FLOW_ID = EF.FLOW_ID
		LEFT JOIN T_EQUIPMENT E ON EF.EQUIP_ID = E.EQUIP_ID
		LEFT JOIN T_EQUIPMENT_DIARY ED ON EF.EQUIP_DIARY_ID = ED.EQUIP_DIARY_ID
		WHERE EI.INSTALL_ID = @INSTALL_ID 
	]]>
	</select>
		
	<!-- 微信现场安装之安装整改验收详情-->
    <select id="wechat_install_rectifica_detail">
	<![CDATA[
		DECLARE @INSTALL_ID BIGINT
        SET @INSTALL_ID = ?
   	        SELECT 
   	            TS.DISCLOSURE_LOCATION AS disclosureLocation,
			    TS.DISCLOSURE_PHOTO AS disclosurePhoto,
			    TS.ACCEPTANCE_MAN_ID AS acceptanceManId,
			    TS.ACCEPTANCE_MAN AS acceptanceMan,
			    TS.DISCLOSURE_ID AS disclosureId,
			    TS.ACCEPTANCE_MAN_ID AS disclosureManId,
			    TS.DISCLOSURE_MAN AS disclosureMan,
			    EI.INSTALL_ID AS installId, 
			    TS.DISCLOSURE_DATE AS disclosureDate, --交底日期
   	            EI.APPROACH_NUMBER AS approachNumber,
   	            TS.OPERATION_WAY AS operationWay,
   	       		P.MATERIAL_PRACTI_NAME AS materialPractiName,
   				EI.KNOT_COUNTS AS knotGross,
   				EI.WALL_ATTACHE_QTY AS wallAttacheGross,
				EI.WALL_ATTACHE_POLE_COUNT AS wallAttachePoleGross,
				EI.WALL_ATTACHE_FRAME_COUNT AS wallAttacheFrameGross,
				EI.FIRST_KNOT_COUNT AS knotNum,
				EI.FIRST_ATTACH AS wallAttacheQty,
				EI.WALL_ATTACHE_POLE_NUM AS  wallAttachePoleNum,
				EI.WALL_ATTACHE_FRAME_NUM AS wallAttacheFrameNum,
				E.RECORD_ID AS recordId,--备案编号
				E.EXW_SERIAL AS exwSerial,--出厂编号
				E.EQUIP_SERIAL AS equipSerial,--设备自编号
				E.EQUIP_GENERIC AS equipGeneric,
				BG.VALUE AS equipGenericName,
				ED.PROJECT_NAME AS projectName, --项目名称
				EI.BUILDING_NUM AS buildingNum, --安装楼号
				EI.STARTIN_DATE AS startinDate, --安装开始时间
				EI.ENDIN_DATE AS endinDate, --安装结束时间
				EI.INSTALL_HEIGHT AS installHeight, --安装高度
				ED.PROJECT_ID AS projectId,
				EI.BRACHIUM AS brachium, --臂长
				EI.FIRST_ATTACH AS firstAttach,--附墙数
				EI.FIRST_KNOT_COUNT AS firstKnotCount,--标准节
				EI.EQUIP_AMOUNT AS equipAmount,
				EI.REMARK AS remark, --备注
				EI.CURRENT_INSTALL_HEIGHT AS currentInstallHeight, --当前高度
				EI.INSTALL_LOCATION AS installLocation, --位置
				EI.CHECK_ATTACH AS checkAttach, --自检照片
				EI.FILE_ATTACHES AS fileAttachs, --安装照片
				EI.PARTAKE AS partake,--安装人员
				EI.INSTALL_ID AS installId,
				TT.REVIEW_ID AS reviewId,
				TT.RECTIFICA_IMAGE AS rectificaImage, -- 整改照片
				TT.RECTIFICA_DATE AS rectificaDate, -- 整改日期
				TT.RECTIFICA_DETAIL AS rectificaDetail, -- 整改内容
				TT.REVIW_CHECK_ATTACH AS reviwCheckAttach, --验收照片
				TT.REVIEW_CONCLUSION AS reviewConclusion, --验收结论
				TT.REVIE_STATUS AS revieStatus, --验收结果
				TT.REJECT_REASON AS rejectReason --驳回理由
			FROM T_EQUIPMENT_INSTALL EI
			LEFT JOIN T_EQUIPMENT_FLOW EF ON EI.FLOW_ID = EF.FLOW_ID
			LEFT JOIN T_TECHNICAL_DISCLOSURE TS ON TS.DISCLOSURE_ID = EI.DISCLOSURE_ID
			LEFT JOIN T_EQUIP_ADD_REDUCE_DETAIL EARD ON EARD.RELATE_ID = EI.INSTALL_ID
			LEFT JOIN T_EQUIPMENT E ON EF.EQUIP_ID = E.EQUIP_ID
			LEFT JOIN BM_EQUIP_GENERIC BG ON E.EQUIP_GENERIC = BG.CODE
			LEFT JOIN T_EQUIPMENT_DIARY ED ON EF.EQUIP_DIARY_ID = ED.EQUIP_DIARY_ID
			LEFT JOIN T_PROJECT P ON P.PROJECT_ID = ED.PROJECT_ID
			LEFT JOIN (SELECT TOP 1 IR.*,RR.RECTIFICA_IMAGE,RR.RECTIFICA_DATE,RR.RECTIFICA_DETAIL
			FROM T_INSTALL_REVIEW IR
			LEFT JOIN T_RECTIFICATION_RECORD RR ON IR.REVIEW_ID = RR.REVIEW_ID
			LEFT JOIN T_TECHNICAL_DISCLOSURE TS ON TS.RELATE_ID  = IR.RELATE_ID
			WHERE IR.RELATE_MODULE = 'EQUIP_INSTALL'AND IR.RELATE_ID = @INSTALL_ID
			ORDER BY IR.REVIEW_ID DESC)TT ON TT.RELATE_ID = EI.INSTALL_ID
			WHERE EI.INSTALL_ID = @INSTALL_ID
			GROUP BY
			    TS.BUILDING_NUM ,
   	            TS.DISCLOSURE_LOCATION ,
			    TS.DISCLOSURE_PHOTO ,
			    TS.ACCEPTANCE_MAN_ID ,
			    TS.ACCEPTANCE_MAN ,
			    TS.DISCLOSURE_ID ,
			    TS.ACCEPTANCE_MAN_ID ,
			    TS.DISCLOSURE_MAN ,
			    EI.INSTALL_ID , 
			    E.EQUIP_GENERIC,
				BG.VALUE,
			    TS.DISCLOSURE_DATE , --交底日期
   	            EI.APPROACH_NUMBER ,
   	            TS.OPERATION_WAY ,
			    EI.APPROACH_NUMBER,
			    P.MATERIAL_PRACTI_NAME,
				EI.KNOT_COUNTS,
   				EI.WALL_ATTACHE_QTY,
				E.RECORD_ID,
				E.EXW_SERIAL,
				E.EQUIP_SERIAL,
				ED.PROJECT_NAME,
				EI.BUILDING_NUM,
				EI.STARTIN_DATE,
				EI.ENDIN_DATE,
				EI.INSTALL_HEIGHT,
				ED.PROJECT_ID,
				EI.BRACHIUM,
				EI.FIRST_ATTACH,
				EI.FIRST_KNOT_COUNT,
				EI.EQUIP_AMOUNT,
				EI.REMARK,
				EI.CURRENT_INSTALL_HEIGHT,
				EI.INSTALL_LOCATION,
				EI.CHECK_ATTACH,
				EI.FILE_ATTACHES,
				EI.PARTAKE,
				EI.INSTALL_ID,
				TT.REVIEW_ID,
				TT.RECTIFICA_IMAGE,
				TT.RECTIFICA_DATE,
				TT.RECTIFICA_DETAIL,
				TT.REVIW_CHECK_ATTACH,
				TT.REVIEW_CONCLUSION,
				TT.REVIE_STATUS,
				TT.REJECT_REASON,
				EI.FIRST_KNOT_COUNT,
				EI.FIRST_ATTACH,
				EI.WALL_ATTACHE_POLE_NUM,
				EI.WALL_ATTACHE_FRAME_NUM,
				EI.KNOT_COUNTS,
   				EI.WALL_ATTACHE_QTY,
				EI.WALL_ATTACHE_POLE_COUNT,
				EI.WALL_ATTACHE_FRAME_COUNT
	]]>
	</select>
	
	<!-- 微信现场安装之安装完成详情-->
    <select id="wechat_install_pass_detail">
	<![CDATA[
		DECLARE @INSTALL_ID BIGINT
        SET @INSTALL_ID = ?
   	    SELECT 
			E.RECORD_ID AS recordId,--备案编号
			E.EXW_SERIAL AS exwSerial,--出厂编号
			E.EQUIP_SERIAL AS equipSerial,--设备自编号
			ED.PROJECT_NAME AS projectName, --项目名称
			EI.BUILDING_NUM AS buildingNum, --项目楼号
			EI.STARTIN_DATE AS startinDate, --安装开始时间
			EI.ENDIN_DATE AS endinDate, --安装结束时间
			ED.PROJECT_ID AS projectId,
			EI.INSTALL_HEIGHT AS installHeight, --安装高度
			EI.BRACHIUM AS brachium, --臂长
			EI.FIRST_ATTACH AS firstAttach,--附墙数
			EI.FIRST_KNOT_COUNT AS firstKnotCount,--标准节
			EI.EQUIP_AMOUNT AS equipAmount,
			EI.REMARK AS remark, --备注
			EI.INSTALL_ID AS installId,
			EI.CURRENT_INSTALL_HEIGHT AS currentInstallHeight, --当前高度
			EI.INSTALL_LOCATION AS installLocation, --位置
			EI.CHECK_ATTACH AS checkAttach, --自检照片
			EI.FILE_ATTACHES AS fileAttachs, --安装照片
			EI.PARTAKE AS partake,--安装人员
			IR.REVIEW_ID AS reviewId,
			IR.REVIW_CHECK_ATTACH AS reviwCheckAttach, --验收照片
			IR.REVIEW_CONCLUSION AS reviewConclusion, --验收结论
			IR.REVIE_STATUS AS revieStatus, --验收结果
			IR.REJECT_REASON AS rejectReason --驳回理由
		FROM T_EQUIPMENT_INSTALL EI 
		LEFT JOIN T_INSTALL_REVIEW IR ON IR.RELATE_ID = EI.INSTALL_ID
		LEFT JOIN T_EQUIPMENT_FLOW EF ON EI.FLOW_ID = EF.FLOW_ID
		LEFT JOIN T_EQUIPMENT E ON EF.EQUIP_ID = E.EQUIP_ID
		LEFT JOIN T_EQUIPMENT_DIARY ED ON EF.EQUIP_DIARY_ID = ED.EQUIP_DIARY_ID
		WHERE EI.INSTALL_ID = @INSTALL_ID
		AND IR.RELATE_MODULE = 'EQUIP_INSTALL'
	]]>
	</select>
	
	<!-- 微信现场安装之整改记录列表-->
    <select id="wechat_rectifica_check_detail">
	<![CDATA[
		DECLARE @RELATE_ID BIGINT
        SET @RELATE_ID = ?
   	     SELECT
			IR.REVIEW_ID AS reviewId,
			IR.REVIW_CHECK_ATTACH AS reviwCheckAttach,--验收照片
			IR.REVIEW_CONCLUSION AS reviewConclusion,--验收结论
			IR.REVIE_STATUS AS revieStatus,--验收结果
			IR.REJECT_REASON AS rejectReason,--驳回理由
			RR.RECTIFICA_ID AS rectificaId,
			RR.RECTIFICA_IMAGE AS rectificaImage,-- 整改照片
			RR.RECTIFICA_DATE AS rectificaDate,-- 整改日期
			RR.RECTIFICA_DETAIL AS rectificaDetail-- 整改内容
		FROM T_INSTALL_REVIEW IR 
		LEFT JOIN T_RECTIFICATION_RECORD RR ON IR.REVIEW_ID = RR.REVIEW_ID 
		WHERE IR.RELATE_ID = @RELATE_ID
		AND IR.RELATE_MODULE LIKE 'EQUIP_INSTALL' + '%'
	]]>
	</select>
	
	<!-- 微信现场安装之正在安装/待拆卸列表-->
    <select id="wechat_equip_installing_list">
	<![CDATA[
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		DECLARE	@keyword  VARCHAR(64)
		DECLARE @relateModule  VARCHAR(64)
		DECLARE	@dataPermission  VARCHAR(500)
		DECLARE	@depId  VARCHAR(256)
		DECLARE	@year  VARCHAR(7)
		DECLARE	@startDate  VARCHAR(7)
		DECLARE	@endDate  VARCHAR(7)
		SET @START = ?
		SET @PAGE_SIZE =?
		SET @keyword =?
		SET @relateModule =?
		SET @dataPermission = ?
		SET @depId =?
		SET @year =?
		SET @startDate =?
		SET @endDate =?
		;WITH QUERY AS (
				SELECT
				EARD.ADD_REDUCE_ID AS addReduceId,
				TS.DISCLOSURE_ID, 
				EI.INSTALL_ID,
				EDT.DISMANTLE_ID,
				TS.RELATE_ID AS relateId,
				TS.RELATE_MODULE AS relateModule,
				BS.VALUE AS equipSpecificName,--规格型号
			    BG.VALUE AS equipGenericName,--设备名称
				TS.DISCLOSURE_ID AS disclosureId,
				TS.OPERATION_WAY AS operationWay, 
				TS.DISCLOSURE_DATE AS disclosureDate, --交底日期
				TS.DISCLOSURE_MAN AS disclosureMan,--交底人员
				TS.DISCLOSURE_MAN_ID AS disclosureManId,--交底人员id
				E.RECORD_ID AS recordId,--备案编号
				E.EXW_SERIAL AS exwSerial,--出厂编号
				P.PROJECT_NAME AS projectName, --项目名称
				TS.DISPATCH_EQUIP_ID AS dispatchEquipId,
				DE.DISPATCH_ID AS dispatchId,
				TS.BUILDING_NUM AS buildingNum,
				TS.EQUIP_ID AS equipId,
				TS.PROJECT_ID AS projectId,
				E.EQUIP_SERIAL AS equipSerial,--设备自编号
				ROW_NUMBER() OVER (ORDER BY TS.DISCLOSURE_DATE DESC) AS _ROWNUM
			FROM T_TECHNICAL_DISCLOSURE TS 
			LEFT JOIN (SELECT DISCLOSURE_ID,FLOW_ID,INSTALL_ID,APP_INSTALL_STATE FROM T_EQUIPMENT_INSTALL WHERE DISCLOSURE_ID IS NOT NULL ) EI ON EI.DISCLOSURE_ID = TS.DISCLOSURE_ID 
			LEFT JOIN (SELECT DISCLOSURE_ID,FLOW_ID,DISMANTLE_ID,APP_DISMANTLE_STATE FROM T_EQUIPMENT_DISMANTLE WHERE DISCLOSURE_ID IS NOT NULL ) EDT ON EDT.DISCLOSURE_ID = TS.DISCLOSURE_ID 
			LEFT JOIN T_EQUIPMENT E ON TS.EQUIP_ID = E.EQUIP_ID
			LEFT JOIN T_EQUIPMENT_FLOW EF ON EF.FLOW_ID = EI.FLOW_ID
			LEFT JOIN T_EQUIPMENT_DIARY ED ON ED.EQUIP_DIARY_ID = EF.EQUIP_DIARY_ID
			LEFT JOIN T_PROJECT P ON TS.PROJECT_ID = P.PROJECT_ID
			LEFT JOIN T_DISPATCH_EQUIP DE ON DE.DISPATCH_EQUIP_ID = TS.DISPATCH_EQUIP_ID
			LEFT JOIN T_CONTRACT_LEASE CL ON TS.CONTRACT_ID = CL.CONTRACT_ID
			LEFT JOIN DEPARTMENT D ON CL.COMPETENT_DEPARTMET_ID = D.DEP_ID
			LEFT JOIN BM_EQUIP_SPECIFIC BS ON E.EQUIP_SPECIFIC = BS.CODE
		    LEFT JOIN BM_EQUIP_GENERIC BG ON E.EQUIP_GENERIC = BG.CODE
		    LEFT JOIN T_EQUIP_ADD_REDUCE_DETAIL EARD ON  EARD.DISCLOSURE_ID =  TS.DISCLOSURE_ID 
			WHERE  
			TS.RELATE_MODULE LIKE '%'+@relateModule+'%'
			AND (
					TS.RELATE_MODULE = 'EQUIP_INSTALL_ADD' AND (EARD.APP_INSTALL_STATE <> 2 OR EI.APP_INSTALL_STATE IS NULL AND EARD.APP_INSTALL_STATE IS NULL)
					OR TS.RELATE_MODULE = 'EQUIP_DISMANTLE_REDUCE' AND (EARD.APP_DISMANTLE_STATE <> 2 OR EDT.APP_DISMANTLE_STATE IS NULL AND EARD.APP_DISMANTLE_STATE IS NULL )
					OR TS.RELATE_MODULE = 'EQUIP_INSTALL' AND (EI.APP_INSTALL_STATE <> 2  OR EI.APP_INSTALL_STATE IS NULL AND EARD.APP_INSTALL_STATE IS NULL)
					OR TS.RELATE_MODULE = 'EQUIP_DISMANTLE' AND (EDT.APP_DISMANTLE_STATE <> 2 OR EDT.APP_DISMANTLE_STATE IS NULL AND EARD.APP_DISMANTLE_STATE IS NULL)
			)
			AND (SELECT dbo.PermissionFilter(CL.PERMISSION_FLAG, @dataPermission))=1
			AND (CHARINDEX(','+CONVERT(VARCHAR,D.DEP_ID)+',',@depId)>0  OR @depId = '' OR @depId IS NULL)
			AND (LEFT(TS.DISCLOSURE_DATE,7) LIKE '%'+@year+'%' OR @year = '' OR @year IS NULL)
			AND (LEFT(TS.DISCLOSURE_DATE,7) >= @startDate OR @startDate = '' OR @startDate IS NULL)
			AND (LEFT(TS.DISCLOSURE_DATE,7) <= @endDate OR @endDate = '' OR @endDate IS NULL)
			AND (
				(E.RECORD_ID LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
				OR (E.EXW_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
				OR (P.PROJECT_NAME LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
				OR (E.EQUIP_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
				)
			)
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	
	<!-- 微信现场拆卸之待拆卸列表(未做过降节)-->
	<select id="wechat_wait_dismantle_list">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE	@keyword  VARCHAR(64)
        DECLARE	@dataPermission  VARCHAR(500)
        SET @START = ?
   	    SET @PAGE_SIZE =?
   	    SET @keyword =?
   	    SET @dataPermission =?
   	    ;WITH QUERY AS (
   	      	SELECT
   	      		BS.VALUE AS equipSpecificName,--规格型号
			    BG.VALUE AS equipGenericName,--设备名称
			    ED.EQUIP_GENERIC AS equipGeneric,
				ED.RECORD_ID AS recordId,--备案编号
				ED.EXW_SERIAL AS exwSerial,--出厂编号
				ED.EQUIP_SERIAL AS equipSerial,--设备自编号
				EI.FLOW_ID AS flowId,
				EI.INSTALL_ID AS installId,
				EI.INSTALL_HEIGHT AS installHeight, --安装高度
				EI.BRACHIUM AS brachium, --臂长
				EI.FIRST_ATTACH AS firstAttach,--附墙数
				EI.FIRST_KNOT_COUNT AS firstKnotCount,--标准节
				EI.EQUIP_AMOUNT AS equipAmount,
				EI.REMARK AS remark, --备注
				EI.CURRENT_INSTALL_HEIGHT AS currentInstallHeight, --当前高度
				EI.INSTALL_LOCATION AS installLocation, --位置
				EI.STARTIN_DATE AS startinDate,--安装开始时间
				ED.PROJECT_ID AS projectId,--项目名称
				ED.PROJECT_NAME AS projectName,--项目名称
				EI.BUILDING_NUM AS buildingNum,--楼号
				EF.EQUIP_ID AS equipId,
				EF.CONTRACT_ID AS contractId,
				EF.DISPATCH_EQUIP_ID AS dispatchEquipId,
				EI.KNOT_COUNTS AS knotCounts,
				EI.WALL_ATTACHE_QTY AS wallAttacheQty,
				SUM(EARD.KNOT_NUM)AS knotGross,
				SUM(EARD.WALL_ATTACHE_NUM)AS wallAttacheGross,
				SUM(EARD.WALL_ATTACHE_POLE_QTY)AS wallAttachePoleGross,
				SUM(EARD.WALL_ATTACHE_FRAME_QTY)AS wallAttacheFrameGross,
				ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_EQUIPMENT_INSTALL EI
			LEFT JOIN T_EQUIPMENT_FLOW EF ON EI.FLOW_ID = EF.FLOW_ID
			LEFT JOIN T_CONTRACT_LEASE CL ON EF.CONTRACT_ID = CL.CONTRACT_ID
			LEFT JOIN T_EQUIPMENT_DIARY ED ON ED.EQUIP_DIARY_ID = EF.EQUIP_DIARY_ID
			LEFT JOIN T_EQUIP_ADD_REDUCE_DETAIL EARD ON EARD.RELATE_ID = EI.INSTALL_ID
			LEFT JOIN T_EQUIPMENT E ON E.EQUIP_ID = ED.EQUIP_ID
			LEFT JOIN BM_EQUIP_SPECIFIC BS ON ED.EQUIP_SPECIFIC = BS.CODE
		    LEFT JOIN BM_EQUIP_GENERIC BG ON ED.EQUIP_GENERIC = BG.CODE
			WHERE EI.DEL_FLAG = '1' AND EI.APPLYFOR_STATE = '3' AND EI.APP_INSTALL_STATE = '2'
			AND EF.FLOW_STATE<6 AND EF.FLOW_STATE >= 2
	   	    AND ((ED.RECORD_ID LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (ED.EXW_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (ED.EQUIP_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (ED.PROJECT_NAME LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (BG.VALUE LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL ))
			AND (SELECT dbo.PermissionFilter(CL.PERMISSION_FLAG, @dataPermission))=1
			GROUP BY 
			    BS.VALUE,
			    BG.VALUE,
			    ED.RECORD_ID,
				ED.EXW_SERIAL,
				ED.EQUIP_SERIAL,
				ED.EQUIP_GENERIC,
				EI.FLOW_ID,
				EI.INSTALL_ID,
				EI.INSTALL_HEIGHT, 
				EI.BRACHIUM, 
				EI.FIRST_ATTACH,
				EI.FIRST_KNOT_COUNT,
				EI.EQUIP_AMOUNT,
				EI.REMARK, 
				EI.CURRENT_INSTALL_HEIGHT, 
				EI.INSTALL_LOCATION, 
				EI.STARTIN_DATE,
				ED.PROJECT_ID,
				ED.PROJECT_NAME,
				EI.BUILDING_NUM,
				EF.EQUIP_ID,
				EF.CONTRACT_ID,
				EF.DISPATCH_EQUIP_ID,
				EI.KNOT_COUNTS,
				EI.WALL_ATTACHE_QTY 
		 )
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!-- 微信现场拆卸之待拆卸列表(已做过降节)-->
	<select id="wechat_wait_dismantleComponent_list">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE	@keyword  VARCHAR(64)
        DECLARE	@dataPermission  VARCHAR(500)
        SET @START = ?
   	    SET @PAGE_SIZE =?
   	    SET @keyword =?
   	    SET @dataPermission =?
   	    ;WITH QUERY AS (
   	      	SELECT
   	      		BS.VALUE AS equipSpecificName,--规格型号
			    BG.VALUE AS equipGenericName,--设备名称
			    ED.EQUIP_GENERIC AS equipGeneric,
				ED.RECORD_ID AS recordId,--备案编号
				ED.EXW_SERIAL AS exwSerial,--出厂编号
				ED.EQUIP_SERIAL AS equipSerial,--设备自编号
				EI.FLOW_ID AS flowId,
				EI.INSTALL_ID AS installId,
				EI.INSTALL_HEIGHT AS installHeight, --安装高度
				EI.BRACHIUM AS brachium, --臂长
				EI.FIRST_ATTACH AS firstAttach,--附墙数
				EI.FIRST_KNOT_COUNT AS firstKnotCount,--标准节
				EI.EQUIP_AMOUNT AS equipAmount,
				EI.REMARK AS remark, --备注
				EI.CURRENT_INSTALL_HEIGHT AS currentInstallHeight, --当前高度
				EI.INSTALL_LOCATION AS installLocation, --位置
				EI.STARTIN_DATE AS startinDate,--安装开始时间
				ED.PROJECT_ID AS projectId,--项目名称
				ED.PROJECT_NAME AS projectName,--项目名称
				EI.BUILDING_NUM AS buildingNum,--楼号
				EF.EQUIP_ID AS equipId,
				EF.CONTRACT_ID AS contractId,
				EF.DISPATCH_EQUIP_ID AS dispatchEquipId,
				EI.KNOT_COUNTS AS knotCounts,
				EI.WALL_ATTACHE_QTY AS wallAttacheQty,
				SUM(EARD.KNOT_NUM)AS knotGross,
				SUM(EARD.WALL_ATTACHE_NUM)AS wallAttacheGross,
				SUM(EARD.WALL_ATTACHE_POLE_QTY)AS wallAttachePoleGross,
				SUM(EARD.WALL_ATTACHE_FRAME_QTY)AS wallAttacheFrameGross,
				ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_EQUIPMENT_INSTALL EI
			LEFT JOIN T_EQUIPMENT_FLOW EF ON EI.FLOW_ID = EF.FLOW_ID
			LEFT JOIN T_CONTRACT_LEASE CL ON EF.CONTRACT_ID = CL.CONTRACT_ID
			LEFT JOIN T_EQUIPMENT_DIARY ED ON ED.EQUIP_DIARY_ID = EF.EQUIP_DIARY_ID
			LEFT JOIN T_EQUIP_ADD_REDUCE_DETAIL EARD ON EARD.RELATE_ID = EI.INSTALL_ID
			LEFT JOIN T_EQUIPMENT E ON E.EQUIP_ID = ED.EQUIP_ID
			LEFT JOIN BM_EQUIP_SPECIFIC BS ON ED.EQUIP_SPECIFIC = BS.CODE
		    LEFT JOIN BM_EQUIP_GENERIC BG ON ED.EQUIP_GENERIC = BG.CODE
			WHERE EI.DEL_FLAG = '1' AND EI.APPLYFOR_STATE = '3' AND EI.APP_INSTALL_STATE = '2'
			AND EF.FLOW_STATE<6 AND EF.FLOW_STATE >= 2
			AND EARD.ADD_REDUCE_ID IS NOT NULL
	   	    AND ((ED.RECORD_ID LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (ED.EXW_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (ED.EQUIP_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (ED.PROJECT_NAME LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (BG.VALUE LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL ))
			AND (SELECT dbo.PermissionFilter(CL.PERMISSION_FLAG, @dataPermission))=1
			GROUP BY 
			    BS.VALUE,
			    BG.VALUE,
			    ED.RECORD_ID,
				ED.EXW_SERIAL,
				ED.EQUIP_SERIAL,
				ED.EQUIP_GENERIC,
				EI.FLOW_ID,
				EI.INSTALL_ID,
				EI.INSTALL_HEIGHT, 
				EI.BRACHIUM, 
				EI.FIRST_ATTACH,
				EI.FIRST_KNOT_COUNT,
				EI.EQUIP_AMOUNT,
				EI.REMARK, 
				EI.CURRENT_INSTALL_HEIGHT, 
				EI.INSTALL_LOCATION, 
				EI.STARTIN_DATE,
				ED.PROJECT_ID,
				ED.PROJECT_NAME,
				EI.BUILDING_NUM,
				EF.EQUIP_ID,
				EF.CONTRACT_ID,
				EF.DISPATCH_EQUIP_ID,
				EI.KNOT_COUNTS,
				EI.WALL_ATTACHE_QTY 
		 )
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
		<!-- 微信现场拆卸之显示列表-->
    <select id="wechat_dismantle_all_list">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE	@keyword  VARCHAR(64)
        DECLARE @state  VARCHAR(24)
        DECLARE @userId  bigint
        DECLARE	@dataPermission  VARCHAR(500)
		DECLARE	@depId  VARCHAR(256)
		DECLARE	@year  VARCHAR(7)
		DECLARE	@startDate  VARCHAR(7)
		DECLARE	@endDate  VARCHAR(7)
        SET @START = ?
   	    SET @PAGE_SIZE =?
   	    SET @keyword =?
   	    SET @state =?
   	    SET @userId =?
   	    SET @dataPermission =?
		SET @depId =?
		SET @year =?
		SET @startDate =?
		SET @endDate =?
   	   ;WITH QUERY AS (
			SELECT
				T.*,
				ROW_NUMBER() OVER (ORDER BY T.startdisDate DESC) AS _ROWNUM
			FROM(SELECT
				'0' AS state,
				TS.OPERATION_WAY AS operationWay,
				ED.EQUIP_AMOUNT AS equipAmount,
			    P.MATERIAL_PRACTI_NAME AS materialPractiName,
				EI.RECORD_ID AS recordId,--备案编号
				EI.EXW_SERIAL AS exwSerial,--出厂编号
				E.EQUIP_SERIAL AS equipSerial,--设备自编号
				ED.FLOW_ID AS flowId,
				ED.STARTDIS_DATE AS startdisDate,--拆卸开始时间
				EI.PROJECT_NAME AS projectName,--项目名称
				ET.BUILDING_NUM AS buildingNum,--楼号
				ED.DISMANTLE_ID AS dismantleId,
				ED.APP_DISMANTLE_STATE AS appDismantleState,
				CL.PERMISSION_FLAG,
				IR.REVIEW_ID,
				ED.USER_ID,
				D.DEP_ID
			FROM T_EQUIPMENT_DISMANTLE ED
			LEFT JOIN T_EQUIPMENT_INSTALL ET ON ED.FLOW_ID = ET.FLOW_ID
			LEFT JOIN T_TECHNICAL_DISCLOSURE TS ON TS.RELATE_ID = ED.DISMANTLE_ID
			LEFT JOIN T_EQUIPMENT_FLOW EF ON ED.FLOW_ID = EF.FLOW_ID
			LEFT JOIN T_CONTRACT_LEASE CL ON EF.CONTRACT_ID = CL.CONTRACT_ID
			LEFT JOIN DEPARTMENT D ON CL.COMPETENT_DEPARTMET_ID = D.DEP_ID
			LEFT JOIN T_EQUIPMENT_DIARY EI ON EF.EQUIP_DIARY_ID = EI.EQUIP_DIARY_ID
			LEFT JOIN T_EQUIPMENT E ON E.EQUIP_ID = EF.EQUIP_ID
			LEFT JOIN T_PROJECT P ON P.PROJECT_ID = EI.PROJECT_ID
			LEFT JOIN T_INSTALL_REVIEW IR ON IR.RELATE_ID = ED.DISMANTLE_ID AND IR.RELATE_MODULE = 'EQUIP_DISAMNTLE'
			WHERE ED.DEL_FLAG = '1'
			AND (CHARINDEX(','+ED.APP_DISMANTLE_STATE+',',@state)>0 OR @state = '' OR @state IS NULL)
			AND (CONVERT(DATE,ED.STARTDIS_DATE) LIKE '%'+@year+'%' OR @year = '' OR @year IS NULL)
			AND (LEFT(CONVERT(DATE,ED.STARTDIS_DATE),7) >= @startDate OR @startDate = '' OR @startDate IS NULL)
			AND (LEFT(CONVERT(DATE,ED.STARTDIS_DATE),7) <= @endDate OR @endDate = '' OR @endDate IS NULL)
			UNION ALL
			SELECT
				'1' AS state,
				TS.OPERATION_WAY AS operationWay,
				EDI.EQUIP_AMOUNT AS equipAmount,
			    P.MATERIAL_PRACTI_NAME AS materialPractiName,
				EI.RECORD_ID AS recordId,--备案编号
				EI.EXW_SERIAL AS exwSerial,--出厂编号
				E.EQUIP_SERIAL AS equipSerial,--设备自编号
				EF.FLOW_ID AS flowId,
				ED.EXECUTE_DATE AS startdisDate,--拆卸开始时间
				EI.PROJECT_NAME AS projectName,--项目名称
				ET.BUILDING_NUM AS buildingNum,--楼号
				ED.ADD_REDUCE_ID AS dismantleId,
				ED.APP_DISMANTLE_STATE AS appDismantleState,
				CL.PERMISSION_FLAG,
				IR.REVIEW_ID,
				ED.EXECUTER_ID as USER_ID,
				D.DEP_ID
			FROM T_EQUIP_ADD_REDUCE_DETAIL ED
			LEFT JOIN T_TECHNICAL_DISCLOSURE TS ON TS.DISCLOSURE_ID = ED.DISCLOSURE_ID
			LEFT JOIN T_EQUIPMENT_INSTALL ET ON ED.RELATE_ID = ET.INSTALL_ID
			LEFT JOIN T_EQUIPMENT_DISMANTLE EDI ON EDI.INSTALL_ID = ET.INSTALL_ID
			LEFT JOIN T_EQUIPMENT_FLOW EF ON ET.FLOW_ID = EF.FLOW_ID
			LEFT JOIN T_CONTRACT_LEASE CL ON EF.CONTRACT_ID = CL.CONTRACT_ID
			LEFT JOIN DEPARTMENT D ON CL.COMPETENT_DEPARTMET_ID = D.DEP_ID
			LEFT JOIN T_EQUIPMENT_DIARY EI ON EF.EQUIP_DIARY_ID = EI.EQUIP_DIARY_ID
			LEFT JOIN T_EQUIPMENT E ON E.EQUIP_ID = EF.EQUIP_ID
			LEFT JOIN T_PROJECT P ON P.PROJECT_ID = EI.PROJECT_ID
			LEFT JOIN T_INSTALL_REVIEW IR ON IR.RELATE_ID = ED.ADD_REDUCE_ID AND IR.RELATE_MODULE = 'EQUIP_DISMANTLE_REDUCE'
			WHERE ED.RELATE_MODULE = 'EQUIP_DISMANTLE_REDUCE'
			AND (CHARINDEX(','+ED.APP_DISMANTLE_STATE+',',@state)>0 OR @state = '' OR @state IS NULL)
			AND (LEFT(ED.EXECUTE_DATE,4) LIKE '%'+@year+'%' OR @year = '' OR @year IS NULL)
			AND (LEFT(ED.EXECUTE_DATE,7) >= @startDate OR @startDate = '' OR @startDate IS NULL)
			AND (LEFT(ED.EXECUTE_DATE,7) <= @endDate OR @endDate = '' OR @endDate IS NULL))T
			WHERE (T.USER_ID = @userId OR @userId = '' OR @userId IS NULL )
			AND (CHARINDEX(','+CONVERT(VARCHAR,T.DEP_ID)+',',@depId)>0  OR @depId = '' OR @depId IS NULL)
			AND (SELECT dbo.PermissionFilter(T.PERMISSION_FLAG, @dataPermission))=1
			AND ((T.recordId LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (T.exwSerial LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (T.projectName LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (T.buildingNum LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (T.equipSerial LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL ))
		)
		SELECT (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
		ORDER BY QUERY.startdisDate desc
	]]>
	</select>
	
		<!-- 微信现场拆卸之整改记录列表-->
    <select id="wechat_dismantle_check_detail">
	<![CDATA[
		DECLARE @RELATE_ID BIGINT
        SET @RELATE_ID = ?
   	    SELECT
			IR.REVIEW_ID AS reviewId,
			IR.REVIW_CHECK_ATTACH AS reviwCheckAttach,--验收照片
			IR.REVIEW_CONCLUSION AS reviewConclusion,--验收结论
			IR.REVIE_STATUS AS revieStatus,--验收结果
			IR.REJECT_REASON AS rejectReason,--驳回理由
			RR.RECTIFICA_ID AS rectificaId,
			RR.RECTIFICA_IMAGE AS rectificaImage,-- 整改照片
			RR.RECTIFICA_DATE AS rectificaDate,-- 整改日期
			RR.RECTIFICA_DETAIL AS rectificaDetail-- 整改内容
		FROM T_INSTALL_REVIEW IR 
		LEFT JOIN T_RECTIFICATION_RECORD RR ON IR.REVIEW_ID = RR.REVIEW_ID 
		WHERE IR.RELATE_ID = @RELATE_ID
		AND IR.RELATE_MODULE LIKE 'EQUIP_DISMANTLE' + '%'
	]]>
	</select>
		
	<!-- 微信现场拆卸之拆卸完成详情-->
    <select id="wechat_dismantle_pass_detail">
	<![CDATA[
		DECLARE @DISMANTLE_ID BIGINT
        SET @DISMANTLE_ID = ?
		SELECT
			EI.RECORD_ID AS recordId,--备案编号
			EI.EXW_SERIAL AS exwSerial,--出厂编号
			EI.EQUIP_SERIAL AS equipSerial,--设备自编号
			ED.FLOW_ID AS flowId,
			ED.STARTDIS_DATE AS startdisDate,--拆卸开始时间
			ED.ENDDIS_DATE AS enddisDate,--拆卸结束时间
			ED.DISMANTLE_HEIGHT AS dismantleHeight,--拆卸高度
			ED.PARTAKE AS partake,--拆卸人员
			ED.CHECK_ATTACH AS checkAttach, --自检照片
			ED.FILE_ATTACHES AS fileAttachs, --安装照片
			EI.PROJECT_NAME AS projectName,--项目名称
			ED.DISMANTLE_LOCATION AS dismantleLocation,
			ED.CURRENT_INSTALL_HEIGHT AS currentInstallHeight,
			ED.EQUIP_AMOUNT AS equipAmount,
			EI.BUILDING_NUM AS buildingNum,--楼号
			ED.DISMANTLE_ID AS dismantleId,
			IR.REVIW_CHECK_ATTACH AS reviwCheckAttach, --验收照片
			IR.REVIEW_CONCLUSION AS reviewConclusion, --验收结论
			IR.REVIE_STATUS AS revieStatus, --验收结果
			IR.REJECT_REASON AS rejectReason --驳回理由
		FROM T_EQUIPMENT_DISMANTLE ED 
		LEFT JOIN T_EQUIPMENT_FLOW EF ON ED.FLOW_ID = EF.FLOW_ID
		LEFT JOIN T_EQUIPMENT_DIARY EI ON EF.EQUIP_DIARY_ID = EI.EQUIP_DIARY_ID
		LEFT JOIN T_INSTALL_REVIEW IR ON IR.RELATE_ID = ED.DISMANTLE_ID
		WHERE ED.DISMANTLE_ID = @DISMANTLE_ID
		AND IR.RELATE_MODULE = 'EQUIP_DISMANTLE'
	]]>
	</select>
	
	<!-- 微信现场拆卸之拆卸整改验收详情(整机)-->
    <select id="wechat_dismantle_rectifica_detail">
	<![CDATA[
		DECLARE @DISMANTLE_ID BIGINT
        SET @DISMANTLE_ID = ?
   	     SELECT T.* FROM ( SELECT 
   	        TS.DISCLOSURE_LOCATION AS disclosureLocation,
			TS.DISCLOSURE_PHOTO AS disclosurePhoto,
		    TS.ACCEPTANCE_MAN_ID AS acceptanceManId,
			TS.ACCEPTANCE_MAN AS acceptanceMan,
			TS.DISCLOSURE_MAN_ID AS disclosureManId,
			TS.DISCLOSURE_MAN AS disclosureMan,
			EIN.INSTALL_ID AS installId, 
			TS.DISCLOSURE_DATE AS disclosureDate, --交底日期
   	        TS.OPERATION_WAY AS operationWay,
   	        EIN.APPROACH_NUMBER AS approachNumber,
   	        TS.DISCLOSURE_ID AS disclosuerId,
   	        P.MATERIAL_PRACTI_NAME AS materialPractiName,
			EI.RECORD_ID AS recordId,--备案编号
			EI.EXW_SERIAL AS exwSerial,--出厂编号
			EI.EQUIP_SERIAL AS equipSerial,--设备自编号
			ED.FLOW_ID AS flowId,
			ED.STARTDIS_DATE AS startdisDate,--拆卸开始时间
			ED.ENDDIS_DATE AS enddisDate,--拆卸结束时间
			ED.DISMANTLE_HEIGHT AS dismantleHeight,--拆卸高度
			ED.PARTAKE AS partake,--拆卸人员
			ED.EQUIP_AMOUNT AS equipAmount,
			ED.CHECK_ATTACH AS checkAttach, --自检照片
			ED.FILE_ATTACHES AS fileAttachs, --安装照片
			EI.PROJECT_NAME AS projectName,--项目名称
			EIN.BUILDING_NUM AS buildingNum,--楼号
			ED.DISMANTLE_ID AS dismantleId,
			ED.DISMANTLE_LOCATION AS dismantleLocation,
			EIN.INSTALL_LOCATION AS installLocation,
			ED.REMARK AS remark,
			E.EQUIP_GENERIC AS equipGeneric,
			BG.VALUE AS equipGenericName,
			TT.REVIEW_ID AS reviewId,
			TT.RECTIFICA_IMAGE AS rectificaImage, -- 整改照片
			TT.RECTIFICA_DATE AS rectificaDate, -- 整改日期
			TT.RECTIFICA_DETAIL AS rectificaDetail, -- 整改内容
			TT.REVIW_CHECK_ATTACH AS reviwCheckAttach, --验收照片
			TT.REVIEW_CONCLUSION AS reviewConclusion, --验收结论
			TT.REVIE_STATUS AS revieStatus, --验收结果
			TT.REJECT_REASON AS rejectReason, --驳回理由
		    ED.KNOT_DIS_QTY AS knotDisQty,
		    ED.WALL_ATTACHE_DIS_QTY AS wallAttacheDisQty,
		    ED.WALL_ATTACHE_FRAME_QTY AS wallAttacheFrameQty,
		    ED.WALL_ATTACHE_POLE_QTY AS wallAttachePoleQty,
		    EIN.CURRENT_INSTALL_HEIGHT AS currentInstallHeight,
		    EIN.KNOT_COUNTS AS knotGross ,
		    EIN.BRACHIUM AS brachium,
		    EIN.WALL_ATTACHE_QTY AS wallAttacheGross ,
		    EIN.WALL_ATTACHE_FRAME_COUNT AS wallAttacheFrameGross ,
		    EIN.WALL_ATTACHE_POLE_COUNT AS wallAttachePoleGross
		FROM T_EQUIPMENT_DISMANTLE ED
		LEFT JOIN T_TECHNICAL_DISCLOSURE TS ON TS.DISCLOSURE_ID = ED.DISCLOSURE_ID
		LEFT JOIN T_EQUIPMENT_INSTALL EIN ON EIN.INSTALL_ID = ED.INSTALL_ID
		LEFT JOIN T_EQUIPMENT_FLOW EF ON ED.FLOW_ID = EF.FLOW_ID
		LEFT JOIN T_EQUIPMENT_DIARY EI ON EF.EQUIP_DIARY_ID = EI.EQUIP_DIARY_ID
		LEFT JOIN T_EQUIPMENT E ON EF.EQUIP_ID = E.EQUIP_ID
		LEFT JOIN BM_EQUIP_GENERIC BG ON E.EQUIP_GENERIC = BG.CODE
		LEFT JOIN T_PROJECT P ON P.PROJECT_ID = EI.PROJECT_ID
		LEFT JOIN (SELECT TOP 1 IR.*,RR.RECTIFICA_IMAGE,RR.RECTIFICA_DATE,RR.RECTIFICA_DETAIL
		FROM T_INSTALL_REVIEW IR
		LEFT JOIN T_EQUIPMENT_DISMANTLE ED ON ED.DISMANTLE_ID = IR.RELATE_ID
		LEFT JOIN T_EQUIPMENT_INSTALL EI ON EI.INSTALL_ID = ED.INSTALL_ID
		LEFT JOIN T_RECTIFICATION_RECORD RR ON IR.REVIEW_ID = RR.REVIEW_ID
		LEFT JOIN T_TECHNICAL_DISCLOSURE TS ON TS.RELATE_ID  = IR.RELATE_ID
		WHERE IR.RELATE_MODULE LIKE 'EQUIP_DISMANTLE' AND IR.RELATE_ID = @DISMANTLE_ID ORDER BY IR.REVIEW_ID DESC)TT ON TT.RELATE_ID = ED.DISMANTLE_ID
		WHERE ED.DISMANTLE_ID = @DISMANTLE_ID)T
	]]>
	</select>
	<!-- 微信现场拆卸之拆卸降节整改验收详情-->
    <select id="wechat_dismantle_reduce_rectifica_detail">
	<![CDATA[
		DECLARE @DISMANTLE_ID BIGINT
        SET @DISMANTLE_ID = ?
   	   SELECT T.* FROM ( SELECT 
   	        TS.DISCLOSURE_LOCATION AS disclosureLocation,
			TS.DISCLOSURE_PHOTO AS disclosurePhoto,
		    TS.ACCEPTANCE_MAN_ID AS acceptanceManId,
			TS.ACCEPTANCE_MAN AS acceptanceMan,
			TS.DISCLOSURE_MAN_ID AS disclosureManId,
			TS.DISCLOSURE_MAN AS disclosureMan,
			EARD.ADD_REDUCE_ID AS addReduceId,
			EARD.ADD_REDUCE_ID AS dismantleId,
			EARD.INSTALL_ID AS installId, 
			TS.DISCLOSURE_DATE AS disclosureDate, --交底日期
   	        TS.OPERATION_WAY AS operationWay,
   	        EIN.APPROACH_NUMBER AS approachNumber,
   	        TS.DISCLOSURE_ID AS disclosuerId,
   	        P.MATERIAL_PRACTI_NAME AS materialPractiName,
			EI.RECORD_ID AS recordId,--备案编号
			EI.EXW_SERIAL AS exwSerial,--出厂编号
			EI.EQUIP_SERIAL AS equipSerial,--设备自编号
			EI.PROJECT_NAME AS projectName,--项目名称
			EIN.BUILDING_NUM AS buildingNum,--楼号
			EIN.INSTALL_LOCATION AS installLocation,
			EIN.BRACHIUM AS brachium,
			E.EQUIP_GENERIC AS equipGeneric,
			BG.VALUE AS equipGenericName,
			TT.REVIEW_ID AS reviewId,
			TT.RECTIFICA_IMAGE AS rectificaImage, -- 整改照片
			TT.RECTIFICA_DATE AS rectificaDate, -- 整改日期
			TT.RECTIFICA_DETAIL AS rectificaDetail, -- 整改内容
			TT.REVIW_CHECK_ATTACH AS reviwCheckAttach, --验收照片
			TT.REVIEW_CONCLUSION AS reviewConclusion, --验收结论
			TT.REVIE_STATUS AS revieStatus, --验收结果
			TT.REJECT_REASON AS rejectReason, --驳回理由
			EARD.STARTIN_DATE AS startdisDate,
			EARD.ENDIN_DATE AS enddisDate,
			EARD.INSTALL_HEIGHT AS dismantleHeight,
			EIN.CURRENT_INSTALL_HEIGHT AS currentInstallHeight,
			EARD.PARTAKE AS partake,
			EARD.REMARK AS remark,
			EARD.FILE_ATTACHES AS fileAttachs,
			EARD.CHECK_ATTACH AS checkAttach,
			EARD.KNOT_DIS_QTY AS knotDisQty,
			EARD.WALL_ATTACHE_DIS_QTY AS wallAttacheDisQty,
			EARD.WALL_ATTACHE_POLE_QTY AS wallAttachePoleQty,
			EARD.WALL_ATTACHE_FRAME_QTY AS wallAttacheFrameQty,
			EIN.KNOT_COUNTS AS knotGross,
			EIN.WALL_ATTACHE_QTY AS wallAttacheGross,
			EIN.WALL_ATTACHE_POLE_COUNT AS wallAttachePoleGross,
			EIN.WALL_ATTACHE_FRAME_COUNT AS wallAttacheFrameGross
        FROM T_EQUIP_ADD_REDUCE_DETAIL EARD
		LEFT JOIN T_TECHNICAL_DISCLOSURE TS ON TS.DISCLOSURE_ID = EARD.DISCLOSURE_ID
		LEFT JOIN T_EQUIPMENT_INSTALL EIN ON EIN.INSTALL_ID = TS.INSTALL_ID
		LEFT JOIN T_EQUIPMENT_FLOW EF ON EIN.FLOW_ID = EF.FLOW_ID
		LEFT JOIN T_EQUIPMENT_DIARY EI ON EF.EQUIP_DIARY_ID = EI.EQUIP_DIARY_ID
		LEFT JOIN T_EQUIPMENT E ON E.EQUIP_ID = EF.EQUIP_ID
		LEFT JOIN BM_EQUIP_GENERIC BG ON E.EQUIP_GENERIC = BG.CODE
		LEFT JOIN T_PROJECT P ON P.PROJECT_ID = EI.PROJECT_ID
		LEFT JOIN (SELECT TOP 1 IR.*,RR.RECTIFICA_IMAGE,RR.RECTIFICA_DATE,RR.RECTIFICA_DETAIL
		FROM T_INSTALL_REVIEW IR
		LEFT JOIN T_EQUIP_ADD_REDUCE_DETAIL EARD ON EARD.INSTALL_ID = IR.INSTALL_ID
		LEFT JOIN T_EQUIPMENT_DISMANTLE ED ON ED.INSTALL_ID = IR.RELATE_ID
		LEFT JOIN T_EQUIPMENT_INSTALL EI ON EI.INSTALL_ID = ED.INSTALL_ID
		LEFT JOIN T_RECTIFICATION_RECORD RR ON IR.REVIEW_ID = RR.REVIEW_ID
		LEFT JOIN T_TECHNICAL_DISCLOSURE TS ON TS.RELATE_ID  = IR.RELATE_ID
		WHERE IR.RELATE_MODULE LIKE 'EQUIP_DISMANTLE_REDUCE' AND IR.RELATE_ID = @DISMANTLE_ID ORDER BY IR.REVIEW_ID DESC)TT ON TT.RELATE_ID = EARD.ADD_REDUCE_ID
		WHERE EARD.ADD_REDUCE_ID = @DISMANTLE_ID)T
	]]>
	</select>
	<!-- 微信现场安装之顶升加节整改验收详情-->
    <select id="wechat_install_add_rectifica_detail">
	<![CDATA[
		DECLARE @INSTALL_ID BIGINT
        SET @INSTALL_ID = ?
   	   SELECT T.* FROM ( 
   	   		SELECT 
	   	        TS.DISCLOSURE_LOCATION AS disclosureLocation,
				TS.DISCLOSURE_PHOTO AS disclosurePhoto,
			    TS.ACCEPTANCE_MAN_ID AS acceptanceManId,
				TS.ACCEPTANCE_MAN AS acceptanceMan,
				TS.DISCLOSURE_MAN_ID AS disclosureManId,
				TS.DISCLOSURE_MAN AS disclosureMan,
				EARD.ADD_REDUCE_ID AS addReduceId,
				EARD.INSTALL_ID AS installId, 
				TS.DISCLOSURE_DATE AS disclosureDate, --交底日期
	   	        TS.OPERATION_WAY AS operationWay,
	   	        EIN.APPROACH_NUMBER AS approachNumber,
	   	        EIN.INSTALL_LOCATION AS installLocation,
	   	        EIN.BRACHIUM AS brachium,
	   	        EIN.CURRENT_INSTALL_HEIGHT currentInstallHeight,
				EARD.STARTIN_DATE AS startinDate,
				EARD.ENDIN_DATE AS endinDate,
				EARD.CHECK_ATTACH AS checkAttach, --自检照片
				EARD.FILE_ATTACHES AS fileAttachs, --安装照片
				E.EQUIP_GENERIC AS equipGeneric,
				BG.VALUE AS equipGenericName,
	   	        TS.DISCLOSURE_ID AS disclosuerId,
	   	        P.MATERIAL_PRACTI_NAME AS materialPractiName,
				EI.RECORD_ID AS recordId,--备案编号
				EI.EXW_SERIAL AS exwSerial,--出厂编号
				EI.EQUIP_SERIAL AS equipSerial,--设备自编号
				EI.PROJECT_NAME AS projectName,--项目名称
				EIN.BUILDING_NUM AS buildingNum,--楼号
				TT.REVIEW_ID AS reviewId,
				TT.RECTIFICA_IMAGE AS rectificaImage, -- 整改照片
				TT.RECTIFICA_DATE AS rectificaDate, -- 整改日期
				TT.RECTIFICA_DETAIL AS rectificaDetail, -- 整改内容
				TT.REVIW_CHECK_ATTACH AS reviwCheckAttach, --验收照片
				TT.REVIEW_CONCLUSION AS reviewConclusion, --验收结论
				TT.REVIE_STATUS AS revieStatus, --验收结果
				TT.REJECT_REASON AS rejectReason, --驳回理由
				EARD.INSTALL_HEIGHT installHeight,
				EARD.PARTAKE partake,
				EARD.REMARK AS remark,
				EARD.KNOT_NUM AS knotNum,
				EARD.WALL_ATTACHE_NUM AS wallAttacheNum,
				EARD.WALL_ATTACHE_POLE_NUM AS wallAttachePoleNum,
				EARD.WALL_ATTACHE_FRAME_NUM AS wallAttacheFrameNum,
				EIN.KNOT_COUNTS AS knotGross,
   				EIN.WALL_ATTACHE_QTY AS wallAttacheGross,
				EIN.WALL_ATTACHE_POLE_COUNT AS wallAttachePoleGross,
				EIN.WALL_ATTACHE_FRAME_COUNT AS wallAttacheFrameGross
	        FROM T_EQUIP_ADD_REDUCE_DETAIL EARD
			LEFT JOIN T_TECHNICAL_DISCLOSURE TS ON TS.DISCLOSURE_ID = EARD.DISCLOSURE_ID
			LEFT JOIN T_EQUIPMENT_INSTALL EIN ON EIN.INSTALL_ID = TS.INSTALL_ID
			LEFT JOIN T_EQUIPMENT_FLOW EF ON EIN.FLOW_ID = EF.FLOW_ID
			LEFT JOIN T_EQUIPMENT_DIARY EI ON EF.EQUIP_DIARY_ID = EI.EQUIP_DIARY_ID
			LEFT JOIN T_EQUIPMENT E ON EF.EQUIP_ID = E.EQUIP_ID
			LEFT JOIN BM_EQUIP_GENERIC BG ON E.EQUIP_GENERIC = BG.CODE
			LEFT JOIN T_PROJECT P ON P.PROJECT_ID = EI.PROJECT_ID
			LEFT JOIN (
				SELECT TOP 1 IR.*,RR.RECTIFICA_IMAGE,RR.RECTIFICA_DATE,RR.RECTIFICA_DETAIL
					FROM T_INSTALL_REVIEW IR
					LEFT JOIN T_EQUIP_ADD_REDUCE_DETAIL EARD ON EARD.INSTALL_ID = IR.INSTALL_ID
					LEFT JOIN T_EQUIPMENT_DISMANTLE ED ON ED.INSTALL_ID = IR.RELATE_ID
					LEFT JOIN T_EQUIPMENT_INSTALL EI ON EI.INSTALL_ID = ED.INSTALL_ID
					LEFT JOIN T_RECTIFICATION_RECORD RR ON IR.REVIEW_ID = RR.REVIEW_ID
					LEFT JOIN T_TECHNICAL_DISCLOSURE TS ON TS.RELATE_ID  = IR.RELATE_ID
					WHERE IR.RELATE_MODULE LIKE 'EQUIP_INSTALL_ADD' 
						AND IR.RELATE_ID = @INSTALL_ID ORDER BY IR.REVIEW_ID DESC
			)TT ON TT.RELATE_ID = EARD.ADD_REDUCE_ID
		WHERE EARD.ADD_REDUCE_ID = @INSTALL_ID)T
	]]>
	</select>
	
		
	<!-- 微信现场拆卸之拆卸中列表-->
	<select id="wechat_dismantleing_list">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE	@keyword  VARCHAR(64)
        SET @START = ?
   	    SET @PAGE_SIZE =?
   	    SET @keyword =?
   	    ;WITH QUERY AS (
			SELECT 
				TS.DISCLOSURE_DATE AS disclosureDate, --交底日期
				TS.DISCLOSURE_ID AS disclosureId,
				TS.DISPATCH_EQUIP_ID AS dispatchEquipId,
				E.RECORD_ID AS recordId,--备案编号
				E.EXW_SERIAL AS exwSerial,--出厂编号
				P.PROJECT_NAME AS projectName, --项目名称
				DE.DISPATCH_ID AS dispatchId,
				TS.PROJECT_ID AS projectId,
				TS.EQUIP_ID AS equipId,
				ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_TECHNICAL_DISCLOSURE TS 
			LEFT JOIN T_EQUIPMENT E ON TS.EQUIP_ID = E.EQUIP_ID
			LEFT JOIN T_PROJECT P ON TS.PROJECT_ID = P.PROJECT_ID
			LEFT JOIN T_DISPATCH_EQUIP DE ON DE.DISPATCH_EQUIP_ID = TS.DISPATCH_EQUIP_ID 
			WHERE NOT EXISTS (
			SELECT EI.DISCLOSURE_ID FROM T_EQUIPMENT_DISMANTLE EI 
			WHERE TS.DISCLOSURE_ID = EI.DISCLOSURE_ID )
			AND TS.RELATE_MODULE = 'EQUIP_DISMANTLE'
	   	    AND ((E.RECORD_ID LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (E.EXW_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (P.PROJECT_NAME LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL ))  
		 )
		SELECT (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
	]]>
	</select>
	
	<!--新增技术交底详情-->
	<select id="wechat_disclosure_detail">
	<![CDATA[
     DECLARE @DISCLOSUREID BIGINT
  DECLARE @RELATEMODULE VARCHAR
		SET @DISCLOSUREID = ?
		SET  @RELATEMODULE = ?
		SELECT * FROM (
			SELECT 
			TS.DISCLOSURE_LOCATION AS disclosureLocation,
			TS.DISCLOSURE_PHOTO AS disclosurePhoto,
			TS.ACCEPTANCE_MAN_ID AS acceptanceManId,
			TS.ACCEPTANCE_MAN AS acceptanceMan,
			TS.DISCLOSURE_ID AS disclosureId,
			TS.DISCLOSURE_MAN_ID AS disclosureManId,
			TS.DISCLOSURE_MAN AS disclosureMan,
			TS.INSTALL_ID AS installId, 
			TS.OPERATION_WAY AS operationWay,
			TS.DISCLOSURE_DATE AS disclosureDate, --交底日期
			E.RECORD_ID AS recordId,--备案编号
			E.EXW_SERIAL AS exwSerial,--出厂编号
			E.EQUIP_GENERIC AS equipGeneric,
			BG.VALUE AS equipGenericName,
			P.PROJECT_NAME AS projectName, --项目名称
			TS.DISPATCH_EQUIP_ID AS dispatchEquipId,
			DE.DISPATCH_ID AS dispatchId,
			TS.BUILDING_NUM AS buildingNum,
			TS.EQUIP_ID AS equipId,
			TS.PROJECT_ID AS projectId,
			E.EQUIP_SERIAL AS equipSerial,--设备自编号
			EIN.KNOT_COUNTS AS knotGross,
			EIN.WALL_ATTACHE_QTY AS wallAttacheGross,
			EIN.WALL_ATTACHE_POLE_COUNT AS wallAttachePoleGross,
			EIN.WALL_ATTACHE_FRAME_COUNT AS wallAttacheFrameGross,
			SUM(EARD.KNOT_NUM)AS knotQtm,
			ISNULL(SUM(EARD.WALL_ATTACHE_DIS_QTY),0) AS wallAttacheDisQt,
			ISNULL(SUM(EARD.KNOT_DIS_QTY),0) AS knotDisQt,
			ISNULL(SUM(EARD.WALL_ATTACHE_POLE_QTY),0) AS wallAttachePoleQtm,
			ISNULL(SUM(EARD.WALL_ATTACHE_FRAME_QTY),0) AS wallAttacheFrameQtm,
			(SELECT EIN.KNOT_COUNTS - ISNULL(SUM(EARD.KNOT_DIS_QTY),0)) AS restKnotCount,
			(SELECT EIN.WALL_ATTACHE_QTY - ISNULL(SUM(EARD.WALL_ATTACHE_DIS_QTY),0)) AS restWallAttacheQty,
			(SELECT EIN.WALL_ATTACHE_POLE_COUNT - ISNULL(SUM(EARD.WALL_ATTACHE_POLE_QTY),0)) AS restWallAttacheFrameCount,
			(SELECT EIN.WALL_ATTACHE_FRAME_COUNT - ISNULL(SUM(EARD.WALL_ATTACHE_FRAME_QTY),0)) AS restWallAttachePoleCount,
			(SELECT EI.FLOW_ID FROM T_EQUIPMENT_INSTALL EI WHERE EI.INSTALL_ID = TS.INSTALL_ID) AS flowId,
			(SELECT EI.EQUIP_AMOUNT FROM T_EQUIPMENT_INSTALL EI WHERE EI.INSTALL_ID = TS.INSTALL_ID) AS equipAmount,
			0 AS installHeight,
			(SELECT EI.BRACHIUM FROM T_EQUIPMENT_INSTALL EI WHERE EI.INSTALL_ID = TS.INSTALL_ID) AS brachium,
			(SELECT EI.APPROACH_NUMBER FROM T_EQUIPMENT_INSTALL EI WHERE EI.INSTALL_ID = TS.INSTALL_ID) AS approachNumber,
			(SELECT EI.CURRENT_INSTALL_HEIGHT FROM T_EQUIPMENT_INSTALL EI WHERE EI.INSTALL_ID = TS.INSTALL_ID) AS currentInstallHeight
			FROM T_TECHNICAL_DISCLOSURE TS 
			LEFT JOIN T_EQUIPMENT_INSTALL EIN ON EIN.INSTALL_ID = TS.INSTALL_ID
			LEFT JOIN T_EQUIPMENT_FLOW EF ON EIN.FLOW_ID = EF.FLOW_ID
			LEFT JOIN T_EQUIPMENT_DIARY EI ON EF.EQUIP_DIARY_ID = EI.EQUIP_DIARY_ID
			LEFT JOIN T_EQUIPMENT E ON TS.EQUIP_ID = E.EQUIP_ID
			LEFT JOIN BM_EQUIP_GENERIC BG ON E.EQUIP_GENERIC = BG.CODE
			LEFT JOIN T_PROJECT P ON TS.PROJECT_ID = P.PROJECT_ID
			LEFT JOIN T_DISPATCH_EQUIP DE ON DE.DISPATCH_EQUIP_ID = TS.DISPATCH_EQUIP_ID 
			LEFT JOIN T_EQUIP_ADD_REDUCE_DETAIL EARD ON EARD.RELATE_ID = TS.INSTALL_ID 
				AND EARD.RELATE_MODULE LIKE '%'+@RELATEMODULE+'%' 
			WHERE  @DISCLOSUREID = TS.DISCLOSURE_ID
			GROUP BY 
			EIN.KNOT_COUNTS,
			EIN.WALL_ATTACHE_QTY,
			EIN.WALL_ATTACHE_POLE_COUNT,
			EIN.WALL_ATTACHE_FRAME_COUNT,
			TS.DISCLOSURE_LOCATION,
			TS.DISCLOSURE_PHOTO,
			TS.ACCEPTANCE_MAN_ID,
			TS.ACCEPTANCE_MAN,
			TS.DISCLOSURE_ID,
			TS.DISCLOSURE_MAN_ID,
			TS.DISCLOSURE_MAN,
			TS.INSTALL_ID, 
			TS.OPERATION_WAY,
			TS.DISCLOSURE_DATE, 
			E.RECORD_ID,
			E.EXW_SERIAL,
			E.EQUIP_GENERIC,
			BG.VALUE,
			P.PROJECT_NAME, 
			TS.DISCLOSURE_ID,
			TS.DISPATCH_EQUIP_ID,
			DE.DISPATCH_ID,
			TS.BUILDING_NUM,
			TS.EQUIP_ID,
			TS.PROJECT_ID,
			E.EQUIP_SERIAL
			) T
	]]>
	</select>
	<!-- 微信现场拆卸之拆卸中的列表-->
	<select id="wechat_wait_dismantling_list">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE	@keyword  VARCHAR(64)
        SET @START = ?
   	    SET @PAGE_SIZE =?
   	    SET @keyword =?
   	    ;WITH QUERY AS (
   	      	SELECT
				ED.RECORD_ID AS recordId,--备案编号
				ED.EXW_SERIAL AS exwSerial,--出厂编号
				ED.EQUIP_SERIAL AS equipSerial,--设备自编号
				EI.FLOW_ID AS flowId,
				EI.INSTALL_ID AS installId,
				EI.INSTALL_HEIGHT AS installHeight, --安装高度
				EI.BRACHIUM AS brachium, --臂长
				EI.FIRST_ATTACH AS firstAttach,--附墙数
				EI.FIRST_KNOT_COUNT AS firstKnotCount,--标准节
				EI.EQUIP_AMOUNT AS equipAmount,
				EI.REMARK AS remark, --备注
				EI.CURRENT_INSTALL_HEIGHT AS currentInstallHeight, --当前高度
				EI.INSTALL_LOCATION AS installLocation, --位置
				EI.STARTIN_DATE AS startinDate,--安装开始时间
				ED.PROJECT_ID AS projectId,--项目名称
				ED.PROJECT_NAME AS projectName,--项目名称
				EI.BUILDING_NUM AS buildingNum,--楼号
				EF.EQUIP_ID AS equipId,
				EF.CONTRACT_ID AS contractId,
				EF.DISPATCH_EQUIP_ID AS dispatchEquipId,
				EI.KNOT_COUNTS AS knotCounts,
				EI.WALL_ATTACHE_QTY AS wallAttacheQty,
				ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_EQUIPMENT_INSTALL EI
			LEFT JOIN T_EQUIPMENT_FLOW EF ON EI.FLOW_ID = EF.FLOW_ID
			LEFT JOIN T_EQUIPMENT_DIARY ED ON ED.EQUIP_DIARY_ID = EF.EQUIP_DIARY_ID
			WHERE EI.DEL_FLAG = '1' AND EI.APPLYFOR_STATE = '3' AND EI.APP_INSTALL_STATE = '2'
			AND EF.FLOW_STATE<6 AND EF.FLOW_STATE >= 2
			AND EI.DISCLOSURE_ID IS NOT NULL
	   	    AND ((ED.RECORD_ID LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (ED.EXW_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (ED.PROJECT_NAME LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL ))  
		 )
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!-- 人员保险之保险管理-->
	<select id="practi_insurance_detail">
	<![CDATA[
		DECLARE @PRACTI_ID BIGINT
		DECLARE @dataPermission VARCHAR(1000)
        SET @PRACTI_ID = ?
        SET @dataPermission = ?
		SELECT
			P.PRACTI_ID AS practiId,
			P.PRACTI_NAME AS practiName,
			D.DEP_NAME AS depName,
			CI.CORP_NAME AS corpName,
			P.PROJECT_NAME AS projectName,
			(CASE P.INCUMBENT WHEN '1' THEN '在岗' 
			WHEN '2' THEN '待岗'  ELSE '离职' END) AS incumbent,
			P.ID_CARD AS idCard,
			P.TEAMS AS teams,
			P.INSURE_STATUS AS insureStatus,
			(CASE WHEN P.SEX = '0' THEN '女' ELSE '男' END) AS sexName,
			P.STATION AS station,
			(SELECT SUM(PD.PREMIUM) FROM T_PRACTI_INSURANCE_DETAIL PD WHERE PD.PRACTI_ID = @PRACTI_ID) AS allPremium,
			KW.VALUE AS kindWorkName,
			(SELECT SUM(PD.CLAIM_AMOUNT) FROM T_PRACTI_INSURANCE_CLAIM_RECORD PD WHERE PD.PRACTI_ID =@PRACTI_ID ) AS allClaimAmount
		FROM T_PRACTITIONER P 
		LEFT JOIN DEPARTMENT D ON D.DEP_ID = P.DEP_ID
		LEFT JOIN T_CORP_INFO CI ON CI.CORP_ID = P.CORP_ID
		LEFT JOIN BM_KIND_WORK KW ON P.KIND_WORK = KW.CODE
		WHERE P.PRACTI_ID = @PRACTI_ID
		AND (SELECT dbo.PermissionFilter(P.PERMISSION_FLAG,@dataPermission)) = 1
	]]>
	</select>
	<!-- 人员保险之投保记录-->
	<select id="practi_insurance_record">
	<![CDATA[
		DECLARE @PRACTI_ID BIGINT
        SET @PRACTI_ID = ?
		SELECT
			PD.DETAIL_ID AS detailId,
			PD.START_INSURE_DATE AS startInsureDate,
			PI.END_INSURE_DATE AS endInsureDate,
			PI.INSURE_SERIAL AS insureSerial,
			(CASE WHEN PI.INSURANCE_TYPE = '0' THEN '雇主责任险' ELSE '其他' END) AS insuranceTypeName,
			PD.PREMIUM AS premium,
			PI.INSURANCE_COMPANY AS insuranceCompany,
			PI.LINKMAN AS linkman,
			PI.CLAIM_PHONE AS claimPhone,
			PI.LINKMAN_PHONE AS linkmanPhone,
			CI.CORP_NAME AS corpName,
			KW.VALUE AS kindWorkName,
			PD.REMARK AS remark
		FROM T_PRACTI_INSURANCE_DETAIL PD
		LEFT JOIN T_PRACTITIONER P ON PD.PRACTI_ID = P.PRACTI_ID
		LEFT JOIN BM_KIND_WORK KW ON P.KIND_WORK = KW.CODE
		LEFT JOIN T_PRACTI_INSURANCE PI ON PI.INSURE_ID = PD.INSURE_ID
		LEFT JOIN T_CORP_INFO CI ON PI.CORP_ID = CI.CORP_ID
		WHERE PD.PRACTI_ID = @PRACTI_ID
	]]>
	</select>
	<!-- 人员保险之理赔记录-->
	<select id="practi_claims_record">
	<![CDATA[
		DECLARE @PRACTI_ID BIGINT
        SET @PRACTI_ID = ?
		SELECT
			PC.CLAIM_ID AS claimId,
			PC.INSURE_SERIAL AS insureSerial,
			PI.INSURANCE_COMPANY AS insuranceCompany,
			(CASE WHEN PI.INSURANCE_TYPE = '0' THEN '雇主责任险' ELSE '其他' END) AS insuranceTypeName,
			P.PRACTI_NAME AS practiName,
			(CASE WHEN P.SEX = '0' THEN '女' ELSE '男' END) AS sexName,
			P.ID_CARD AS idCard,
			P.PROJECT_NAME AS projectName,
			PC.BANK_DEPOSIT AS bankDeposit,
			PC.DEPOSIT_ACCOUNT AS depositAccount,
			PC.CLAIM_DATE AS claimDate,
			PC.COST_AMOUNT AS costAmount,
			PC.CLAIM_AMOUNT AS claimAmount,
			PC.CLAIM_PHONE AS claimPhone,
			PI.LINKMAN_PHONE AS linkmanPhone,
			PI.LINKMAN AS linkman,
			CI.CORP_NAME AS corpName,
			KW.VALUE AS kindWorkName,
			PC.CLAIM_REASON AS claimReason
		FROM T_PRACTI_INSURANCE_CLAIM_RECORD PC 
		LEFT JOIN T_PRACTITIONER P ON PC.PRACTI_ID = P.PRACTI_ID
		LEFT JOIN T_CORP_INFO CI ON P.CORP_ID = CI.CORP_ID
		LEFT JOIN BM_KIND_WORK KW ON P.KIND_WORK = KW.CODE
		LEFT JOIN T_PRACTI_INSURANCE PI ON PI.INSURE_ID = PC.INSURE_ID
		WHERE PC.PRACTI_ID = @PRACTI_ID
	]]>
	</select>
	<!-- 人员保险之添加理赔-->
	<select id="practi_claims_survey">
	<![CDATA[
		DECLARE @DETAIL_ID BIGINT
        SET @DETAIL_ID = ?
		SELECT 
			PD.INSURE_ID AS insureId,
			PR.CLAIM_DATE AS claimDate,
			PR.COST_AMOUNT AS costAmount,
			PR.CLAIM_AMOUNT AS claimAmount,
			PR.CLAIM_REASON AS claimReason,
			PR.BANK_DEPOSIT AS bankDeposit,
			PR.DEPOSIT_ACCOUNT AS depositAccount,
			PR.CLAIM_PHONE AS claimPhone,
			PD.PRACTI_ID AS practiId,
			PD.CONTRACT_ID AS contractId,
			P.PRACTI_NAME AS practiName,
			(CASE WHEN P.SEX = '0' THEN '女' ELSE '男' END) AS sexName,
			P.ID_CARD AS idCard,
			D.DEP_NAME AS depName,
			P.PROJECT_ID AS projectId,
			P.PROJECT_NAME AS projectName,
			CO.CORP_NAME AS corpName,
			PI.INSURE_SERIAL AS insureSerial,
			PI.INSURANCE_COMPANY AS insuranceCompany,
			(CASE WHEN PI.INSURANCE_TYPE = '0' THEN '雇主责任险' ELSE '其他' END) AS insuranceTypeName,
			PI.START_INSURE_DATE AS startInsureDate,
			PI.LINKMAN AS linkMan,
			PI.LINKMAN_PHONE AS linkmanPhone,
			PI.END_INSURE_DATE AS endInsureDate
		FROM T_PRACTI_INSURANCE_DETAIL PD
		LEFT JOIN T_PRACTI_INSURANCE PI ON PI.INSURE_ID = PD.INSURE_ID
		LEFT JOIN T_PRACTITIONER P ON PD.PRACTI_ID = P.PRACTI_ID
		LEFT JOIN T_PRACTI_INSURANCE_CLAIM_RECORD PR ON PR.INSURE_ID = PD.INSURE_ID
		LEFT JOIN DEPARTMENT D ON P.DEP_ID = D.DEP_ID
		LEFT JOIN T_CORP_INFO CO ON P.CORP_ID = CO.CORP_ID
		WHERE PD.DETAIL_ID = @DETAIL_ID
	]]>
	</select>
	<!-- 人员保险人员相关连的合同信息 -->
	<select id="practi_insurance_contract_info">
		<![CDATA[
		DECLARE @INSURE_ID BIGINT
		DECLARE @PROJECT_NAME VARCHAR(128)
		DECLARE @APPLYFOR_STATE VARCHAR(1)
		DECLARE @CONSTRACT_NO VARCHAR(128)
		DECLARE @PA_ENT_NAME VARCHAR(128)
		DECLARE @PB_ENT_NAME VARCHAR(128)
		DECLARE @startDate VARCHAR(10)
		DECLARE @endDate VARCHAR(10)
		SET @INSURE_ID = ?
		SET @PROJECT_NAME = ?
		SET @APPLYFOR_STATE = ?
		SET @CONSTRACT_NO = ?
		SET @PA_ENT_NAME = ?
		SET @PB_ENT_NAME = ?
		SET @startDate = ?
		SET @endDate = ?
		SELECT T.* FROM (SELECT
			CL.CONTRACT_ID AS 'contractId',
			CL.PROJECT_NAME AS 'projectName',
			CL.CONSTRACT_NO AS 'contractNo',
			CL.APPLYFOR_STATE AS 'applyforState',
			CL.SIGNING_TIME AS 'signingTime',
			CL.CONTRACT_AMOUNT AS 'contractAmount',
			CL.EQUIP_COUNT AS 'equipCount',
			CL.PA_ENT_NAME AS 'paEntName',
			CL.PB_ENT_NAME AS 'pbEntName'
		FROM T_CONTRACT_LEASE CL WHERE EXISTS(SELECT ED.CONTRACT_ID FROM T_PRACTI_INSURANCE_DETAIL ED WHERE CL.CONTRACT_ID = ED.CONTRACT_ID AND ED.INSURE_ID = @INSURE_ID)
		)T
		WHERE (T.projectName LIKE '%'+@PROJECT_NAME+'%' OR @PROJECT_NAME = '' OR @PROJECT_NAME IS NULL )
		AND (T.applyforState = @APPLYFOR_STATE  OR @APPLYFOR_STATE = '' OR @APPLYFOR_STATE IS NULL )
		AND (T.contractNo LIKE '%'+@CONSTRACT_NO+'%' OR @CONSTRACT_NO = '' OR @CONSTRACT_NO IS NULL )
		AND (T.paEntName LIKE '%'+@PA_ENT_NAME+'%' OR @PA_ENT_NAME = '' OR @PA_ENT_NAME IS NULL )
		AND (T.pbEntName LIKE '%'+@PB_ENT_NAME+'%' OR @PB_ENT_NAME = '' OR @PB_ENT_NAME IS NULL )
		AND (T.signingTime > = @startDate+'%' OR @startDate = '' OR @startDate IS NULL )
		AND (T.signingTime <= @endDate+'%' OR @endDate = '' OR @endDate IS NULL )
		]]>
	</select>
	<!-- 人员保险之理赔记录-->
	<select id="practi_insurance_claims_record">
	<![CDATA[
		DECLARE @INSURE_ID BIGINT
        SET @INSURE_ID = ?
		SELECT
			PC.CLAIM_ID AS claimId,
			PC.INSURE_SERIAL AS insureSerial,
			PI.INSURANCE_COMPANY AS insuranceCompany,
			(CASE WHEN PI.INSURANCE_TYPE = '0' THEN '雇主责任险' ELSE '其他' END) AS insuranceTypeName,
			P.PRACTI_NAME AS practiName,
			(CASE WHEN P.SEX = '0' THEN '女' ELSE '男' END) AS sexName,
			P.ID_CARD AS idCard,
			P.PROJECT_NAME AS projectName,
			PC.BANK_DEPOSIT AS bankDeposit,
			PC.DEPOSIT_ACCOUNT AS depositAccount,
			PC.CLAIM_DATE AS claimDate,
			PC.COST_AMOUNT AS costAmount,
			PC.CLAIM_AMOUNT AS claimAmount,
			PC.CLAIM_REASON AS claimReason
		FROM T_PRACTI_INSURANCE_CLAIM_RECORD PC 
		LEFT JOIN T_PRACTITIONER P ON PC.PRACTI_ID = P.PRACTI_ID
		LEFT JOIN T_PRACTI_INSURANCE PI ON PI.INSURE_ID = PC.INSURE_ID
		WHERE PC.INSURE_ID = @INSURE_ID
	]]>
	</select>
	
	<!--安全教育之待安全教育列表-->
    <select id="wechat_wait_safety_education">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE	@keyword  VARCHAR(64)
        DECLARE @dataPermission VARCHAR(1000)
        SET @START = ?
   	    SET @PAGE_SIZE =?
   	    SET @keyword =?
   	    SET @dataPermission =?
   	    ;WITH QUERY AS (
			SELECT
				P.PRACTI_ID AS practiId, 
				P.PRACTI_NAME AS practiName,
				P.DIVISION_DATE AS divisionDate,
				PO.PROJECT_NAME AS projectName,
				P.PROJECT_ID AS projectId,
				PO.MATERIAL_PRACTI_ID AS materialPractiId,
				PO.MATERIAL_PRACTI_NAME AS materialPractiName,
				PO.ADDRESS AS address,
				D.DEP_NAME AS depName,
				P.CORP_ID AS corpId,
				CI.CORP_NAME AS corpName,
				ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_PRACTITIONER P
			LEFT JOIN T_PROJECT PO ON P.PROJECT_ID = PO.PROJECT_ID
			LEFT JOIN DEPARTMENT D ON P.DEP_ID = D.DEP_ID
			LEFT JOIN T_CORP_INFO CI ON P.CORP_ID = CI.CORP_ID
			WHERE P.DEL_FLAG = '1' 
			AND (P.EDUCATION_TIME IS NULL 
			OR DATEADD(MONTH, 3,P.EDUCATION_TIME) < GETDATE())
			AND ((P.PRACTI_NAME LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (P.DIVISION_DATE LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL ))  
			AND (SELECT dbo.PermissionFilter(P.PERMISSION_FLAG,@dataPermission)) = 1
		  )
		 SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
	]]>
	</select>
	<!--人员保险之理赔记录列表-->
    <select id="wechat_practi_claim">
	<![CDATA[
	DECLARE @START INT
	DECLARE @PAGE_SIZE INT
	DECLARE	@keyword  VARCHAR(64)
	DECLARE	@secondKeyword  VARCHAR(10)
	SET @START = ?
	SET @PAGE_SIZE =?
	SET @keyword =?
	SET @secondKeyword =?
	;WITH QUERY AS (
		SELECT
			PC.CLAIM_ID AS claimId,
			PC.INSURE_ID AS insureId,
			PC.INSURE_SERIAL AS insureSerial,
			PC.BANK_DEPOSIT AS bankDeposit,
			PC.DEPOSIT_ACCOUNT AS depositAccount,
			PC.CLAIM_PHONE AS claimPhone,
			PC.CLAIM_AMOUNT AS claimAmount,
			PC.COST_AMOUNT AS costAmount,
			PC.CLAIM_DATE AS claimDate,
			PC.CLAIM_REASON AS claimReason,
			ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
		FROM T_PRACTI_INSURANCE_CLAIM_RECORD PC
		WHERE ((PC.INSURE_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (PC.BANK_DEPOSIT LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL ))
		AND (PC.CLAIM_DATE = @secondKeyword OR @secondKeyword = '' OR @secondKeyword IS NULL )
	 )
	SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
	]]>
	</select>
		<!--人员保险详情1-->
    <select id="wechat_practi_insurance_one">
	<![CDATA[
		DECLARE	@INSURE_ID BIGINT
		SET @INSURE_ID = ?
		SELECT
			PI.INSURE_ID AS insureId,
			PI.INSURE_SERIAL AS insureSerial,
			(SELECT COUNT(*) FROM T_PRACTI_INSURANCE_DETAIL EI WHERE EI.INSURE_ID = @INSURE_ID AND EI.DEL_FLAG =1) AS practiNum,
			(CASE WHEN PI.INSURANCE_TYPE = '0' THEN '雇主责任险' ELSE '其他' END) AS insuranceType,
			PI.START_INSURE_DATE AS startInsureDate,
			PI.END_INSURE_DATE AS endInsureDate,
			PI.INSURANCE_COMPANY AS insuranceCompany,
			PI.CLAIM_PHONE AS claimPhone,
			PI.TOTAL_PREMIUM AS totalPremium,
			PI.CORP_ID AS corpId,
			PI.CORP_NAME AS corpName
		FROM T_PRACTI_INSURANCE PI
		WHERE  PI.INSURE_ID = @INSURE_ID
	]]>
	</select>
			<!--人员保险详情2-->
    <select id="wechat_practi_insurance_second">
	<![CDATA[
		DECLARE	@INSURE_ID BIGINT
		SET @INSURE_ID = ?
		SELECT
				P.PRACTI_NAME AS practiName,
				(CASE WHEN P.SEX = '0' THEN '女' ELSE '男' END) AS sexName,
				(CASE P.INCUMBENT WHEN '1' THEN '在岗'
						WHEN '2' THEN '待岗'  ELSE '离职'END) AS incumbent,
				P.STATION AS station,
				PD.PROJECT_NAME AS projectName,
				PD.CONTRACT_NO AS contractNo,
				PD.PREMIUM AS premium,
				PD.START_INSURE_DATE AS startInsureDate,
				P.ID_CARD AS idCard,
				KW.VALUE AS kindWorkName
		FROM T_PRACTI_INSURANCE_DETAIL PD
		LEFT JOIN T_PRACTITIONER P ON PD.PRACTI_ID = P.PRACTI_ID
		LEFT JOIN BM_KIND_WORK KW ON KW.CODE = P.KIND_WORK
		WHERE  PD.INSURE_ID = @INSURE_ID
	]]>
	</select>
	<!--待安全交底人员列表-->
	<select id="wechat_wait_safe_clarification">
	<![CDATA[
	    DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE	@keyword  VARCHAR(64)
        DECLARE @dataPermission VARCHAR(1000)
        SET @START = ?
 	    SET @PAGE_SIZE =?
 	    SET @keyword =?
 	    SET @dataPermission =?
 	      ;WITH QUERY AS (
		SELECT
			P.PRACTI_ID AS practiId, 
			P.PRACTI_NAME AS practiName,
			P.DIVISION_DATE AS divisionDate,
			PO.PROJECT_NAME AS projectName,
			P.PROJECT_ID AS projectId,
			PO.MATERIAL_PRACTI_ID AS materialPractiId,
			PO.MATERIAL_PRACTI_NAME AS materialPractiName,
			PO.ADDRESS AS address,
			D.DEP_NAME AS depName,
			P.CORP_ID AS corpId,
			CI.CORP_NAME AS corpName,
			ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
		FROM T_PRACTITIONER P
		LEFT JOIN T_PROJECT PO ON P.PROJECT_ID = PO.PROJECT_ID
		LEFT JOIN DEPARTMENT D ON P.DEP_ID = D.DEP_ID
		LEFT JOIN T_CORP_INFO CI ON P.CORP_ID = CI.CORP_ID
		WHERE P.DEL_FLAG = '1' AND P.EDUCATION_TIME IS NOT NULL 
		AND (P.CLARIFICA_TIME IS NULL 
		OR DATEADD(MONTH, 1,P.CLARIFICA_TIME) < GETDATE())
		AND ((P.PRACTI_NAME LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
		OR (P.DIVISION_DATE LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL ))  
		AND (SELECT dbo.PermissionFilter(P.PERMISSION_FLAG,@dataPermission)) = 1
		 )
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
	]]>
	</select>
	<!--已安全交底列表-->
	<select id="wechat_safe_clarification_list">
	<![CDATA[
	    DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE	@keyword  VARCHAR(64)
        DECLARE @dataPermission VARCHAR(1000)
        SET @START = ?
 	    SET @PAGE_SIZE =?
 	    SET @keyword =?
 	    SET @dataPermission =?
 	    ;WITH QUERY AS (
 	    	SELECT
				SC.CLARIFICA_ID AS clarificaId,
				SC.CLARIFICA_SERIAL AS clarificaSerial,
				SC.PROJECT_ID AS projectId,
				SC.PROJECT_NAME AS projectName,
				SC.ADDRESS AS address,
				SC.COPE_ID  AS copeId,
				SC.COPE_NAME AS copeName,
				SC.CLARIFICA_MAN_ID AS clarificaManId,
				SC.CLARIFICA_MAN AS clarificaMan,
				SC.CLARIFICA_HEAD_ID AS clarificaHeadId,
				SC.CLARIFICA_HEAD AS clarificaHead,
				SC.REMARK AS remark,
				SC.CLARIFICA_IMAGE AS clarificaImage,
				SC.CLARIFICA_TIME AS clarificaTime,
				ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_SAFE_CLARIFICATION SC
			LEFT JOIN T_PRACTITIONER P ON P.PRACTI_ID = SC.CLARIFICA_HEAD_ID
			WHERE SC.DEL_FLAG = '1'
			AND (SC.CLARIFICA_MAN LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			AND (SELECT dbo.PermissionFilter(P.PERMISSION_FLAG,@dataPermission)) = 1
		 )
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
	]]>
	</select>
		<!--现场安装总数-->
	<select id="wechat_equip_install_count">
	<![CDATA[
	    DECLARE	@USER_ID BIGINT
		SET @USER_ID = ?
		SELECT 
			COUNT(CASE WHEN EI.APP_INSTALL_STATE = 0 THEN 1 END) as zeroNum,
			COUNT(CASE WHEN EI.APP_INSTALL_STATE = 1 THEN 2 END) as oneNum,
			COUNT(CASE WHEN EI.APP_INSTALL_STATE = 2 THEN 3 END) as twoNum,
			COUNT(CASE WHEN EI.USER_ID = @USER_ID AND (EI.APP_INSTALL_STATE = 3 OR EI.APP_INSTALL_STATE = 2) THEN 4 END) as threeNum
		FROM T_EQUIPMENT_INSTALL EI 
		WHERE EI.DEL_FLAG = 1	
	]]>
	</select>
		<!--现场拆卸总数-->
	<select id="wechat_equip_dismantle_count">
	<![CDATA[
	   	DECLARE	@USER_ID BIGINT
		SET @USER_ID =?
			SELECT 
			COUNT(CASE WHEN ED.APP_DISMANTLE_STATE = 0 THEN 1 END) as zeroNum,
			COUNT(CASE WHEN ED.APP_DISMANTLE_STATE = 1 THEN 2 END) as oneNum,
			COUNT(CASE WHEN ED.APP_DISMANTLE_STATE = 2 THEN 3 END) as twoNum,
			COUNT(CASE WHEN ED.USER_ID = @USER_ID AND (ED.APP_DISMANTLE_STATE = 3 OR ED.APP_DISMANTLE_STATE = 2) THEN 4 END) as threeNum
		FROM T_EQUIPMENT_DISMANTLE ED 
		WHERE ED.DEL_FLAG = 1
	]]>
	</select>
	<!--员工列表-->
	<select id="wechat_practitioner_list">
	<![CDATA[
	    DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE @dataPermission VARCHAR(1000)
        SET @START = ?
 	    SET @PAGE_SIZE =?
 	    SET @dataPermission =?
 	      ;WITH QUERY AS (
		SELECT
			P.PRACTI_ID AS practiId, 
			P.PRACTI_NAME AS practiName,
			P.DIVISION_DATE AS divisionDate,
			PO.PROJECT_NAME AS projectName,
			P.PROJECT_ID AS projectId,
			PO.MATERIAL_PRACTI_ID AS materialPractiId,
			PO.MATERIAL_PRACTI_NAME AS materialPractiName,
			PO.ADDRESS AS address,
			P.DEP_ID AS depId,
			D.DEP_NAME AS depName,
			P.CORP_ID AS corpId,
			CI.CORP_NAME AS corpName,
			ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
		FROM T_PRACTITIONER P
		LEFT JOIN T_PROJECT PO ON P.PROJECT_ID = PO.PROJECT_ID
		LEFT JOIN DEPARTMENT D ON P.DEP_ID = D.DEP_ID
		LEFT JOIN T_CORP_INFO CI ON P.CORP_ID = CI.CORP_ID
		WHERE P.DEL_FLAG = '1'
		AND P.PRACTI_STATUS = '1'
		AND (SELECT dbo.PermissionFilter(P.PERMISSION_FLAG,@dataPermission)) = 1
		 )
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
	]]>
	</select>
	<!--在职员工列表-->
	<select id="wechat_practitionerIn_list">
	<![CDATA[
	    DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE @dataPermission VARCHAR(1000)
        SET @START = ?
 	    SET @PAGE_SIZE =?
 	    SET @dataPermission =?
 	      ;WITH QUERY AS (
		SELECT
			P.PRACTI_ID AS practiId, 
			P.PRACTI_NAME AS practiName,
			P.MOBILE AS mobile,
			KW.VALUE AS kindWorkName,
			P.DIVISION_DATE AS divisionDate,
			PO.PROJECT_NAME AS projectName,
			P.PROJECT_ID AS projectId,
			PO.MATERIAL_PRACTI_ID AS materialPractiId,
			PO.MATERIAL_PRACTI_NAME AS materialPractiName,
			PO.ADDRESS AS address,
			D.DEP_NAME AS depName,
			P.CORP_ID AS corpId,
			CI.CORP_NAME AS corpName,
			ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
		FROM T_PRACTITIONER P
		LEFT JOIN T_PROJECT PO ON P.PROJECT_ID = PO.PROJECT_ID
		LEFT JOIN DEPARTMENT D ON P.DEP_ID = D.DEP_ID
		LEFT JOIN T_CORP_INFO CI ON P.CORP_ID = CI.CORP_ID
		LEFT JOIN BM_KIND_WORK KW ON KW.CODE = P.KIND_WORK
		WHERE P.DEL_FLAG = '1'
		AND P.PRACTI_STATUS = '1'
		AND (SELECT dbo.PermissionFilter(P.PERMISSION_FLAG,@dataPermission)) = 1
		 )
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
	]]>
	</select>

	<!--人员管理-人员列表-->
	<select id="practi_list_practi">
	<![CDATA[
	   DECLARE @START INT
       DECLARE @PAGE_SIZE INT
       DECLARE @KEYWORD VARCHAR(64)
       DECLARE @PRACTI_NAME VARCHAR(64)
       DECLARE @CORP_NAME VARCHAR(255)
       DECLARE @DEP_NAME VARCHAR(255)
       DECLARE @PROJECT_NAME VARCHAR(500)
       DECLARE @BLACKLIST VARCHAR(1)
       DECLARE @dataPermission VARCHAR(1000)
       SET @START = ?
       SET @PAGE_SIZE = ?
       SET @KEYWORD = ?
       SET @PRACTI_NAME = @KEYWORD
       SET @CORP_NAME = @KEYWORD
       SET @DEP_NAME = @KEYWORD
       SET @PROJECT_NAME = @KEYWORD
       SET @BLACKLIST = ?
       SET @dataPermission = ?
 	      ;WITH QUERY AS (
 	      SELECT * FROM (
			SELECT
				P.PRACTI_ID AS practiId, 
				P.PRACTI_NAME AS practiName,
				(CASE WHEN P.INCUMBENT = '0' THEN '离职' 
					WHEN P.INCUMBENT = '1' THEN '在岗' 
					WHEN P.INCUMBENT = '2' THEN '待岗' END) AS incumbentName,
				P.STARS_LEVEL AS starsLevel,
				(CASE WHEN P.SEX = '0' THEN '女' ELSE '男' END) AS sexName,
				KW.CODE AS kindWork,
				KW.VALUE AS kindWorkName,
				P.PROJECT_ID AS projectId,
				P.PROJECT_NAME AS projectName,
				P.TEAMS AS teams,
				PO.ADDRESS AS address,
				P.CORP_ID AS corpId,
				P.WORK_STATE AS workState,
				CI.CORP_NAME AS corpName,
				D.DEP_ID AS depId,
				D.DEP_NAME AS depName,
				ISNULL((SELECT TOP 1 T.QSTATE AS qstate FROM T_PRACTI_CERT T 
					WHERE T.DEL_FLAG = 1 AND T.QSTATE = 1 
					AND T.PRACTI_ID = P.PRACTI_ID AND T.PRACTI_KINDWORK = P.KIND_WORK),'0') AS certStatus,
				(CASE WHEN (SELECT TOP 1 PI.INSURE_ID FROM T_PRACTI_INSURANCE PI 
					LEFT JOIN T_PRACTI_INSURANCE_DETAIL PID ON PID.INSURE_ID = PI.INSURE_ID
					WHERE PI.EFFECTIVE = 1 AND PID.DEL_FLAG = 1 AND PID.PRACTI_ID = P.PRACTI_ID
					AND PID.PROJECT_ID = P.PROJECT_ID
				) IS NULL THEN '0' ELSE '1' END) AS insureStatus,
				P.CLARIFICA_STATUS AS clarificaStatus,
				F.FILEPATH AS photoPath,
				ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_PRACTITIONER P
			LEFT JOIN T_PROJECT PO ON P.PROJECT_ID = PO.PROJECT_ID
			LEFT JOIN T_CORP_INFO CI ON P.CORP_ID = CI.CORP_ID
			LEFT JOIN DEPARTMENT D ON P.DEP_ID = D.DEP_ID
			LEFT JOIN BM_KIND_WORK KW ON KW.CODE = P.KIND_WORK
			LEFT JOIN FILE_ATTACH F ON P.PHOTO = F.FILEID AND F.DEPEND_NAME = 'PRACTI_PHOTO'
			WHERE P.DEL_FLAG = '1' AND P.PRACTI_STATUS = '1'
				AND P.BLACKLIST = @BLACKLIST
				AND (CHARINDEX(@PRACTI_NAME, P.PRACTI_NAME) > 0
			     OR CHARINDEX(@PROJECT_NAME, P.PROJECT_NAME) > 0
				 OR CI.CORP_NAME LIKE '%'+@CORP_NAME+'%')
				AND (SELECT dbo.PermissionFilter(P.PERMISSION_FLAG,@dataPermission)) = 1
			) A 
		 )
SELECT (SELECT COUNT(*) FROM QUERY) AS 'count' , * 
			FROM QUERY 
			WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!--人员管理-人员修改-->
	<select id="practi_update_practi">
	<![CDATA[
		UPDATE T_PRACTITIONER SET 
			PRACTI_NAME = ?,
			SEX = ?,
			KIND_WORK = ?,
			IS_AFFILIATE = ?,
			ID_CARD = ?,
			BIRTH_DATE = ?,
			NATION = ?,
			BIRTHPLACE = ?,
			MOBILE = ?,
			ADDRESS = ?,
			BANK_DEPOSIT = ?,
			ACCOUNT = ?,
			PHOTO = ?
		WHERE PRACTI_ID = ?
			]]>	
	</select>
	<!--人员管理-证件修改-->
	<select id="practi_update_cert">
	<![CDATA[
		UPDATE T_PRACTI_CERT SET 
			CERT_NUM = ?,
			SPECIALTY_TYPE = ?,
			CONTRACT_DATE = ?,
			AWARD_DEPART = ?,
			AWARD_DATE = ?,
			EFFECT_DATE = ?,
			REGISTRANT_ORGANIZATION = ?,
			PRACTI_KINDWORK = ?,
			STAMP_NUM = ?,
			MARK = ?,
			REMARK = ?
		WHERE CERT_ID = ?
			]]>	
	</select>
	<!--人员管理-派工修改-->
	<select id="practi_dispatch_update">
	<![CDATA[
		DECLARE	@DISPATCH_ID BIGINT
		DECLARE	@PROJECT_ID BIGINT
		DECLARE @PROJECT_NAME VARCHAR(500)
		DECLARE @KIND_WORK VARCHAR(2)
		DECLARE @TEAMS VARCHAR(50)
		DECLARE @REMARK VARCHAR(500)
		SET @DISPATCH_ID = ?
		SET @PROJECT_ID = ?
		SET @PROJECT_NAME = ?
		SET @KIND_WORK = ?
		SET @TEAMS = ?
		SET @REMARK = ?
		UPDATE T_PRACTI_DISPATCH SET 
			PROJECT_ID = @PROJECT_ID,
			PROJECT_NAME = @PROJECT_NAME,
			KIND_WORK = @KIND_WORK,
			TEAMS = @TEAMS,
			REMARK = @REMARK
		WHERE DISPATCH_ID = @DISPATCH_ID
			]]>	
	</select>
	<!--人员管理-派工列表-->
	<select id="practi_dispatch_list">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE @KEYWORD VARCHAR(64)
        DECLARE @PRACTI_NAME VARCHAR(64)
        DECLARE @CORP_NAME VARCHAR(255)
        DECLARE @DEP_NAME VARCHAR(255)
        DECLARE @PROJECT_NAME VARCHAR(500)
        DECLARE @START_DATE VARCHAR(500)
        DECLARE @END_DATE VARCHAR(500)
        DECLARE @dataPermission VARCHAR(1000)
        SET @START = ?
 	    SET @PAGE_SIZE = ?
 	    SET @KEYWORD = ?
 	    SET @PRACTI_NAME = @KEYWORD
 	    SET @CORP_NAME = @KEYWORD
 	    SET @DEP_NAME = @KEYWORD
 	    SET @PROJECT_NAME = @KEYWORD
 	    SET @START_DATE = ?
 	    SET @END_DATE = ?
 	    SET @dataPermission = ?
		  ;WITH QUERY AS (
			SELECT 
				PD.DISPATCH_ID AS dispatchId,
				PD.DISPATCH_SERIAL AS dispatchSerial,
				P.PRACTI_NAME AS practiName,
				C.CORP_NAME AS corpName,
				D.DEP_NAME AS depName,
				PD.PROJECT_NAME AS projectName,
				(CASE WHEN P.CLARIFICA_STATUS = '0' THEN '未交底' 
					WHEN P.CLARIFICA_STATUS = '1' THEN '已交底' ELSE '已过期' END) 
				AS clarificaStatusName,
				PD.USER_NAME AS userName,
				PD.CREATE_TIME AS createTime,
				PD.APPLYFOR_STATE AS applyForState,
				(CASE WHEN PD.APPLYFOR_STATE = '0' THEN '待提交' 
					WHEN PD.APPLYFOR_STATE = '2' THEN '待审批' ELSE '完成' END) 
				AS applyForStateName,
				ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_PRACTI_DISPATCH PD
			LEFT JOIN T_PRACTITIONER P ON P.PRACTI_ID = PD.PRACTI_ID
			LEFT JOIN T_CORP_INFO C ON C.CORP_ID = P.CORP_ID
			LEFT JOIN DEPARTMENT D ON D.DEP_ID = P.DEP_ID
			WHERE 
				(CHARINDEX(@PRACTI_NAME, P.PRACTI_NAME) > 0
			     OR CHARINDEX(@PROJECT_NAME, PD.PROJECT_NAME) > 0
				 OR C.CORP_NAME LIKE '%'+@CORP_NAME+'%')
				AND (PD.CREATE_TIME >= @START_DATE OR @START_DATE = '' OR @START_DATE IS NULL)
				AND (PD.CREATE_TIME <= @END_DATE+' 23:59:59' OR @END_DATE = '' OR @END_DATE IS NULL)
				AND (SELECT dbo.PermissionFilter(P.PERMISSION_FLAG,@dataPermission)) = 1
		)
		SELECT (SELECT COUNT(*) FROM QUERY) AS 'count' , * 
			FROM QUERY 
			WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
		]]>	
	</select>
	<!--人员管理-签到签退自检项查询-->
	<select id="practi_choose_list">
	<![CDATA[
		DECLARE @INSPECT_TYPE VARCHAR(3)
		SET @INSPECT_TYPE = ?
		SELECT  
			CHOOSE_ID AS chooseId,
			INIT_ID AS initId,
			INSPECT_TYPE AS inspectType,
			INSPECT_ITEM AS inspectItem
		FROM T_INSPECT_SELF_CHOOSE WHERE INSPECT_TYPE = @INSPECT_TYPE
	]]>	
	</select>
	<select id="practi_chooseDetails_list">
	<![CDATA[
		DECLARE @CHOOSE_ID INT
		SET @CHOOSE_ID = ?
		SELECT 
			DETAIL_ID AS detailId,
			DETAIL_CONTENT AS detailContent
		FROM T_INSPECT_SELF_CHOOSE_DETAIL WHERE CHOOSE_ID = @CHOOSE_ID
	]]>	
	</select>
	
	<select id="practi_appUser_list">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
		DECLARE @CORP_ID INT
		DECLARE @DEP_ID INT
		DECLARE @FULLNAME VARCHAR(50)
		SET @START = ?
 	    SET @PAGE_SIZE = ?
		SET @CORP_ID = ?
		SET @DEP_ID = ?
		SET @FULLNAME = ?
		;WITH QUERY AS (
			SELECT 
				U.USERID AS userId,
				U.USERNAME AS userName,
				U.DEP_ID AS depId,
				ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM APP_USER U
			LEFT JOIN APP_USER_EXTEND E ON E.USERID = U.USERID WHERE U.DELFLAG = 0
			AND E.EXTEND_ID IS NULL
			AND (U.FULLNAME LIKE '%'+@FULLNAME+'%' OR @FULLNAME = '' OR @FULLNAME IS NULL)
			AND (U.DEP_ID = @DEP_ID OR @DEP_ID = '' OR @DEP_ID IS NULL)
			AND (U.CORP_ID = @CORP_ID OR @CORP_ID = '' OR @CORP_ID IS NULL)
		)
		SELECT (SELECT COUNT(*) FROM QUERY) AS 'count' , * 
			FROM QUERY 
			WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
	]]>	
	</select>
	<!-- 离职人员列表 -->
	<select id="practi_leave_list">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
		DECLARE @KEYWORD VARCHAR(50)
		DECLARE @PRACTI_NAME VARCHAR(50)
		DECLARE @CORP_NAME VARCHAR(50)
		DECLARE @DEP_NAME VARCHAR(50)
		DECLARE @dataPermission VARCHAR(1000)
		SET @START = ?
 	    SET @PAGE_SIZE = ?
 	    SET @KEYWORD = ?
		SET @PRACTI_NAME = @KEYWORD
		SET @CORP_NAME = @KEYWORD
		SET @DEP_NAME = @KEYWORD
		SET @dataPermission = ?
		;WITH QUERY AS (
			SELECT 
				PL.LEAVE_ID AS leaveId,
				PL.PRACTI_ID as practiId,
				P.PRACTI_NAME AS practiName,
				PL.LEAVE_TIME AS leaveTime,
				C.CORP_NAME AS corpName,
				D.DEP_NAME AS depName,
				PL.USER_NAME AS userName,
				PL.EFFECTIVE AS effective,
				(CASE WHEN PL.EFFECTIVE = '0' THEN '未生效' ELSE '已生效' END) AS effectiveName,
				ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_PRACTI_LEAVE PL
			LEFT JOIN T_PRACTITIONER P ON P.PRACTI_ID = PL.PRACTI_ID
			LEFT JOIN T_CORP_INFO C ON C.CORP_ID = P.CORP_ID
			LEFT JOIN DEPARTMENT D ON D.DEP_ID = P.DEP_ID
			WHERE 1=1
			AND (CHARINDEX(@PRACTI_NAME, P.PRACTI_NAME) > 0
			     OR CHARINDEX(@CORP_NAME, C.CORP_NAME) > 0
				 OR D.DEP_NAME LIKE '%'+@DEP_NAME+'%')
			AND (SELECT dbo.PermissionFilter(P.PERMISSION_FLAG,@dataPermission)) = 1
		)
		SELECT (SELECT COUNT(*) FROM QUERY) AS 'count' , * 
			FROM QUERY 
			WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	ORDER BY leaveId DESC
	]]>	
	</select>
	<!-- 统计-人员数量 -->
	<select id="practi_statistics_practiNum">
	<![CDATA[
		WITH QUERY AS (
			SELECT 
					P.INCUMBENT AS incumbent,
					P.BLACKLIST AS blacklist
				FROM T_PRACTITIONER P 
				WHERE P.PRACTI_STATUS = 1 
					AND P.DEL_FLAG = 1
					AND P.INCUMBENT <> '0'
		)
		SELECT (SELECT COUNT(*) FROM QUERY)AS count,
		(SELECT COUNT(*) FROM QUERY WHERE incumbent = '1') AS inNum,
		(SELECT COUNT(*) FROM QUERY WHERE incumbent = '2') AS waitNum,
		(SELECT COUNT(*) FROM QUERY WHERE blacklist = '1') AS blackNum
	]]>
	</select>
	<!-- 统计-人员数量和项目总数-->
	<select id="practi_statistics_practiAndProjectNum">
	<![CDATA[
	WITH QUERY AS (
			SELECT 
					COUNT(*) AS practiNum
				FROM T_PRACTITIONER P 
				WHERE P.PRACTI_STATUS = 1 
					AND P.DEL_FLAG = 1
					AND P.INCUMBENT <> '0'
		),
		PRO_QUERY AS(
			SELECT 
				COUNT(*) AS projectNum
			FROM T_PROJECT PRO
			WHERE PRO.DEL_FLAG = 1 
				AND PRO.STATUS <> '0'
		)
		SELECT Q1.practiNum ,Q2.projectNum FROM QUERY Q1,PRO_QUERY Q2
	]]>
	</select>
	<!-- 统计-各项目人员总数 -->
	<select id="practi_statistics_practiInProjectNum">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
		DECLARE @KEYWORD VARCHAR(50)
		DECLARE @PROJECT_NAME VARCHAR(200)
		DECLARE @ADDRESS VARCHAR(200)
		SET @START = ?
 	    SET @PAGE_SIZE = ?
 	    SET @KEYWORD = ?
 	    SET @PROJECT_NAME = @KEYWORD
 	    SET @ADDRESS = @KEYWORD
 	    ;WITH QUERY1 AS (
			SELECT 
					P.PROJECT_ID projectId
				FROM T_PRACTITIONER P 
				WHERE P.PRACTI_STATUS = 1 
					AND P.DEL_FLAG = 1
					AND P.INCUMBENT <> '0'
		)
 	    ,QUERY AS (
			SELECT P2.PROJECT_ID AS projectId,
					P2.PROJECT_NAME AS projectName,
					P2.ADDRESS AS address, 
					(SELECT COUNT(Q1.projectId) AS allCount FROM QUERY1 Q1 WHERE Q1.projectId = P2.PROJECT_ID) AS allCount ,
					ROW_NUMBER() OVER (ORDER BY P2.PROJECT_ID DESC) AS _ROWNUM
					FROM T_PROJECT P2
					WHERE P2.DEL_FLAG = 1
						AND P2.STATUS <> '0'
						AND (CHARINDEX(@PROJECT_NAME, P2.PROJECT_NAME) > 0
						OR P2.ADDRESS LIKE '%'+@ADDRESS+'%')
					GROUP BY P2.PROJECT_ID,P2.PROJECT_NAME,P2.ADDRESS
		)
		SELECT (SELECT COUNT(*) FROM QUERY) AS 'count' , * 
			FROM QUERY 
			WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!-- 统计-各项目中各工种人数 -->
	<select id="practi_statistics_projectKindWorkNum">
	<![CDATA[
		DECLARE @PROJECT_ID INT
		SET @PROJECT_ID = ?
		SELECT 
			K.VALUE AS kindWorkName,
			COUNT(*) AS kindCount,
			ROW_NUMBER() OVER (ORDER BY K.VALUE DESC) AS _ROWNUM
		FROM T_PROJECT P2
		LEFT JOIN T_PRACTITIONER P ON P.PROJECT_ID = P2.PROJECT_ID
		LEFT JOIN BM_KIND_WORK K ON K.CODE = P.KIND_WORK 
		WHERE P.PRACTI_STATUS = 1 
			AND P.DEL_FLAG = 1
			AND P.INCUMBENT <> '0'
			AND P2.PROJECT_ID = @PROJECT_ID
		GROUP BY P2.PROJECT_ID,K.VALUE
	]]>
	</select>
	<!-- 统计-人员证件情况 -->
	<select id="practi_statistics_cert">
	<![CDATA[
		WITH QUERY AS (
			SELECT 
					P.PRACTI_ID AS practiId,
					COUNT(C.CERT_ID) certNum
				FROM T_PRACTITIONER P 
				LEFT JOIN T_PRACTI_CERT C ON C.PRACTI_ID = P.PRACTI_ID
				WHERE P.PRACTI_STATUS = 1 
					AND P.DEL_FLAG = 1
					AND P.INCUMBENT <> '0'
					AND C.DEL_FLAG = 1
				GROUP BY P.PRACTI_ID
		)
		SELECT (SELECT COUNT(*) FROM QUERY)AS count,
		(SELECT COUNT(*) FROM QUERY WHERE certNum > 0 ) AS haveNum,
		(SELECT COUNT(*) FROM QUERY WHERE certNum < 1 ) AS nohaveNum
	]]>
	</select>
	<!-- 统计-各工种证件状态情况 -->
	<select id="practi_statistics_certStateForKindWork">
	<![CDATA[
		WITH QUERY AS(
			SELECT 
				K.CODE AS kindWork,
				K.VALUE AS kindWorkName,
				COUNT(C.PRACTI_KINDWORK) AS kindNum
				FROM T_PRACTI_CERT C
				LEFT JOIN BM_KIND_WORK K ON K.CODE = C.PRACTI_KINDWORK
				WHERE C.DEL_FLAG = 1
				GROUP BY K.CODE,K.VALUE
		),
		QUERY1 AS(
			SELECT 
				C1.CERT_ID,
				C1.QSTATE,
				C1.PRACTI_KINDWORK
			FROM T_PRACTI_CERT C1
			WHERE C1.DEL_FLAG = 1
		)
		SELECT * ,
			(SELECT COUNT(*) FROM QUERY1 Q2 WHERE Q2.QSTATE = '1' AND Q2.PRACTI_KINDWORK = Q1.kindWork) workNum, 
			(SELECT COUNT(*) FROM QUERY1 Q3 WHERE Q3.QSTATE = '4' AND Q3.PRACTI_KINDWORK = Q1.kindWork) overNum
		FROM QUERY Q1
	]]>
	</select>
	<!--人员签退之前的详情-->
	<select id="practi_sgon_before">
	<![CDATA[
		DECLARE @USERID BIGINT
		SET @USERID =?
		SELECT
			TOP 1 
			A.AID AS aid,
			A.PROJECT_ID AS projectId,
			P.PROJECT_NAME AS projectName,
			A.EQUIP_ID AS equipId,
			BG.VALUE AS equipGenericName,
			BS.VALUE AS equipSpecificName,
			E.EXW_SERIAL AS exwSerial,
			E.EQUIP_SERIAL AS equipSerial,
			P.ADDRESS AS address
		FROM T_ATTENDAMCE A
		LEFT JOIN T_PROJECT P ON A.PROJECT_ID = P.PROJECT_ID
		LEFT JOIN T_EQUIPMENT E ON A.EQUIP_ID = E.EQUIP_ID
		LEFT JOIN BM_EQUIP_GENERIC BG ON E.EQUIP_GENERIC = BG.CODE
		LEFT JOIN BM_EQUIP_SPECIFIC BS ON E.EQUIP_SPECIFIC = BS.CODE
		WHERE A.USERID = @USERID
		ORDER BY A.AID DESC
	]]>	
	</select>
	<!--人员数据统计保险-->
	<select id="practi_data_total_insurance">
	<![CDATA[
		SELECT
			COUNT(0) AS allCount,
			COUNT(CASE WHEN INSURE_STATUS = '0' THEN 1 END) AS notCount,
			COUNT(CASE WHEN INSURE_STATUS = '3' THEN 1 END) AS overdueCount,
			COUNT(CASE WHEN INSURE_STATUS = '1' OR INSURE_STATUS = '12' THEN 1 END) AS insureCount
		FROM T_PRACTITIONER WHERE DEL_FLAG = '1' AND BLACKLIST = '0' AND INCUMBENT != '0'
	]]>	
	</select>
	<!--人员数据统计安全教育-->
	<select id="practi_data_total_education">
	<![CDATA[
		DECLARE @TIME VARCHAR(4)
		SET @TIME =?
		SELECT 
			SUM(T.educaManId) AS educaMan,
			T.educaTime
		FROM (SELECT
			len(S.EDUCA_MAN_ID)-len(replace(S.EDUCA_MAN_ID,',',''))+1  AS educaManId,
			DATENAME(MONTH, S.EDUCATION_TIME) AS educaTime
		FROM T_SAFETY_EDUCATION S
		WHERE S.DEL_FLAG = '1' AND LEFT(S.EDUCATION_TIME, 4) = '2019')T
		GROUP BY T.educaTime ORDER BY T.educaTime 
	]]>	
	</select>
	<!--人员数据统计安全交底-->
	<select id="practi_data_total_clarification">
	<![CDATA[
		DECLARE @TIME VARCHAR(4)
		SET @TIME =?
		SELECT
			SUM(T.clarManId) AS clarMan,
			T.clarTime
		FROM(SELECT
			len(CLARIFICA_MAN_ID)-len(replace(CLARIFICA_MAN_ID,',',''))+1  AS clarManId,
			DATENAME(MONTH, CLARIFICA_TIME) AS clarTime
		FROM T_SAFE_CLARIFICATION
		WHERE DEL_FLAG = '1' AND LEFT(CLARIFICA_TIME, 4) = @TIME)T
		GROUP BY T.clarTime ORDER BY T.clarTime 
	]]>	
	</select>
	
	<!--人员数据统计自检项目-->
	<select id="practi_data_inspect_project">
	<![CDATA[
		DECLARE @TIME VARCHAR(4)
		DECLARE @STATE VARCHAR(10)
		SET @TIME =?
		SET @STATE =?
		SELECT 
			SUM(T.passCount) AS passCount,
			SUM(T.allCount) AS allCount,
			T.inspectTime
		FROM(SELECT
				1 AS allCount,
				0 AS passCount,
				LEFT(INPROJECT_DATE,7) AS inspectTime
		FROM T_INSPECT_PROJECT_RECORD IR
		WHERE CHARINDEX(','+INPROJECT_TYPE+',',@STATE)> 0
		UNION ALL
		SELECT
				0 AS allCount,
				1 AS passCount,
				LEFT(INPROJECT_DATE,7) AS inspectTime
		FROM T_INSPECT_PROJECT_RECORD IR
		WHERE CHARINDEX(','+INPROJECT_TYPE+',',@STATE)> 0
		AND INPROJECT_STATE = '0')T
		WHERE LEFT( T.inspectTime,4) = @TIME
		GROUP BY T.inspectTime 
	]]>	
	</select>
	<!--人员数据统计考勤统计-->
	<select id="practi_data_total_attendamce">
	<![CDATA[
		DECLARE @TIME int
		SET @TIME =?
		SELECT
			T.allCount,
			SUM(T.attCount) AS attCount,
			T.sgDate
		FROM(SELECT  
				(SELECT COUNT(1) FROM T_PRACTITIONER WHERE DEL_FLAG ='1') AS allCount,
				1 as attCount,
				SG_DATE as sgDate
		from T_ATTENDAMCE where datediff(day,SG_DATE,getdate())<= @TIME and datediff(day,SG_DATE,getdate())>= 0)T
		GROUP BY T.sgDate,T.allCount

	]]>	
	</select>
	
	<!--人员考勤详情-->
	<select id="my_attendamce_detail">
	<![CDATA[
		DECLARE @USERID BIGINT
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
		SET @USERID =?
		SET @START = ?
   	    SET @PAGE_SIZE =?
		;WITH QUERY AS (
			SELECT
				A.AID AS aid,
				A.SG_DATE AS sgDate,
				A.SGIN_TIME AS sginTime,
				A.SGIN_LOCATION AS sginLocation,
				A.SGOU_TIME AS sgonTime,
				A.SGOU_LOCATION AS sgonLocation,
				ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_ATTENDAMCE A 
			WHERE A.USERID = @USERID
 		)
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
		ORDER BY QUERY.sgDate DESC
	]]>	
	</select>

	<!--人员考勤自检项目详情-->
	<select id="my_attendamce_inspect_project">
	<![CDATA[
		DECLARE @AID BIGINT
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
		SET @AID =?
		SET @START = ?
   	    SET @PAGE_SIZE =?
   	    ;WITH QUERY AS (
			SELECT
			INPROJECT_ID AS inprojectId,
			INPROJECT_DATE AS inprojectDate,
			INPROJECT_ITEM AS inprojectItem,
			INPROJECT_TYPE AS inprojectType,
			INPROJECT_IMAGE AS inprojectImage,
			(CASE WHEN INPROJECT_STATE = '0' THEN '合格' ELSE '不合格' END) AS inprojectState,
			ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_INSPECT_PROJECT_RECORD 
			WHERE AID = @AID
		)
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
		ORDER BY QUERY.inprojectDate DESC
	]]>	
	</select>
	<!--人员签到选择设备 -->
	<select id="wechat_practi_project_list">
	<![CDATA[
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		DECLARE @USERID BIGINT
		DECLARE @equipGeneric VARCHAR(1)
		SET @START = ?
		SET @PAGE_SIZE =?
		SET @USERID =?
		SET @equipGeneric =?
		;WITH QUERY AS (
			SELECT
				D.PROJECT_ID AS projectId,
				P.PROJECT_NAME AS projectName,
				DE.EQUIP_ID AS equipId,
				BG.VALUE AS equipGenericName,
				BS.VALUE AS equipSpecificName,
				E.EXW_SERIAL AS exwSerial,
				E.EQUIP_SERIAL AS equipSerial,
				P.ADDRESS AS address,
				E.SEAT_STATE AS seatState,
				ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_DISPATCH_EQUIP DE
			LEFT JOIN T_DISPATCH D ON DE.DISPATCH_ID = D.DISPATCH_ID
			LEFT JOIN T_PROJECT P ON D.PROJECT_ID = P.PROJECT_ID
			LEFT JOIN T_EQUIPMENT E ON DE.EQUIP_ID = E.EQUIP_ID
			LEFT JOIN BM_EQUIP_GENERIC BG ON E.EQUIP_GENERIC = BG.CODE
			LEFT JOIN BM_EQUIP_SPECIFIC BS ON E.EQUIP_SPECIFIC = BS.CODE
			WHERE D.PROJECT_ID IN (SELECT PROJECT_ID FROM T_PRACTITIONER WHERE PRACTI_ID IN
			(SELECT FOREIGN_ID FROM APP_USER_EXTEND UE WHERE UE.USERID = @USERID))
			AND E.EQUIP_GENERIC = @equipGeneric
		)
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
	]]>
	</select>
	<!--人员首页 -->
	<select id="wechat_practi_first_detail">
	<![CDATA[
		DECLARE @USERID BIGINT
		SET @USERID =?
		SELECT 
			P.PRACTI_ID AS practiId,
			P.PRACTI_NAME AS practiName,
			P.STARS_LEVEL AS starsLevel,
			P.KIND_WORK AS kindWork,
			K.VALUE AS kindWorkName,
			C.CORP_NAME AS corpName,
			J.PROJECT_NAME AS projectName,
			P.INSURE_STATUS AS insureStatus,
			P.INSURE_TIME AS insureTime,
			(CASE WHEN P.EDUCATION_TIME IS NOT NULL THEN '已教育' ELSE '未教育' END) AS educationState,
			P.EDUCATION_TIME AS educaitonTime,
			P.CLARIFICA_STATUS AS clarificaStatus,
			ISNULL((SELECT TOP 1 ST.VALUE FROM T_PRACTI_CERT PC LEFT JOIN BM_SPECIALTY_TYPE ST ON PC.SPECIALTY_TYPE = ST.CODE 
			WHERE PC.PRACTI_ID = P.PRACTI_ID AND PC.PRACTI_KINDWORK = P.KIND_WORK), '无资质') AS specialtyName,
			(SELECT TOP 1 PC.EFFECT_DATE FROM T_PRACTI_CERT PC LEFT JOIN BM_SPECIALTY_TYPE ST ON PC.SPECIALTY_TYPE = ST.CODE 
			WHERE PC.PRACTI_ID = P.PRACTI_ID AND PC.PRACTI_KINDWORK = P.KIND_WORK) AS effectDate,
			(CASE (SELECT TOP 1 PI.INSURANCE_TYPE FROM T_PRACTI_INSURANCE PI
			WHERE EXISTS(SELECT PD.INSURE_ID FROM T_PRACTI_INSURANCE_DETAIL PD WHERE PI.INSURE_ID = PD.INSURE_ID AND PD.PRACTI_ID= P.PRACTI_ID)ORDER BY PI.END_INSURE_DATE DESC)  WHEN '0'
			THEN '雇主责任险' WHEN '1' THEN '其他' WHEN NULL THEN '无保险记录'END) AS insureTypeName
		FROM T_PRACTITIONER P
		LEFT JOIN T_PROJECT J ON P.PROJECT_ID = J.PROJECT_ID
		LEFT JOIN T_CORP_INFO C ON P.CORP_ID = C.CORP_ID
		LEFT JOIN BM_KIND_WORK K ON K.CODE = P.KIND_WORK
		WHERE EXISTS(SELECT A.FOREIGN_ID FROM APP_USER_EXTEND A WHERE A.FOREIGN_ID = P.PRACTI_ID AND A.USERID = @USERID)
		AND P.DEL_FLAG = 1
		AND P.INCUMBENT <> '0'
		AND P.PRACTI_STATUS = 1 
	]]>
	</select>
	<!--历史记录交底记录 -->
	<select id="wechat_practi_history_clarification">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE	@PRACTI_ID  BIGINT
        SET @START = ?
 	    SET @PAGE_SIZE =?
 	    SET @PRACTI_ID =?
 	      ;WITH QUERY AS (
 	      SELECT
				SC.CLARIFICA_ID AS clarificaId,
				SC.CLARIFICA_SERIAL AS clarificaSerial,
				SC.PROJECT_ID AS projectId,
				SC.PROJECT_NAME AS projectName,
				SC.ADDRESS AS address,
				SC.COPE_ID  AS copeId,
				SC.COPE_NAME AS copeName,
				SC.CLARIFICA_MAN_ID AS clarificaManId,
				SC.CLARIFICA_MAN AS clarificaMan,
				SC.CLARIFICA_HEAD_ID AS clarificaHeadId,
				SC.CLARIFICA_HEAD AS clarificaHead,
				SC.REMARK AS remark,
				SC.CLARIFICA_IMAGE AS clarificaImage,
				SC.CLARIFICA_TIME AS clarificaTime,
				ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
		FROM T_SAFE_CLARIFICATION SC
		WHERE SC.DEL_FLAG = '1'
		AND CHARINDEX(','+CONVERT(VARCHAR,@PRACTI_ID),','+SC.CLARIFICA_MAN_ID)>0
		 )
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
	]]>
	</select>
	<!--历史记录交底记录 -->
	<select id="wechat_practi_history_clarification">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE	@PRACTI_ID  BIGINT
        SET @START = ?
 	    SET @PAGE_SIZE =?
 	    SET @PRACTI_ID =?
 	      ;WITH QUERY AS (
 	      SELECT
				SC.CLARIFICA_ID AS clarificaId,
				SC.CLARIFICA_SERIAL AS clarificaSerial,
				SC.PROJECT_ID AS projectId,
				SC.PROJECT_NAME AS projectName,
				SC.ADDRESS AS address,
				SC.COPE_ID  AS copeId,
				SC.COPE_NAME AS copeName,
				SC.CLARIFICA_MAN_ID AS clarificaManId,
				SC.CLARIFICA_MAN AS clarificaMan,
				SC.CLARIFICA_HEAD_ID AS clarificaHeadId,
				SC.CLARIFICA_HEAD AS clarificaHead,
				SC.REMARK AS remark,
				SC.CLARIFICA_IMAGE AS clarificaImage,
				SC.CLARIFICA_TIME AS clarificaTime,
				ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
		FROM T_SAFE_CLARIFICATION SC
		WHERE SC.DEL_FLAG = '1'
		AND CHARINDEX(','+CONVERT(VARCHAR,@PRACTI_ID),','+SC.CLARIFICA_MAN_ID)>0
		 )
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
	]]>
	</select>
	<!--历史记录教育记录 -->
	<select id="wechat_practi_history_education">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE	@PRACTI_ID  BIGINT
        SET @START = ?
 	    SET @PAGE_SIZE =?
 	    SET @PRACTI_ID =?
 	    ;WITH QUERY AS (
 	      	SELECT
				SC.SAFETY_ID AS safetyId,
				SC.SAFETY_SERIAL AS safetySerial,
				SC.SAFETY_DETAIL AS safetyDeatil,
				SC.TEACH_MAN_ID AS teachManId,
				SC.TEACH_MAN AS teachMan,
				SC.EDUCA_MAN_ID  AS educaManId,
				SC.EDUCA_MAN AS educaMan,
				SC.REMARK AS remark,
				SC.EDUCATION_IMAGE AS educationImage,
				SC.EDUCATION_TIME AS educationTime,
				ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_SAFETY_EDUCATION SC
			WHERE SC.DEL_FLAG = '1'
			AND CHARINDEX(','+CONVERT(VARCHAR,@PRACTI_ID),','+SC.EDUCA_MAN_ID)>0
		 )
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
	]]>
	</select>
	<!--历史记录参保记录 -->
	<select id="wechat_practi_history_insurance">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE	@PRACTI_ID  BIGINT
        SET @START = ?
 	    SET @PAGE_SIZE =?
 	    SET @PRACTI_ID =?
 	    ;WITH QUERY AS (
 	      	SELECT
				PI.INSURE_ID AS insureId,
				PD.PREMIUM AS premium,
				PI.START_INSURE_DATE AS startInsureDate,
				PI.END_INSURE_DATE AS endInsureDate,
				PI.INSURANCE_COMPANY AS insuranceCompany,
				(CASE WHEN PI.INSURANCE_TYPE = '0' THEN '雇主责任险' ELSE '其他' END) AS insuranceTypeName,
				PI.CLAIM_PHONE AS claimPhone,
				ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_PRACTI_INSURANCE_DETAIL PD
			LEFT JOIN T_PRACTI_INSURANCE PI ON PD.INSURE_ID = PI.INSURE_ID
			WHERE PD.PRACTI_ID = @PRACTI_ID AND PI.DEL_FLAG = '1'
		 )
		SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
	]]>
	</select>
		<!--维修公用列表 -->
	<select id="wechat_repair_general_list">
	<![CDATA[
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		DECLARE	@keyword  VARCHAR(64)
		DECLARE @userId  BIGINT
		DECLARE	@state  VARCHAR(24)
		DECLARE	@dataPermission  VARCHAR(500)
		DECLARE	@depId  VARCHAR(256)
		DECLARE	@year  VARCHAR(7)
		DECLARE	@startDate  VARCHAR(7)
		DECLARE	@endDate  VARCHAR(7)
		SET @START = ?
		SET @PAGE_SIZE =?
		SET @keyword =?
		SET @userId =?
		SET @state =?
		SET @dataPermission = ?
		SET @depId =?
		SET @year =?
		SET @startDate =?
		SET @endDate =?
		;WITH QUERY AS (
			SELECT
				AR.REPID AS repId,
				AR.PROJ_NAME AS projectName,
				AR.BUILDING_NUM AS buildingNum,
				AR.EQUIP_ID AS equipId,
				E.RECORD_ID AS recordId,
				E.EXW_SERIAL AS exwSerial,
				BM.VALUE AS equipSpecificName,
				AR.REPORT_DT AS reportDt,
				AR.LOCATION AS location,
				AR.PROC_MAN AS procMan,
				AR.PROC_MAN_ID AS procManId,
				AR.STATE AS state,
				AR.CREATE_BY AS createBy,
				ROW_NUMBER() OVER (ORDER BY AR.REPID DESC) AS _ROWNUM
			FROM T_APP_REPAIR AR
			LEFT JOIN T_EQUIPMENT E ON AR.EQUIP_ID = E.EQUIP_ID
			LEFT JOIN BM_EQUIP_SPECIFIC BM ON E.EQUIP_SPECIFIC = BM.CODE
			LEFT JOIN DEPARTMENT D ON E.DEP_ID = D.DEP_ID
			LEFT JOIN APP_USER_EXTEND AE ON AR.CREATE_BY = AE.USERID
			LEFT JOIN T_PRACTITIONER P ON AE.FOREIGN_ID = P.PRACTI_ID
			WHERE AE.FOREIGN_MODULE = 'PRACTITIONER'
			AND (CHARINDEX(','+CONVERT(VARCHAR,D.DEP_ID)+',',@depId)>0  OR @depId = '' OR @depId IS NULL)
			AND (SELECT dbo.PermissionFilter(P.PERMISSION_FLAG, @dataPermission))=1
			AND (LEFT(AR.REPORT_DT,7) LIKE '%'+@year+'%' OR @year = '' OR @year IS NULL)
			AND (CHARINDEX(','+AR.STATE+',',@state)>0 OR @state = '' OR @state IS NULL)
			AND (LEFT(AR.REPORT_DT,7) >= @startDate OR @startDate = '' OR @startDate IS NULL)
			AND (LEFT(AR.REPORT_DT,7) <= @endDate OR @endDate = '' OR @endDate IS NULL)
			AND (AR.CREATE_BY = @userId OR @userId = '' OR @userId IS NULL)
			AND ((E.RECORD_ID LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (E.EXW_SERIAL LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (AR.PROJ_NAME LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL )
			OR (AR.BUILDING_NUM LIKE '%'+@keyword+'%' OR @keyword = '' OR @keyword IS NULL ))
			)
		 SELECT  (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!--小程序安全巡检总数 -->
	<select id="wechat_inspect_all_count">
		<![CDATA[
		DECLARE	@dataPermission  VARCHAR(500)
		SET @dataPermission = ?
		SELECT
			SUM(T.aCount) AS checkCount,
			SUM(T.bCount) AS normalCount,
			SUM(T.cCount) AS anomalyCount
		FROM(SELECT
			1 AS aCount,
			0 AS bCount,
			0 AS cCount,
			E.PERMISSION_FLAG
		FROM T_EQUIPMENT_INSPECT_SCHEMA EIS,T_EQUIPMENT_DIARY ED,T_EQUIPMENT_FLOW EF,T_EQUIPMENT_INSPECT EI,T_EQUIPMENT E
		WHERE EI.INSPECT_SCHEMA_ID=EIS.INSPECT_SCHEMA_ID
		AND EIS.EQUIP_DIARY_ID=ED.EQUIP_DIARY_ID
		AND EF.FLOW_ID=ED.FLOW_ID
		AND E.EQUIP_ID=ED.EQUIP_ID
		AND EF.FLOW_STATE < '5'
		AND EI.STATUS = '0'
		AND EI.SEAL_STATUS = '0'
		UNION ALL
		SELECT
			0 AS aCount,
			1 AS bCount,
			0 AS cCount,
			CL.PERMISSION_FLAG
		FROM T_EQUIPMENT_INSPECT EI
		LEFT JOIN BM_INSPECT_RESULT B ON B.CODE = EI.INSPECT_RESULT, T_EQUIPMENT_INSPECT_SCHEMA EIS, T_EQUIPMENT_DIARY ED,T_CONTRACT_LEASE CL
		WHERE ED.EQUIP_DIARY_ID = EIS.EQUIP_DIARY_ID
		AND EIS.INSPECT_SCHEMA_ID = EI.INSPECT_SCHEMA_ID
		AND CL.CONTRACT_ID=ED.CONTRACT_ID
		AND ( (EI.RECTIFICATION !='1' ) AND CHARINDEX(EI.INSPECT_RESULT,'012') > 0)
		UNION ALL
		SELECT
			0 AS aCount,
			0 AS bCount,
			1 AS cCount,
			CL.PERMISSION_FLAG
		FROM T_EQUIPMENT_INSPECT EI
		LEFT JOIN BM_INSPECT_RESULT B ON B.CODE = EI.INSPECT_RESULT, T_EQUIPMENT_INSPECT_SCHEMA EIS, T_EQUIPMENT_DIARY ED
		,T_CONTRACT_LEASE CL
		WHERE ED.EQUIP_DIARY_ID = EIS.EQUIP_DIARY_ID
		AND EIS.INSPECT_SCHEMA_ID = EI.INSPECT_SCHEMA_ID
		AND CL.CONTRACT_ID=ED.CONTRACT_ID
		AND ( EI.RECTIFICATION ='1' OR ( EI.RECTIFICATION !='2' AND CHARINDEX(EI.INSPECT_RESULT,'345') > 0))
		)T WHERE (SELECT dbo.PermissionFilter(T.PERMISSION_FLAG, @dataPermission))=1
	]]>
	</select>

</mapper>


