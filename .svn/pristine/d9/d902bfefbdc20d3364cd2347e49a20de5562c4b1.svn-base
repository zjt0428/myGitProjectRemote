<?xml version="1.0" encoding="UTF-8"?>
<mapper namespace="inventory">
	<!-- DECLARE @CATEGORY VARCHAR(64) -->
	<!-- DECLARE @START_DATE SMALLDATETIME -->
	<!-- DECLARE @END_DATE SMALLDATETIME -->
	<!-- SET @CATEGORY = '1%' -->
	<!-- SET @START_DATE = CONVERT(DATETIME, '2013-07-25 00:00:00') -->
	<!-- SET @END_DATE = CONVERT(DATETIME, '2013-08-25 23:59:59') -->
	<!-- 期初总数量(扣除期初之前遗失) -->
	<select id="period">
	<![CDATA[
		DECLARE @CATEGORY VARCHAR(64)
		DECLARE @START_DATE SMALLDATETIME
		DECLARE @END_DATE SMALLDATETIME
		SET @CATEGORY = ?
		SET @START_DATE = ?
		SET @END_DATE = ?
		SELECT A.CATEGORY,
		       ISNULL(B.VALUE, A.CATEGORY) CATEGORY_NAME,
		       SUM(A.QUANTITY) QUANTITY
		  FROM (SELECT C.COMPON_CATEGORY CATEGORY, COUNT(*) QUANTITY
		          FROM T_COMPONENT C
		         WHERE C.COMPON_CATEGORY LIKE @CATEGORY
		           AND C.PURCHASE_DATE <= @START_DATE
		           AND C.SCRAP_DATE >= @START_DATE
		           AND (C.STATUS <> '7' OR (C.STATUS = '7' AND C.STATUS_DATE > @START_DATE))
		         GROUP BY C.COMPON_CATEGORY
		        UNION ALL
		        SELECT E.EQUIP_CATEGORY CATEGORY, COUNT(*) QUANTITY
		          FROM T_EQUIPMENT E
		         WHERE E.EQUIP_CATEGORY LIKE @CATEGORY
		           AND E.PURCHASE_DATE <= @START_DATE
		           AND E.SCRAP_DATE >= @START_DATE
		           AND (E.STATUS <> '7' OR (E.STATUS = '7' AND E.STATUS_DATE > @START_DATE))
		         GROUP BY E.EQUIP_CATEGORY) A
		  LEFT JOIN BM_REPERTORY_CATEGORY B ON A.CATEGORY = B.CODE
		 GROUP BY A.CATEGORY, B.VALUE;
	]]>
	</select>
	<!-- 期末总数量(扣除期末之前遗失) CATEGORY%, END, END, END, CATEGORY%, END, END, END-->
	<select id="final_exam">
	<![CDATA[
		DECLARE @CATEGORY VARCHAR(64)
		DECLARE @START_DATE SMALLDATETIME
		DECLARE @END_DATE SMALLDATETIME
		SET @CATEGORY = ?
		SET @START_DATE = ?
		SET @END_DATE = ?
		SELECT A.CATEGORY,
		       ISNULL(B.VALUE, A.CATEGORY) CATEGORY_NAME,
		       SUM(A.QUANTITY) QUANTITY
		  FROM (SELECT C.COMPON_CATEGORY CATEGORY, COUNT(*) QUANTITY
		          FROM T_COMPONENT C
		         WHERE C.COMPON_CATEGORY LIKE @CATEGORY
		           AND C.PURCHASE_DATE <= @END_DATE
		           AND C.SCRAP_DATE >= @END_DATE
		           AND (C.STATUS <> '7' OR (C.STATUS = '7' AND C.STATUS_DATE > @END_DATE))
		         GROUP BY C.COMPON_CATEGORY
		        UNION ALL
		        SELECT E.EQUIP_CATEGORY CATEGORY, COUNT(*) QUANTITY
		          FROM T_EQUIPMENT E
		         WHERE E.EQUIP_CATEGORY LIKE @CATEGORY
		           AND E.PURCHASE_DATE <= @END_DATE
		           AND E.SCRAP_DATE >= @END_DATE
		           AND (E.STATUS <> '7' OR (E.STATUS = '7' AND E.STATUS_DATE > @END_DATE))
		         GROUP BY E.EQUIP_CATEGORY) A
		  LEFT JOIN BM_REPERTORY_CATEGORY B ON A.CATEGORY = B.CODE
		 GROUP BY A.CATEGORY, B.VALUE;
	]]>
	</select>
	<!-- 期中报废数量 CATEGORY%, END, START, END, CATEGORY%, END, START, END-->
	<select id="scrap">
	<![CDATA[
		DECLARE @CATEGORY VARCHAR(64)
		DECLARE @START_DATE SMALLDATETIME
		DECLARE @END_DATE SMALLDATETIME
		SET @CATEGORY = ?
		SET @START_DATE = ?
		SET @END_DATE = ?
		SELECT A.CATEGORY,
		       ISNULL(B.VALUE, A.CATEGORY) CATEGORY_NAME,
		       SUM(A.QUANTITY) QUANTITY
		  FROM (SELECT C.COMPON_CATEGORY CATEGORY, COUNT(*) QUANTITY
		          FROM T_COMPONENT C
		         WHERE C.COMPON_CATEGORY LIKE @CATEGORY
		           AND C.PURCHASE_DATE <= @END_DATE
		           AND C.SCRAP_DATE >= @START_DATE
		           AND C.SCRAP_DATE <= @END_DATE
		         GROUP BY C.COMPON_CATEGORY
		        UNION ALL
		        SELECT E.EQUIP_CATEGORY CATEGORY, COUNT(*) QUANTITY
		          FROM T_EQUIPMENT E
		         WHERE E.EQUIP_CATEGORY LIKE @CATEGORY
		           AND E.PURCHASE_DATE <= @END_DATE
		           AND E.SCRAP_DATE >= @START_DATE
		           AND E.SCRAP_DATE <= @END_DATE
		         GROUP BY E.EQUIP_CATEGORY) A
		  LEFT JOIN BM_REPERTORY_CATEGORY B ON A.CATEGORY = B.CODE
		 GROUP BY A.CATEGORY, B.VALUE;
	]]>
	</select>
	<!-- 期中遗失数量 CATEGORY%, END, START, END, CATEGORY%, END, START, END-->
	<select id="miss">
	<![CDATA[
		DECLARE @CATEGORY VARCHAR(64)
		DECLARE @START_DATE SMALLDATETIME
		DECLARE @END_DATE SMALLDATETIME
		SET @CATEGORY = ?
		SET @START_DATE = ?
		SET @END_DATE = ?
		SELECT A.CATEGORY,
		       ISNULL(B.VALUE, A.CATEGORY) CATEGORY_NAME,
		       SUM(A.QUANTITY) QUANTITY
		  FROM (SELECT C.COMPON_CATEGORY CATEGORY, COUNT(*) QUANTITY
		          FROM T_COMPONENT C
		         WHERE C.COMPON_CATEGORY LIKE @CATEGORY
		           AND C.PURCHASE_DATE <= @END_DATE
		           AND C.STATUS_DATE <= @END_DATE
		           AND C.STATUS_DATE >= @START_DATE
		           AND C.STATUS = '7'
		         GROUP BY C.COMPON_CATEGORY
		        UNION ALL
		        SELECT E.EQUIP_CATEGORY CATEGORY, COUNT(*) QUANTITY
		          FROM T_EQUIPMENT E
		         WHERE E.EQUIP_CATEGORY LIKE @CATEGORY
		           AND E.PURCHASE_DATE <= @END_DATE
		           AND E.STATUS_DATE <= @END_DATE
		           AND E.STATUS_DATE >= @START_DATE
		           AND E.STATUS = '7'
		         GROUP BY E.EQUIP_CATEGORY) A
		  LEFT JOIN BM_REPERTORY_CATEGORY B ON A.CATEGORY = B.CODE
		 GROUP BY A.CATEGORY, B.VALUE;
	]]>
	</select>
	<!-- 期末时领用/借用/安装/使用/拆卸数量 -->
	<select id="inused">
	<![CDATA[
		DECLARE @CATEGORY VARCHAR(64)
		DECLARE @START_DATE SMALLDATETIME
		DECLARE @END_DATE SMALLDATETIME
		SET @CATEGORY = ?
		SET @START_DATE = ?
		SET @END_DATE = ?
		SELECT A.CATEGORY,
		       ISNULL(B.VALUE, A.CATEGORY) CATEGORY_NAME,
		       A.RELATE_MODULE,
		       SUM(A.QUANTITY) QUANTITY
		  FROM (SELECT CD.COMPON_CATEGORY CATEGORY,
		               CD.RELATE_MODULE RELATE_MODULE,
		               COUNT(*) QUANTITY
		          FROM T_COMPONENT_DIARY CD,
		               (SELECT *
		                  FROM T_COMPONENT C
		                 WHERE C.COMPON_CATEGORY LIKE @CATEGORY
		                   AND C.PURCHASE_DATE <= @END_DATE
		                   AND C.SCRAP_DATE >= @END_DATE
		                   AND (C.STATUS <> '7' OR (C.STATUS = '7' AND C.STATUS_DATE > @END_DATE))) A
		         WHERE A.COMPON_ID = CD.COMPON_ID
		           AND CD.END_DATE > @END_DATE
		           AND CD.ACTIVE = '1'
		         GROUP BY CD.COMPON_CATEGORY, CD.RELATE_MODULE
		        UNION ALL
		        SELECT ED.EQUIP_CATEGORY CATEGORY,
		               ED.RELATE_MODULE RELATE_MODULE,
		               COUNT(*) QUANTITY
		          FROM T_EQUIPMENT_DIARY ED,
		               (SELECT *
		                  FROM T_EQUIPMENT E
		                 WHERE E.EQUIP_CATEGORY LIKE @CATEGORY
		                   AND E.PURCHASE_DATE <= @END_DATE
		                   AND E.SCRAP_DATE >= @END_DATE
		                   AND (E.STATUS <> '7' OR (E.STATUS = '7' AND E.STATUS_DATE > @END_DATE))) A
		         WHERE A.EQUIP_ID = ED.EQUIP_ID
		           AND ED.END_DATE > @END_DATE
		           AND ED.ACTIVE = '1'
		         GROUP BY ED.EQUIP_CATEGORY, ED.RELATE_MODULE) A
		  LEFT JOIN BM_REPERTORY_CATEGORY B ON A.CATEGORY = B.CODE
		 WHERE A.RELATE_MODULE = 'PICKUP'
		    OR A.RELATE_MODULE = 'BORROW'
		 GROUP BY A.CATEGORY, B.VALUE, A.RELATE_MODULE;
	]]>
	</select>
</mapper>