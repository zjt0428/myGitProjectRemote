<?xml version="1.0" encoding="UTF-8"?>
<mapper namespace="settle">
<!-- 项目结算开始 -->
	<!-- 本期租金合计 -->
	<select id="current_rent_amount">
	<![CDATA[
	DECLARE @STARTDATE VARCHAR(32)
    DECLARE @ENDDATE VARCHAR(32)
    DECLARE @CONTRACTID bigint
    SET @STARTDATE =?
    SET @ENDDATE = ?
    SET @CONTRACTID = ?

	;WITH QUERY AS (
            SELECT 
			 amount = SUM(
             CASE 
				WHEN TB.REACTIVATE_DATE <= @STARTDATE 
					THEN (DATEDIFF(dd,@STARTDATE,@ENDDATE)+1)*CAST(TA.RENT_STANDARD AS decimal(9,2)) 
				WHEN TA.ACTIVATE_DATE < @STARTDATE AND convert(VARCHAR(10),TB.BLOCKUP_DATE,120) < @STARTDATE 
					AND TB.REACTIVATE_DATE > @STARTDATE AND TB.REACTIVATE_DATE < @ENDDATE 
					THEN (DATEDIFF(dd,TB.REACTIVATE_DATE,@ENDDATE)+1)*CAST(TA.RENT_STANDARD AS decimal(9,2))
				WHEN TA.ACTIVATE_DATE <= @STARTDATE AND convert(VARCHAR(10),TB.BLOCKUP_DATE,120) > @STARTDATE AND convert(VARCHAR(10),TB.BLOCKUP_DATE,120) < @ENDDATE 
					--AND (TB.REACTIVATE_DATE IS NULL OR TB.REACTIVATE_DATE < @ENDDATE) 
					AND (TA.EFFECTIVE_DATE IS NULL OR TA.EFFECTIVE_DATE < @STARTDATE)
					THEN (DATEDIFF(dd,@STARTDATE,@ENDDATE)+1)*CAST(TA.RENT_STANDARD AS decimal(9,2))
				WHEN TA.ACTIVATE_DATE <= @STARTDATE AND convert(VARCHAR(10),TB.BLOCKUP_DATE,120) > @STARTDATE AND convert(VARCHAR(10),TB.BLOCKUP_DATE,120) < @ENDDATE 
					--AND (TB.REACTIVATE_DATE IS NULL OR TB.REACTIVATE_DATE < @ENDDATE) 
					AND (TA.EFFECTIVE_DATE >= @STARTDATE AND TA.EFFECTIVE_DATE<=@ENDDATE)
					THEN (DATEDIFF(dd,TA.ACTIVATE_DATE,@ENDDATE)+1)*CAST(TA.RENT_STANDARD AS decimal(9,2))
				WHEN TA.ACTIVATE_DATE <= @STARTDATE AND (TB.BLOCKUP_DATE IS NULL OR convert(VARCHAR(10),TB.BLOCKUP_DATE,120) > @STARTDATE) 
					AND (TA.EFFECTIVE_DATE IS NULL OR TA.EFFECTIVE_DATE < @STARTDATE) 
					THEN (DATEDIFF(dd,@STARTDATE,@ENDDATE)+1)*CAST(TA.RENT_STANDARD AS decimal(9,2))
				WHEN TA.ACTIVATE_DATE <= @STARTDATE AND (TB.BLOCKUP_DATE IS NULL OR convert(VARCHAR(10),TB.BLOCKUP_DATE,120) > @STARTDATE) 
					AND (TA.EFFECTIVE_DATE >= @STARTDATE AND TA.EFFECTIVE_DATE<=@ENDDATE)
					THEN (DATEDIFF(dd,TA.ACTIVATE_DATE,@ENDDATE)+1)*CAST(TA.RENT_STANDARD AS decimal(9,2))
				WHEN TA.ACTIVATE_DATE > @STARTDATE AND TA.ACTIVATE_DATE <= @ENDDATE AND (TA.EFFECTIVE_DATE IS NULL OR  TA.EFFECTIVE_DATE<=@ENDDATE) 
					THEN (DATEDIFF(dd,TA.ACTIVATE_DATE,@ENDDATE)+1)*CAST(TA.RENT_STANDARD AS decimal(9,2))
				ELSE '0'
            END)
		  FROM T_CONTRACT_LEASE  TL  
        LEFT JOIN  T_EQUIPMENT_FLOW TF ON TF.CONTRACT_ID = TL.CONTRACT_ID AND TF.ACTIVATE_ID is NOT NULL
        LEFT JOIN T_EQUIPMENT_ACTIVATE TA ON TA.ACTIVATE_ID = TF.ACTIVATE_ID AND TA.EFFECTIVE = 1
        LEFT JOIN (SELECT * FROM T_EQUIPMENT_BLOCKUP WHERE BLOCKUP_ID IN (SELECT MAX(BLOCKUP_ID) FROM T_EQUIPMENT_BLOCKUP GROUP BY FLOW_ID )
				) TB ON TB.FLOW_ID = TF.FLOW_ID  AND TB.EFFECTIVE = 1
        WHERE TL.CONTRACT_ID = @CONTRACTID
		
		UNION 

		SELECT 
            amount = SUM(
             CASE 
				WHEN  ( @STARTDATE<=convert(VARCHAR(10),TB.BLOCKUP_DATE,120) AND convert(VARCHAR(10),TB.BLOCKUP_DATE,120)<=@ENDDATE AND TB.REACTIVATE_DATE IS NOT NULL AND TB.REACTIVATE_DATE <=@ENDDATE )  
					THEN -(DATEDIFF(dd,convert(VARCHAR(10),TB.BLOCKUP_DATE,120),TB.REACTIVATE_DATE)+1)*CAST(TA.RENT_STANDARD AS decimal(9,2))
				WHEN  ( @STARTDATE<=convert(VARCHAR(10),TB.BLOCKUP_DATE,120) AND convert(VARCHAR(10),TB.BLOCKUP_DATE,120)<=@ENDDATE AND (TB.REACTIVATE_DATE IS NULL OR TB.REACTIVATE_DATE >@ENDDATE) ) 
					THEN -(DATEDIFF(dd,convert(VARCHAR(10),TB.BLOCKUP_DATE,120),@ENDDATE)+1)*CAST(TA.RENT_STANDARD AS decimal(9,2))
				ELSE '0'
            END)
         FROM T_CONTRACT_LEASE  TL  
        LEFT JOIN  T_EQUIPMENT_FLOW TF ON TF.CONTRACT_ID = TL.CONTRACT_ID AND TF.ACTIVATE_ID is NOT NULL
        LEFT JOIN T_EQUIPMENT_ACTIVATE TA ON TA.ACTIVATE_ID = TF.ACTIVATE_ID AND TA.EFFECTIVE = 1
        LEFT JOIN T_EQUIPMENT_BLOCKUP TB ON TB.FLOW_ID = TF.FLOW_ID  AND TB.EFFECTIVE = 1
        WHERE TL.CONTRACT_ID = @CONTRACTID   
        )SELECT SUM(amount) currentRentAmount FROM QUERY
	]]>
	</select>
	<!--安拆费用 -->
	<select id="current_install_fee">
	<![CDATA[
	DECLARE @STARTDATE VARCHAR(32)
	DECLARE @ENDDATE VARCHAR(32)
	DECLARE @CONTRACTID bigint
	SET @STARTDATE =?
	SET @ENDDATE = ?
	SET @CONTRACTID = ?
	;WITH QUERY AS (
		SELECT
			totalAmount1=(SELECT SUM(TFE.CHARGES_SUBTOTAL)  FROM T_EQUIPMENT_INSTALL TI 
			LEFT JOIN T_EQUIPMENT_FLOW TF ON TF.FLOW_ID = TI.FLOW_ID
			LEFT JOIN T_INSTALL_FEE TFE ON TFE.RELATE_ID = TI.INSTALL_ID  AND TFE.RELATE_MODULE = 'EQUIP_INSTALL'
			WHERE TF.CONTRACT_ID = @CONTRACTID AND  TFE.START_TIME  >= @STARTDATE AND TFE.START_TIME<= @ENDDATE
			),
			totalAmount2 =(SELECT SUM(TFE.CHARGES_SUBTOTAL)  FROM T_EQUIPMENT_DISMANTLE TI 
			LEFT JOIN T_EQUIPMENT_FLOW TF ON TF.FLOW_ID = TI.FLOW_ID
			LEFT JOIN T_INSTALL_FEE TFE ON TFE.RELATE_ID = TI.DISMANTLE_ID  AND TFE.RELATE_MODULE = 'EQUIP_DISMANTLE'
			WHERE TF.CONTRACT_ID = @CONTRACTID AND  TFE.START_TIME  >= @STARTDATE AND TFE.START_TIME<= @ENDDATE
			)
		)SELECT ((CASE WHEN  totalAmount1 IS NULL  THEN '0' ELSE totalAmount1 END))+((CASE WHEN  totalAmount2 IS NULL  THEN '0' ELSE totalAmount2 END)) totalAmount FROM QUERY
	]]>
	</select>
	<!--汽吊费用 -->
	<select id="current_autocrane_fee">
	<![CDATA[
	DECLARE @STARTDATE VARCHAR(32)
	DECLARE @ENDDATE VARCHAR(32)
	DECLARE @CONTRACTID bigint
	SET @STARTDATE =?
	SET @ENDDATE = ?
	SET @CONTRACTID = ?
	;WITH QUERY AS (
		SELECT
			totalAmount1=(SELECT SUM(TFE.CHARGES_SUBTOTAL)  FROM T_EQUIPMENT_INSTALL TI 
			LEFT JOIN T_EQUIPMENT_FLOW TF ON TF.FLOW_ID = TI.FLOW_ID
			LEFT JOIN T_AUTOCRANE_FEE TFE ON TFE.RELATE_ID = TI.INSTALL_ID  AND TFE.RELATE_MODULE = 'EQUIP_INSTALL'
			WHERE TF.CONTRACT_ID = @CONTRACTID AND  TFE.START_TIME  >= @STARTDATE AND TFE.START_TIME<= @ENDDATE
			),
			totalAmount2 =(SELECT SUM(TFE.CHARGES_SUBTOTAL)  FROM T_EQUIPMENT_DISMANTLE TI 
			LEFT JOIN T_EQUIPMENT_FLOW TF ON TF.FLOW_ID = TI.FLOW_ID
			LEFT JOIN T_AUTOCRANE_FEE TFE ON TFE.RELATE_ID = TI.DISMANTLE_ID  AND TFE.RELATE_MODULE = 'EQUIP_DISMANTLE'
			WHERE TF.CONTRACT_ID = @CONTRACTID AND  TFE.START_TIME  >= @STARTDATE AND TFE.START_TIME<= @ENDDATE
			)
		)SELECT ((CASE WHEN  totalAmount1 IS NULL  THEN '0' ELSE totalAmount1 END))+((CASE WHEN  totalAmount2 IS NULL  THEN '0' ELSE totalAmount2 END)) totalAmount FROM QUERY
	]]>
	</select>
	<!--丢损费用 -->
	<select id="current_lost_fee">
	<![CDATA[
		DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @CONTRACTID bigint
		SET @STARTDATE =?
		SET @ENDDATE = ?
		SET @CONTRACTID = ?
	
		SELECT SUM(CAST(TD.TOTALS AS decimal(9,2))) totalAmount FROM T_LOST_HANDLE TH
		LEFT JOIN T_LOST_DETAIL  TD ON  TD.LOST_ID =  TH.LOST_ID
		WHERE TH.CONTRACT_ID = @CONTRACTID AND TH.APPLYFOR_STATE = 3 AND TH.LOST_DATE  >= @STARTDATE AND TH.LOST_DATE<= @ENDDATE	
		]]>
	</select>
	<!--其他费用 -->
	<select id="current_other_fee">
	<![CDATA[
		DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @CONTRACTID bigint
		DECLARE @CALMETHOD VARCHAR(32)
		SET @STARTDATE =?
		SET @ENDDATE = ?
		SET @CONTRACTID = ?
		SET @CALMETHOD  = ?
	
		SELECT SUM(CAST(TD.FEE AS decimal(9,2))) totalAmount FROM T_OTHER_BETS TB
		LEFT JOIN T_OTHER_BETS_DETAIL  TD ON  TD.OTHER_BETS_ID =  TB.OTHER_BETS_ID AND TD.CALCULATION_METHOD =  @CALMETHOD 
		WHERE TB.CONTRACT_ID = @CONTRACTID AND TB.APPLYFOR_STATE = 3  AND TB.CHARGEABLE_TIME  >= @STARTDATE AND TB.CHARGEABLE_TIME<= @ENDDATE 	
		]]>
	</select>
	<!--租赁费用清单 -->
	<select id="rent_fee_detail">
	<![CDATA[
		DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @CONTRACTID bigint
		DECLARE @detailCaculateTime VARCHAR(24)
		SET @STARTDATE =?
		SET @ENDDATE = ?
		SET @CONTRACTID = ?
		SET @detailCaculateTime = ?
		
		;WITH QUERY AS 	(
        SELECT  T.EQUIP_SERIAL equipmentNo,
			   T.RECORD_ID recordId,
			   BS.VALUE equipSpecificName,
			   LEFT(TA.ACTIVATE_DATE,10)  activateDate,
			   LEFT((CASE 
						WHEN TB.REACTIVATE_DATE <= @STARTDATE 
							THEN @STARTDATE
						WHEN  TA.ACTIVATE_DATE <= @STARTDATE AND convert(VARCHAR(10),TB.BLOCKUP_DATE,120) < @STARTDATE 
							AND TB.REACTIVATE_DATE > @STARTDATE AND TB.REACTIVATE_DATE < @ENDDATE 
							THEN TB.REACTIVATE_DATE
						WHEN  TA.ACTIVATE_DATE <= @STARTDATE AND convert(VARCHAR(10),TB.BLOCKUP_DATE,120) > @STARTDATE 
							AND convert(VARCHAR(10),TB.BLOCKUP_DATE,120) < @ENDDATE --AND (TB.REACTIVATE_DATE IS  NULL OR TB.REACTIVATE_DATE <= @ENDDATE) 
							AND (TA.EFFECTIVE_DATE IS NULL OR TA.EFFECTIVE_DATE < @STARTDATE)
							THEN @STARTDATE
						WHEN  TA.ACTIVATE_DATE <= @STARTDATE AND convert(VARCHAR(10),TB.BLOCKUP_DATE,120) > @STARTDATE 
							AND convert(VARCHAR(10),TB.BLOCKUP_DATE,120) < @ENDDATE --AND (TB.REACTIVATE_DATE IS NULL OR TB.REACTIVATE_DATE < @ENDDATE) 
							AND (TA.EFFECTIVE_DATE >= @STARTDATE AND TA.EFFECTIVE_DATE<=@ENDDATE)
							THEN TA.ACTIVATE_DATE
              			WHEN TA.ACTIVATE_DATE <= @STARTDATE AND (TB.BLOCKUP_DATE IS NULL OR convert(VARCHAR(10),TB.BLOCKUP_DATE,120) > @STARTDATE) 
							AND (TA.EFFECTIVE_DATE IS NULL OR TA.EFFECTIVE_DATE < @STARTDATE) 
							THEN @STARTDATE
						WHEN TA.ACTIVATE_DATE <= @STARTDATE AND (TB.BLOCKUP_DATE IS NULL OR convert(VARCHAR(10),TB.BLOCKUP_DATE,120) > @STARTDATE) 
							AND (TA.EFFECTIVE_DATE >= @STARTDATE AND TA.EFFECTIVE_DATE<=@ENDDATE)
							THEN TA.ACTIVATE_DATE
						WHEN TA.ACTIVATE_DATE > @STARTDATE AND TA.ACTIVATE_DATE <= @ENDDATE AND (TA.EFFECTIVE_DATE IS NULL OR  TA.EFFECTIVE_DATE<=@ENDDATE)
							THEN TA.ACTIVATE_DATE
            	END),10) startDate,
            	LEFT(@ENDDATE,10) endDate,
            	TA.RENT_STANDARD rentStandard,
            	TA.MEASUREMENT rentUnit,
            	'启用管理' feeType
            FROM  T_CONTRACT_LEASE  TL  
        LEFT JOIN  T_EQUIPMENT_FLOW TF ON TF.CONTRACT_ID = TL.CONTRACT_ID AND TF.ACTIVATE_ID is NOT NULL
        LEFT JOIN T_EQUIPMENT_ACTIVATE TA ON TA.ACTIVATE_ID = TF.ACTIVATE_ID AND (TA.EFFECTIVE = 1 OR (@detailCaculateTime IS NOT NULL AND TA.EFFECTIVE_DATE IS NOT NULL))
        LEFT JOIN (SELECT * FROM T_EQUIPMENT_BLOCKUP WHERE BLOCKUP_ID IN (SELECT MAX(BLOCKUP_ID) FROM T_EQUIPMENT_BLOCKUP GROUP BY FLOW_ID )
				   ) TB ON TB.FLOW_ID = TF.FLOW_ID  AND (TB.EFFECTIVE = 1 OR (@detailCaculateTime IS NOT NULL AND TB.EFFECTIVE_DATE IS NOT NULL))
        LEFT JOIN T_EQUIPMENT T ON T.EQUIP_ID = TF.EQUIP_ID
        LEFT JOIN BM_EQUIP_SPECIFIC BS ON BS.CODE = T.EQUIP_SPECIFIC
        WHERE TL.CONTRACT_ID = @CONTRACTID AND (TA.EFFECTIVE_DATE IS NULL OR @detailCaculateTime IS NULL OR TA.EFFECTIVE_DATE<@detailCaculateTime)
		
        UNION ALL
        
		SELECT T.EQUIP_SERIAL equipmentNo,
			   T.RECORD_ID recordId,
			BS.VALUE equipSpecificName,
			   convert(VARCHAR(10),TB.BLOCKUP_DATE,120) activateDate,
			  (CASE WHEN @STARTDATE<=convert(VARCHAR(10),TB.BLOCKUP_DATE,120) AND convert(VARCHAR(10),TB.BLOCKUP_DATE,120)<= @ENDDATE 
						THEN convert(VARCHAR(10),TB.BLOCKUP_DATE,120)
            	 END) startDate,
			  (CASE WHEN  @STARTDATE<=convert(VARCHAR(10),TB.BLOCKUP_DATE,120) AND convert(VARCHAR(10),TB.BLOCKUP_DATE,120)<=@ENDDATE AND TB.REACTIVATE_DATE IS NOT NULL AND TB.REACTIVATE_DATE <@ENDDATE  
						THEN TB.REACTIVATE_DATE
             	ELSE @ENDDATE END) endDate,
				TA.RENT_STANDARD rentStandard,
				TA.MEASUREMENT rentUnit,
				'停用管理' feeType
            FROM  T_CONTRACT_LEASE  TL   
         LEFT JOIN  T_EQUIPMENT_FLOW TF ON TF.CONTRACT_ID = TL.CONTRACT_ID AND TF.ACTIVATE_ID is NOT NULL
         LEFT JOIN T_EQUIPMENT_ACTIVATE TA ON TA.ACTIVATE_ID = TF.ACTIVATE_ID AND (TA.EFFECTIVE = 1 OR (@detailCaculateTime IS NOT NULL AND TA.EFFECTIVE_DATE IS NOT NULL)) 
         LEFT JOIN T_EQUIPMENT_BLOCKUP TB ON TB.FLOW_ID = TF.FLOW_ID  AND (TB.EFFECTIVE = 1 OR (@detailCaculateTime IS NOT NULL AND TB.EFFECTIVE_DATE IS NOT NULL))
         LEFT JOIN T_EQUIPMENT T ON T.EQUIP_ID = TF.EQUIP_ID
         LEFT JOIN BM_EQUIP_SPECIFIC BS ON BS.CODE = T.EQUIP_SPECIFIC
        WHERE TL.CONTRACT_ID = @CONTRACTID	AND (TB.EFFECTIVE_DATE IS NULL OR @detailCaculateTime IS NULL OR TB.EFFECTIVE_DATE<@detailCaculateTime)
		) 
			SELECT ROW_NUMBER() OVER(ORDER BY equipmentNo DESC,activateDate ASC) id,* FROM QUERY
        WHERE startDate is not null AND endDate is not null AND activateDate is not null
        ]]>
        </select>
	<!--安拆费用清单 -->
	<select id="install_fee_detail">
	<![CDATA[
		DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @CONTRACTID bigint
		SET @STARTDATE =?
		SET @ENDDATE = ?
		SET @CONTRACTID = ?
		;WITH QUERY AS 	(
			SELECT 
			TFE.START_TIME startTime,TI.EQUIPMENT_NO equipmentNo,TFE.EQUIP_SPECIFIC_NAME equipSpecificName,TFE.FEES_TYPE_NAME feesTypeName,TFE.UNIT unit,TFE.NUMBER number,TFE.PROJECT_PRICE projectPrice,TFE.CHARGES_SUBTOTAL chargesSubtotal FROM T_EQUIPMENT_INSTALL TI 
			LEFT JOIN T_EQUIPMENT_FLOW TF ON TF.FLOW_ID = TI.FLOW_ID
			LEFT JOIN T_INSTALL_FEE TFE ON TFE.RELATE_ID = TI.INSTALL_ID  AND TFE.RELATE_MODULE = 'EQUIP_INSTALL'
			WHERE TF.CONTRACT_ID = @CONTRACTID AND  TFE.START_TIME  >= @STARTDATE AND TFE.START_TIME<= @ENDDATE
		UNION ALL
			SELECT 
			TFE.START_TIME startTime,TD.EQUIP_SERIAL equipmentNo,TFE.EQUIP_SPECIFIC_NAME equipSpecificName,TFE.FEES_TYPE_NAME feesTypeName,TFE.UNIT unit,TFE.NUMBER number,TFE.PROJECT_PRICE projectPrice,TFE.CHARGES_SUBTOTAL chargesSubtotal  FROM T_EQUIPMENT_DISMANTLE TI 
			LEFT JOIN T_EQUIPMENT_FLOW TF ON TF.FLOW_ID = TI.FLOW_ID
			LEFT JOIN T_INSTALL_FEE TFE ON TFE.RELATE_ID = TI.DISMANTLE_ID  AND TFE.RELATE_MODULE = 'EQUIP_DISMANTLE'
			LEFT JOIN T_EQUIPMENT_DIARY TD ON TD.FLOW_ID = TF.FLOW_ID 
			WHERE TF.CONTRACT_ID = @CONTRACTID AND  TFE.START_TIME  >= @STARTDATE AND TFE.START_TIME<= @ENDDATE
			) SELECT ROW_NUMBER() OVER(ORDER BY startTime DESC) id,* FROM QUERY
        ]]>
        </select>
	<!--汽吊费用清单 -->
	<select id="autocrane_fee_detail">
	<![CDATA[
		DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @CONTRACTID bigint
		SET @STARTDATE =?
		SET @ENDDATE = ?
		SET @CONTRACTID = ?
		;WITH QUERY AS 	(
			SELECT 
			TFE.START_TIME startTime,TD.EQUIP_SERIAL equipmentNo,TFE.TRUCK_CRANE_SPECIFIC truckCraneSpecific,TFE.NUMBER number,TFE.MACHINE_TEAM machineTeam,TFE.PROJECT_PRICE projectPrice,TFE.CHARGES_SUBTOTAL chargesSubtotal  FROM T_EQUIPMENT_DISMANTLE TI 
			LEFT JOIN T_EQUIPMENT_FLOW TF ON TF.FLOW_ID = TI.FLOW_ID
			LEFT JOIN T_AUTOCRANE_FEE TFE ON TFE.RELATE_ID = TI.DISMANTLE_ID  AND TFE.RELATE_MODULE = 'EQUIP_DISMANTLE'
			LEFT JOIN T_EQUIPMENT_DIARY TD ON TD.FLOW_ID = TF.FLOW_ID
			WHERE TF.CONTRACT_ID = @CONTRACTID AND  TFE.START_TIME  >= @STARTDATE AND TFE.START_TIME<= @ENDDATE
		UNION ALL
			SELECT 
			TFE.START_TIME startTime,TI.EQUIPMENT_NO equipmentNo,TFE.TRUCK_CRANE_SPECIFIC truckCraneSpecific,TFE.NUMBER number,TFE.MACHINE_TEAM machineTeam,TFE.PROJECT_PRICE projectPrice,TFE.CHARGES_SUBTOTAL chargesSubtotal   FROM T_EQUIPMENT_INSTALL TI 
			LEFT JOIN T_EQUIPMENT_FLOW TF ON TF.FLOW_ID = TI.FLOW_ID
			LEFT JOIN T_AUTOCRANE_FEE TFE ON TFE.RELATE_ID = TI.INSTALL_ID  AND TFE.RELATE_MODULE = 'EQUIP_INSTALL'
			WHERE TF.CONTRACT_ID = @CONTRACTID AND  TFE.START_TIME  >= @STARTDATE AND TFE.START_TIME<= @ENDDATE
			) SELECT ROW_NUMBER() OVER(ORDER BY startTime DESC) id,* FROM QUERY
        ]]>
        </select>
	<!--丢失费用清单 -->
	<select id="lost_fee_detail">
	<![CDATA[
		DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @CONTRACTID bigint
		SET @STARTDATE =?
		SET @ENDDATE = ?
		SET @CONTRACTID = ?
			SELECT  ROW_NUMBER() OVER(ORDER BY TH.LOST_DATE DESC) id,TH.LOST_DATE lostDate,TD.COMMODITY commodity,TD.COMPON_SPECIFIC componSpecific,TD.LOST_COUNTS lostCounts,TD.LOST_COSTS lostCosts,TD.DAMAGE_COUNTS damageCounts,TD.DAMAGE_COSTS damageCosts,TD.TOTALS totals,TD.DESCRIBE describe FROM T_LOST_HANDLE TH
			LEFT JOIN T_LOST_DETAIL  TD ON  TD.LOST_ID =  TH.LOST_ID
			WHERE TH.CONTRACT_ID = @CONTRACTID AND TH.APPLYFOR_STATE = 3 AND TH.LOST_DATE  >= @STARTDATE AND TH.LOST_DATE<= @ENDDATE	
        ]]>
        </select>
	
	<!--其他费用清单 -->
	<select id="other_fee_detail">
	<![CDATA[
		DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @CONTRACTID bigint
		
		SET @STARTDATE =?
		SET @ENDDATE = ?
		SET @CONTRACTID = ?
		
		SELECT ROW_NUMBER() OVER(ORDER BY T.chargeableTime DESC) id,* FROM (
			SELECT 
			TB.CHARGEABLE_TIME AS 'chargeableTime',
			TD.FEES_TYPE_NAME AS 'feesTypeName',
			TD.CALCULATION_METHOD_NAME AS 'calculationMethodName',
			TD.FEE AS 'fee'  
			FROM T_OTHER_BETS TB
			LEFT JOIN T_OTHER_BETS_DETAIL  TD ON  TD.OTHER_BETS_ID =  TB.OTHER_BETS_ID 
			WHERE TB.CONTRACT_ID = @CONTRACTID AND  TB.APPLYFOR_STATE = 3  
			AND TB.CHARGEABLE_TIME  >= @STARTDATE AND TB.CHARGEABLE_TIME<= @ENDDATE 
			
			UNION ALL 
			SELECT 
			LT.DELIVERY_DATE AS 'chargeableTime',
			'附件运输费' AS 'feesTypeName',
			'相加' AS 'calculationMethodName',
			SUM(LB.AMOUNT) AS 'fee'
			FROM T_LOGISTICS_TRANSPORT LT,T_LOGISTICS_TRANDESTRIBUTION LB, T_CONTRACT_LEASE CL
			WHERE LT.APPLYFOR_STATE=3  AND LT.TRANSPORT_ID=LB.TRANSPORT_ID 
			AND LT.RELATE_SERIAL=CL.CONSTRACT_NO AND CL.CONTRACT_ID=@contractId 
			AND LEFT(LT.DELIVERY_DATE,10)>=@startDate AND LEFT(LT.DELIVERY_DATE,10)<=@endDate
			GROUP BY LT.DELIVERY_DATE
		) T
		     ]]>
        </select>
        
        <!--现场装车附件运输费（算入其他费用） -->
      <select id="tranDistributionbution_amount">
		<![CDATA[
        DECLARE @startDate VARCHAR(32)
		DECLARE @endDate VARCHAR(32)
		DECLARE @contractId bigint
		SET @startDate =?
		SET @endDate = ?
		SET @contractId = ?
		
		SELECT SUM(LB.AMOUNT) AS totalAmount FROM T_LOGISTICS_TRANSPORT LT,T_LOGISTICS_TRANDESTRIBUTION LB, T_CONTRACT_LEASE CL
		WHERE LT.APPLYFOR_STATE=3  AND LT.TRANSPORT_ID=LB.TRANSPORT_ID 
		AND LT.RELATE_SERIAL=CL.CONSTRACT_NO AND CL.CONTRACT_ID=@contractId 
		AND LEFT(LT.DELIVERY_DATE,10)>=@startDate AND LEFT(LT.DELIVERY_DATE,10)<=@endDate
		 ]]>
        </select>	
<!-- 项目结算结束 -->

<!-- 周材结算开始 -->
	 	<!--租赁费用 （倒扣租金）-->
	<select id="materials_current_rent_amount_backOff">
	<![CDATA[
		DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @CONTRACTID bigint
		DECLARE @DAYS INT
		
		SET @STARTDATE =?
		SET @ENDDATE =?
		SET @CONTRACTID = ?
		SET @DAYS = ?
		
		SELECT SUM(CASE WHEN T.OPERATION_WAY IN ('初始化','正常出租','项目间调拨入库','租借出租','项目维修入库','租借维修入库') 
		THEN CONVERT(DECIMAL(10,2),T.SUPPLEMENT_QUANTITY) 
		WHEN T.OPERATION_WAY IN ('正常回收','项目间调拨出库','退货管理','项目维修出库','租借维修出库','丢失赔偿出库') 
		THEN -CONVERT(DECIMAL(10,2),T.SUPPLEMENT_QUANTITY) END*CONVERT(DECIMAL(8,4),Y.DAILY_RENT)
		*(DATEDIFF(dd,CASE WHEN T.OPERATION_DATE>=@STARTDATE 
		AND T.OPERATION_DATE<=@ENDDATE THEN T.OPERATION_DATE
		WHEN T.OPERATION_DATE<@STARTDATE THEN @STARTDATE END,@ENDDATE)+@DAYS)) AS totalAmount
		FROM T_PRICE_SETTING Y,
		(SELECT *
		FROM T_PROJECT_DEPOT_IN_OUT 
		WHERE CONTRACT_ID=@CONTRACTID 
		AND OPERATION_WAY IN ('初始化','正常出租','项目间调拨入库','租借出租','项目维修入库','租借维修入库',
  		  '正常回收','项目间调拨出库','退货管理','项目维修出库','租借维修出库','丢失赔偿出库')
		) T
		WHERE Y.CONTRACTMA_ID = @CONTRACTID AND T.SPECIFICATIONS_ID=Y.SPECIFICATIONS_ID
	   ]]>
        </select>
	 	<!--租赁费用 （不倒扣租金）-->
	<select id="materials_current_rent_amount">
	<![CDATA[
		DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @CONTRACTID bigint
		DECLARE @DAYS INT
		
		SET @STARTDATE =?
		SET @ENDDATE =?
		SET @CONTRACTID = ?
		SET @DAYS = ?
		
		;WITH DATASET AS ((SELECT
				ROW_NUMBER() OVER (ORDER BY R.specificationsId,R.receiptDate,R.relateSerial,R.queryId) AS ROW,
				R.*
				FROM
						(SELECT 
						0 AS 'queryId',
						C.SPECIFICATIONS_ID AS 'specificationsId',
						NULL AS 'receiptDate',
						'上期结存' AS 'receiptType',
						NULL AS 'relateSerial',
						NULL AS 'operationWay',
						SUM(CASE WHEN C.OPERATION_WAY IN ('初始化','正常出租','项目间调拨入库','租借出租','项目维修入库','租借维修入库') THEN CONVERT(DECIMAL(10,2),C.SUPPLEMENT_QUANTITY)
						WHEN C.OPERATION_WAY IN('正常回收','项目间调拨出库','退货管理','项目维修出库','租借维修出库','丢失赔偿出库') THEN -CONVERT(DECIMAL(10,2),C.SUPPLEMENT_QUANTITY) END) 'supplementQuantity',
						B.DAILY_RENT AS 'dailyRent',
						DATEDIFF(dd,@STARTDATE,@ENDDATE)+@DAYS AS 'days'
						FROM T_PRICE_SETTING B,T_MATERIALS_SPECIFICATIONS A,
						(SELECT *
						FROM T_PROJECT_DEPOT_IN_OUT 
						WHERE CONTRACT_ID=@CONTRACTID 
						AND OPERATION_DATE<@STARTDATE
						AND QUANTITY<>0
						AND OPERATION_WAY IN ('初始化','正常出租','项目间调拨入库','租借出租','项目维修入库','租借维修入库',
  						  '正常回收','项目间调拨出库','退货管理','项目维修出库','租借维修出库','丢失赔偿出库')
						) C
						WHERE B.CONTRACTMA_ID = @CONTRACTID 
						AND C.SPECIFICATIONS_ID=B.SPECIFICATIONS_ID 
						AND C.SPECIFICATIONS_ID=A.SPECIFICATIONS_ID
						GROUP BY C.SPECIFICATIONS_ID,C.COMMODITY,C.SPECIFICATIONS,C.UNIT,A.SECOND_UNIT_CONVERSION,B.DAILY_RENT,A.SECOND_CONVERTED_QUANTITY	
						UNION ALL
						SELECT 
						T.QUERY_ID AS 'queryId',
						T.SPECIFICATIONS_ID 'specificationsId',	
						T.OPERATION_DATE 'receiptDate',
						T.RELATE_MODULE_NAME 'receiptType',
						T.RELATE_SERIAL 'relateSerial',
						T.OPERATION_WAY 'operationWay',
						CONVERT(DECIMAL(10,2),T.SUPPLEMENT_QUANTITY) 'supplementQuantity',
						Y.DAILY_RENT 'dailyRent',
						DATEDIFF(dd,T.OPERATION_DATE,@ENDDATE)+@DAYS 'days'
						FROM T_PRICE_SETTING Y,T_MATERIALS_SPECIFICATIONS X,
						(SELECT *
						FROM T_PROJECT_DEPOT_IN_OUT 
						WHERE CONTRACT_ID=@CONTRACTID 
						AND OPERATION_DATE>=@STARTDATE 
						AND OPERATION_DATE<=@ENDDATE 
						AND QUANTITY<>0
						AND OPERATION_WAY IN ('初始化','正常出租','项目间调拨入库','租借出租','项目维修入库','租借维修入库',
  						  '正常回收','项目间调拨出库','退货管理','项目维修出库','租借维修出库','丢失赔偿出库')
						) T
						WHERE Y.CONTRACTMA_ID = @CONTRACTID 
						AND T.SPECIFICATIONS_ID=Y.SPECIFICATIONS_ID 
						AND T.SPECIFICATIONS_ID=X.SPECIFICATIONS_ID) R)),
		QUERY AS
		(SELECT
		G.*, 
		(SELECT SUM(CASE WHEN P.receiptType='上期结存' THEN P.supplementQuantity
					WHEN P.operationWay='初始化' THEN P.supplementQuantity
					WHEN P.operationWay='正常出租' THEN P.supplementQuantity
					WHEN P.operationWay='项目间调拨入库' THEN P.supplementQuantity
					WHEN P.operationWay='租借出租' THEN P.supplementQuantity
					WHEN P.operationWay='项目维修入库' THEN P.supplementQuantity
					WHEN P.operationWay='租借维修入库' THEN P.supplementQuantity
					WHEN P.operationWay='项目维修出库' THEN -P.supplementQuantity
					WHEN P.operationWay='租借维修出库' THEN -P.supplementQuantity
					WHEN P.operationWay='正常回收' THEN -P.supplementQuantity
					WHEN P.operationWay='丢失赔偿出库' THEN -P.supplementQuantity
					WHEN P.operationWay='项目间调拨出库' THEN -P.supplementQuantity
					WHEN P.operationWay='退货管理' THEN -P.supplementQuantity
					ELSE 0 END) FROM dataSet
				 P WHERE P.ROW<=G.ROW AND P.specificationsId=G.specificationsId) AS [totalRent]
				FROM DATASET G)
		SELECT SUM(CASE 
			 WHEN T1.receiptType='上期结存' AND T1.supplementQuantity<=0 THEN 0
			 WHEN T1.receiptType='上期结存' AND T1.supplementQuantity>0 THEN CONVERT(DECIMAL(16,4),T1.supplementQuantity)*CONVERT(DECIMAL(10,4),T1.dailyRent)*CONVERT(INT,T1.days)
			 WHEN (T1.ROW=1 OR T1.specificationsId<>T2.specificationsId) AND T1.operationWay IN ('正常回收','项目间调拨出库','退货管理','项目维修出库','租借维修出库','丢失赔偿出库') AND T1.totalRent>0
				THEN -CONVERT(DECIMAL(16,4),T1.supplementQuantity)*CONVERT(DECIMAL(10,4),T1.dailyRent)*CONVERT(INT,T1.days)
			 WHEN (T1.ROW=1 OR T1.specificationsId<>T2.specificationsId) AND T1.operationWay IN ('初始化','正常出租','项目间调拨入库','租借出租','项目维修入库','租借维修入库') AND T1.totalRent>0		  
				THEN CONVERT(DECIMAL(16,4),T1.supplementQuantity)*CONVERT(DECIMAL(10,4),T1.dailyRent)*CONVERT(INT,T1.days)
		
			 WHEN T1.specificationsId=T2.specificationsId AND T1.operationWay IN ('正常回收','项目间调拨出库','退货管理','项目维修出库','租借维修出库','丢失赔偿出库') AND T2.totalRent>0 AND T1.totalRent>=0 
				THEN -CONVERT(DECIMAL(16,4),T1.supplementQuantity)*CONVERT(DECIMAL(10,4),T1.dailyRent)*CONVERT(INT,T1.days)
			 WHEN T1.specificationsId=T2.specificationsId AND T1.operationWay IN ('正常回收','项目间调拨出库','退货管理','项目维修出库','租借维修出库','丢失赔偿出库') AND T2.totalRent>0 AND T1.totalRent<0 
				THEN -CONVERT(DECIMAL(16,4),T2.totalRent)*CONVERT(DECIMAL(10,4),T1.dailyRent)*CONVERT(INT,T1.days)
			 WHEN T1.specificationsId=T2.specificationsId AND T1.operationWay IN ('正常回收','项目间调拨出库','退货管理','项目维修出库','租借维修出库','丢失赔偿出库') AND T2.totalRent<=0 
				THEN 0
		
			 WHEN T1.specificationsId=T2.specificationsId AND T1.operationWay IN ('初始化','正常出租','项目间调拨入库','租借出租','项目维修入库','租借维修入库') AND T2.totalRent>=0 AND T1.totalRent>=0
				THEN CONVERT(DECIMAL(16,4),T1.supplementQuantity)*CONVERT(DECIMAL(10,4),T1.dailyRent)*CONVERT(INT,T1.days)
			 WHEN T1.specificationsId=T2.specificationsId AND T1.operationWay IN ('初始化','正常出租','项目间调拨入库','租借出租','项目维修入库','租借维修入库') AND T2.totalRent>=0 AND T1.totalRent<0
				THEN -CONVERT(DECIMAL(16,4),T2.totalRent)*CONVERT(DECIMAL(10,4),T1.dailyRent)*CONVERT(INT,T1.days)
			 WHEN T1.specificationsId=T2.specificationsId AND T1.operationWay IN ('初始化','正常出租','项目间调拨入库','租借出租','项目维修入库','租借维修入库') AND T2.totalRent<0 AND T1.totalRent>0
				THEN CONVERT(DECIMAL(16,4),T1.totalRent)*CONVERT(DECIMAL(10,4),T1.dailyRent)*CONVERT(INT,T1.days)
		     WHEN T1.specificationsId<>T2.specificationsId AND T1.totalRent<=0 THEN 0
			 ELSE 0 END) 'totalAmount'
		FROM QUERY T1 LEFT JOIN QUERY T2 ON T1.ROW=T2.ROW+1
	   ]]>
        </select>
	 	<!--损坏赔偿 -->
	<select id="damage_fee">
	<![CDATA[
		DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @CONTRACTID bigint
		SET @STARTDATE =?
		SET @ENDDATE = ?
		SET @CONTRACTID = ?
		
		SELECT SUM(CAST(TMF.DAMAGE_AMOUNT AS float)) totalAmount FROM T_RECYCLE_MANAGE TM 
		LEFT JOIN T_COMPENSATION_DAMAGE TMF ON TMF.RECYCLE_ID = TM.RECYCLE_ID
		WHERE TM.APPLYFOR_STATE = 3 AND TM.DEL_FLAG = 1 AND TM.CONTRACT_ID = @CONTRACTID 
		AND CONVERT(varchar(10), TM.RECYCLE_DATE, 23)>=@STARTDATE AND CONVERT(varchar(10), TM.RECYCLE_DATE, 23)<=@ENDDATE
		  ]]>
        </select>
	 	<!--装卸费用/打包费用 -->
	<select id="package_fee">
	<![CDATA[
		DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @CONTRACTID bigint
		DECLARE @CALMETHOD VARCHAR(32)
		DECLARE @FEETYPE VARCHAR(32)
		DECLARE @CHARGETYPE VARCHAR(32)
		SET @STARTDATE =?
		SET @ENDDATE = ?
		SET @CONTRACTID = ?
		SET @FEETYPE = ?
		SET @CHARGETYPE = ?
		
		SELECT SUM(A.amount) totalAmount FROM(
			--现场装车  装车费
			SELECT SUM(CAST(TCD.CHARGE_AMOUNT AS float)) amount FROM T_MATERIALS_PACKAGE TMP
			LEFT JOIN T_COST_DETAIL TCD ON  TMP.PACKAGE_ID = TCD.PACKAGE_ID
			WHERE TMP.APPLYFOR_STATE = 3 AND TMP.DEL_FLAG=1 AND TMP.CONTRACT_ID =@CONTRACTID AND TCD.FEES_TYPE=@FEETYPE
			AND CONVERT(varchar(10), TMP.PACKAGE_DATE, 23)>= @STARTDATE AND CONVERT(varchar(10), TMP.PACKAGE_DATE, 23)<=@ENDDATE
			AND TCD.CHARGE_MODE<>'1'
			UNION ALL
			--回收管理  卸车费
			SELECT SUM(CAST(TRF.CHARGE_AMOUNT AS float)) amount FROM T_RECYCLE_MANAGE TRM
			LEFT JOIN T_RECYCLE_MANAGE_FEE TRF ON TRM.RECYCLE_ID=TRF.RECYCLE_ID
			WHERE TRM.APPLYFOR_STATE = 3 AND TRM.DEL_FLAG=1 AND TRM.CONTRACT_ID=@CONTRACTID  AND TRF.CHARGE_TYPE=@CHARGETYPE
			AND CONVERT(varchar(10), TRM.RECYCLE_DATE, 23)>= @STARTDATE AND CONVERT(varchar(10), TRM.RECYCLE_DATE, 23)<=@ENDDATE
			AND TRF.CHARGE_WAY<>'1'
			UNION ALL
			--暂存退货  装车费
			SELECT SUM(CAST(CH.CHARGE_AMOUNT AS FLOAT)) amount FROM T_TEMPORARY_RETURN TR LEFT JOIN T_CHARGE_HANDLE CH ON TR.RETURN_ID = CH.RETURN_ID 
			WHERE TR.CONTRACT_ID=@CONTRACTID AND TR.APPLYFOR_STATE=3 AND TR.DEL_FLAG=1 AND CH.FEES_TYPE=@FEETYPE 
			AND TR.PACKAGE_DATE>=@STARTDATE AND TR.PACKAGE_DATE<=@ENDDATE
			AND CH.CHARGE_MODE<>'1'
		)A
		  ]]>
        </select>
        
     <!--丢失赔偿 -->
	<select id="lost_compensation">
	<![CDATA[
		DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @CONTRACTID bigint
		SET @STARTDATE =?
		SET @ENDDATE = ?
		SET @CONTRACTID = ?
		
		SELECT SUM(CAST(TLD.TOTAL_COSTS AS float)) totalAmount 
		FROM T_LOST_COMPENSATION TL 
		LEFT JOIN T_LOST_COMPENSATION_DETAIL TLD ON TL.LOST_ID = TLD.LOST_ID
		WHERE TL.APPLYFOR_STATE = 3 AND TL.DEL_FLAG=1 
		AND TL.CONTRACT_ID = @CONTRACTID 
		AND TL.COMPENSATION_DATE>=@STARTDATE 
		AND TL.COMPENSATION_DATE<=@ENDDATE
		  ]]>
        </select>
        <!--报停费用 -->
	<select id="cease_report_fee">
	<![CDATA[
	DECLARE @STARTDATE VARCHAR(32)
	DECLARE @ENDDATE VARCHAR(32)
	DECLARE @CONTRACTID bigint
	SET @STARTDATE =?
	SET @ENDDATE = ?
	SET @CONTRACTID = ?
	  SELECT SUM(CASE 
		 WHEN START_DATE>=@STARTDATE AND END_DATE<=@ENDDATE
		 THEN CONVERT(DECIMAL(12,2),SETTLED_AMOUNT)
		 WHEN START_DATE<@STARTDATE AND END_DATE>@ENDDATE 
		 THEN CONVERT(DECIMAL(12,2),(DATEDIFF(DD,@STARTDATE,@ENDDATE)*1.0)/DATEDIFF(DD,START_DATE,END_DATE)*CONVERT(decimal(10,2),SETTLED_AMOUNT))  
		 WHEN START_DATE>=@STARTDATE AND START_DATE<=@ENDDATE AND END_DATE>@ENDDATE 
		 THEN CONVERT(DECIMAL(12,2),(DATEDIFF(DD,START_DATE,@ENDDATE)*1.0)/DATEDIFF(DD,START_DATE,END_DATE)*CONVERT(decimal(10,2),SETTLED_AMOUNT)) 
		 WHEN END_DATE>=@STARTDATE AND END_DATE<=@ENDDATE AND START_DATE<@STARTDATE 
		 THEN CONVERT(DECIMAL(12,2),(DATEDIFF(DD,@STARTDATE,END_DATE)*1.0)/DATEDIFF(DD,START_DATE,END_DATE)*CONVERT(decimal(10,2),SETTLED_AMOUNT)) 
		 ELSE 0 END) AS totalAmount
	 FROM(
	SELECT * FROM T_CEASE_REPORT where status='1' 
	AND CONTRACT_ID=@CONTRACTID 
	AND ((START_DATE>=@STARTDATE AND START_DATE<=@ENDDATE)
	OR (END_DATE>=@STARTDATE AND END_DATE<=@ENDDATE)
	OR (START_DATE<=@STARTDATE AND END_DATE>=@ENDDATE))
 	) T
        ]]>
        </select>
     <!--其他业务 -->
	<select id="materials_other_fee">
	<![CDATA[
		DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @CONTRACTID bigint
		SET @STARTDATE =?
		SET @ENDDATE = ?
		SET @CONTRACTID = ?
		
		SELECT SUM(CASE WHEN TOBD.CALCULATION_METHOD=1 THEN -CONVERT(float,TOBD.FEE) 
					ELSE CONVERT(float,TOBD.FEE) END) totalAmount 
		FROM T_OTHER_BUSINESS TOB 
		LEFT JOIN T_OTHER_BUSINESS_DETAIL TOBD ON TOB.OTHER_BUSINESS_ID = TOBD.OTHER_BUSINESS_ID
		WHERE TOB.APPLYFOR_STATE = 3 AND TOB.DEL_FLAG=1 AND TOB.CONTRACT_ID = @CONTRACTID 
		AND TOB.CHARGEABLE_TIME>=@STARTDATE AND TOB.CHARGEABLE_TIME<=@ENDDATE
		  ]]>
        </select>
        
     <!--*******************************************周材结算***详细清单**************************************************************** -->
     <!--【周材结算】租赁费用清单 -->
	<select id="materials_current_rent_detail">
	<![CDATA[
		DECLARE @startDate VARCHAR(32)
		DECLARE @endDate VARCHAR(32)
		DECLARE @contractId bigint
		DECLARE @days INT
		DECLARE @detailCaculateTime VARCHAR(32)
		SET @startDate =?
		SET @endDate = ?
		SET @contractId = ?
		SET @days = ?
		SET @detailCaculateTime = ?
		
		SELECT 
		0 AS 'queryId',
		C.SPECIFICATIONS_ID AS 'specificationsId',
		A.SECOND_CONVERTED_QUANTITY AS 'conversionNum',
		NULL AS 'receiptDate',
		'上期结存' AS 'receiptType',
		NULL AS 'relateSerial',
		C.COMMODITY AS 'commodity',
		C.SPECIFICATIONS AS 'specifications',
		C.UNIT AS 'unit',
		NULL AS 'operationWay',
		@startDate AS 'beginDate',
		@endDate AS 'stopDate',
		SUM(CASE WHEN C.OPERATION_WAY IN ('初始化','正常出租','项目间调拨入库','租借出租','项目维修入库','租借维修入库') THEN CONVERT(INT,C.QUANTITY)
		WHEN C.OPERATION_WAY IN('正常回收','项目间调拨出库','退货管理','项目维修出库','租借维修出库','丢失赔偿出库') THEN -CONVERT(INT,C.QUANTITY) END) 'quantity', 
		A.SECOND_UNIT_CONVERSION AS 'supplementUnit',
		SUM(CASE WHEN C.OPERATION_WAY IN ('初始化','正常出租','项目间调拨入库','租借出租','项目维修入库','租借维修入库') THEN CONVERT(DECIMAL(10,2),C.SUPPLEMENT_QUANTITY)
		WHEN C.OPERATION_WAY IN('正常回收','项目间调拨出库','退货管理','项目维修出库','租借维修出库','丢失赔偿出库') THEN -CONVERT(DECIMAL(10,2),C.SUPPLEMENT_QUANTITY) END) 'supplementQuantity',
		B.DAILY_RENT AS 'dailyRent',
		DATEDIFF(dd,@startDate,@endDate)+@days AS 'days',
		SUM((CASE WHEN C.OPERATION_WAY IN ('初始化','正常出租','项目间调拨入库','租借出租','项目维修入库','租借维修入库') THEN CONVERT(DECIMAL(10,2),C.SUPPLEMENT_QUANTITY) 
		WHEN C.OPERATION_WAY IN ('正常回收','项目间调拨出库','退货管理','项目维修出库','租借维修出库','丢失赔偿出库') THEN -CONVERT(DECIMAL(10,2),C.SUPPLEMENT_QUANTITY) END)
		*CONVERT(DECIMAL(8,4),B.DAILY_RENT)*(DATEDIFF(dd,@startDate,@endDate)+@days)) 'rentAmount'
		FROM T_PRICE_SETTING B,T_MATERIALS_SPECIFICATIONS A,
		(SELECT *
		FROM T_PROJECT_DEPOT_IN_OUT 
		WHERE CONTRACT_ID=@contractId 
		AND OPERATION_DATE<@startDate
		AND (CREATE_TIME IS NULL OR @detailCaculateTime IS NULL OR CREATE_TIME<=@detailCaculateTime)
		AND QUANTITY<>0
		AND OPERATION_WAY IN ('初始化','正常出租','项目间调拨入库','租借出租','项目维修入库','租借维修入库',
		  '正常回收','项目间调拨出库','退货管理','项目维修出库','租借维修出库','丢失赔偿出库')
		) C
		WHERE B.CONTRACTMA_ID = @contractId 
		AND C.SPECIFICATIONS_ID=B.SPECIFICATIONS_ID 
		AND C.SPECIFICATIONS_ID=A.SPECIFICATIONS_ID
		GROUP BY C.SPECIFICATIONS_ID,C.COMMODITY,C.SPECIFICATIONS,C.UNIT,A.SECOND_UNIT_CONVERSION,B.DAILY_RENT,A.SECOND_CONVERTED_QUANTITY
		
		UNION ALL
		
		SELECT 
		T.QUERY_ID AS 'queryId',
		T.SPECIFICATIONS_ID 'specificationsId',	
		X.SECOND_CONVERTED_QUANTITY AS 'conversionNum',
		T.OPERATION_DATE 'receiptDate',
		T.RELATE_MODULE_NAME 'receiptType',
		T.RELATE_SERIAL 'relateSerial',
		T.COMMODITY 'commodity',
		T.SPECIFICATIONS 'specifications',
		T.UNIT 'unit',
		T.OPERATION_WAY 'operationWay',
		T.OPERATION_DATE 'beginDate',
		@endDate 'stopDate',
		T.QUANTITY 'quantity', 
		X.SECOND_UNIT_CONVERSION 'supplementUnit',
		CONVERT(DECIMAL(10,2),T.SUPPLEMENT_QUANTITY) 'supplementQuantity',
		Y.DAILY_RENT 'dailyRent',
		DATEDIFF(dd,T.OPERATION_DATE,@endDate)+@days 'days',
		(CASE WHEN T.OPERATION_WAY IN ('初始化','正常出租','项目间调拨入库','租借出租','项目维修入库','租借维修入库') THEN CONVERT(DECIMAL(10,2),T.SUPPLEMENT_QUANTITY) 
		WHEN T.OPERATION_WAY IN ('正常回收','项目间调拨出库','退货管理','项目维修出库','租借维修出库','丢失赔偿出库') THEN -CONVERT(DECIMAL(10,2),T.SUPPLEMENT_QUANTITY) END)
		*CONVERT(DECIMAL(8,4),Y.DAILY_RENT)*(DATEDIFF(dd,T.OPERATION_DATE,@endDate)+@days) 'rentAmount'
		FROM T_PRICE_SETTING Y,T_MATERIALS_SPECIFICATIONS X,
		(SELECT *
		FROM T_PROJECT_DEPOT_IN_OUT 
		WHERE CONTRACT_ID=@contractId 
		AND OPERATION_DATE>=@startDate 
		AND OPERATION_DATE<=@endDate 
		AND (CREATE_TIME IS NULL OR @detailCaculateTime IS NULL OR CREATE_TIME<=@detailCaculateTime)
		AND QUANTITY<>0
		AND OPERATION_WAY IN ('初始化','正常出租','项目间调拨入库','租借出租','项目维修入库','租借维修入库',
		  '正常回收','项目间调拨出库','退货管理','项目维修出库','租借维修出库','丢失赔偿出库')
		) T
		WHERE Y.CONTRACTMA_ID = @contractId 
		AND T.SPECIFICATIONS_ID=Y.SPECIFICATIONS_ID 
		AND T.SPECIFICATIONS_ID=X.SPECIFICATIONS_ID
		ORDER BY specificationsId,receiptDate,relateSerial,queryId ASC
		 ]]>
        </select>
        	
     <!--【周材结算】丢失赔偿清单 -->
	<select id="lost_compensation_detail">
	<![CDATA[
			DECLARE @startDate VARCHAR(32)
		DECLARE @endDate VARCHAR(32)
		DECLARE @contractId bigint
			DECLARE @detailCaculateTime VARCHAR(32)
		SET @startDate =?
		SET @endDate = ?
		SET @contractId = ?
				SET @detailCaculateTime = ?
				
		SELECT 
		TL.COMPENSATION_DATE 'receiptDate',
		'丢失赔偿' AS 'receiptType',
		TL.LOST_SERIAL 'relateSerial',
		TLD.COMMODITY 'commodity',
		TLD.SPECIFICATIONS 'specifications',
		TLD.UNIT 'unit',
		TLD.LOST_QUANTITY 'quantity',
		TLD.SUPPLEMENT_UNIT 'supplementUnit',
		TLD.SUPPLEMENT_QUANTITY 'supplementQuantity',
		TLD.COMPENSATION_COSTS 'compensationUnit',
		TLD.TOTAL_COSTS 'amount'
		FROM T_LOST_COMPENSATION TL 
		LEFT JOIN T_LOST_COMPENSATION_DETAIL TLD ON TL.LOST_ID = TLD.LOST_ID
		WHERE TL.APPLYFOR_STATE=3 AND TL.DEL_FLAG=1 AND TL.CONTRACT_ID = @contractId 
		AND CONVERT(varchar(10), TL.COMPENSATION_DATE, 23)>=@startDate AND CONVERT(varchar(10), TL.COMPENSATION_DATE, 23)<=@endDate AND TLD.LOST_QUANTITY<>'0'
		AND (@detailCaculateTime IS NULL OR TL.APPLY_DATE<=@detailCaculateTime)
		ORDER BY TLD.SPECIFICATIONS_ID,TL.COMPENSATION_DATE
		  ]]>
        </select>
        
     <!--【周材结算】损坏赔偿清单 -->
	<select id="compensation_damage_detail">
	<![CDATA[
		DECLARE @startDate VARCHAR(32)
		DECLARE @endDate VARCHAR(32)
		DECLARE @contractId bigint
		DECLARE @detailCaculateTime VARCHAR(32)
		SET @startDate =?
		SET @endDate = ?
		SET @contractId = ?
		SET @detailCaculateTime=?
		SELECT 
		TM.RECYCLE_DATE 'receiptDate',
		'损坏赔偿' AS 'receiptType',
		TM.RECYCLE_SERIAL 'relateSerial',
		TMF.COMMODITY 'commodity',
		TMF.DAMAGE_TYPE 'damageType',
		TMF.MEASUREMENT_UNIT 'unit',
		TMF.QUANTITY 'quantity',
		NULL 'supplementUnit',
		NULL 'supplementQuantity',
		TMF.DAMAGE_UNIT_PRICE 'compensationUnit',
		TMF.DAMAGE_AMOUNT 'amount'
		FROM T_RECYCLE_MANAGE TM 
		LEFT JOIN T_COMPENSATION_DAMAGE TMF ON TMF.RECYCLE_ID = TM.RECYCLE_ID 
		WHERE TM.APPLYFOR_STATE=3 AND TM.DEL_FLAG=1 AND TM.CONTRACT_ID = @contractId 
		AND (@detailCaculateTime IS NULL OR TM.APPLY_DATE<=@detailCaculateTime)
		AND CONVERT(varchar(10), TM.RECYCLE_DATE, 23)>=@startDate AND CONVERT(varchar(10), TM.RECYCLE_DATE, 23)<=@endDate AND TMF.QUANTITY<>'0';
		  ]]>
        </select>
        
     <!--【周材结算】装卸费用清单 -->
	<select id="handing_fee_detail">
	<![CDATA[
		DECLARE @startDate VARCHAR(32)
		DECLARE @endDate VARCHAR(32)
		DECLARE @contractId bigint
			DECLARE @effectiveTime VARCHAR(32)
		SET @startDate =?
		SET @endDate = ?
		SET @contractId = ?
			SET @effectiveTime=?
        SELECT 
		TMP.PACKAGE_DATE 'receiptDate',
		'现场装车' AS 'receiptType',
		TMP.PACKAGE_SERIAL 'relateSerial',
		TCD.COMMODITY 'commodity',
		NULL 'specifications',
		TA.MEASUREMENT_UNIT 'unit',
		TCD.CHARGE_QUANTITY 'quantity',
		NULL 'supplementUnit',
		NULL 'supplementQuantity',
		TCD.CHARGE_UNIT_PRICE 'compensationUnit',
		TCD.CHARGE_AMOUNT 'amount'
		FROM T_MATERIALS_PACKAGE TMP
		LEFT JOIN T_COST_DETAIL TCD ON  TMP.PACKAGE_ID = TCD.PACKAGE_ID
		LEFT JOIN T_MATERIALS_COMMODITY TMC ON TCD.COMMODITY=TMC.COMMODITY
		LEFT JOIN T_ASSEMBLE_AND_DISASSEMBLE_FEE TA ON TCD.FEES_TYPE = TA.FEES_TYPE 
		AND TCD.FEE_CATEGORY = TA.FEE_CATEGORY AND TMC.COMMODITY_ID = TA.COMMODITY_ID
		WHERE TMP.APPLYFOR_STATE=3 AND TMP.DEL_FLAG=1 AND TMP.CONTRACT_ID =@contractId 
		AND LEFT(TMP.PACKAGE_DATE,10)>= @startDate AND LEFT(TMP.PACKAGE_DATE,10)<=@endDate 
		AND TCD.FEES_TYPE =1 AND TMP.RENT_TYPE='0' AND TCD.CHARGE_MODE<>'1'
		AND (@effectiveTime IS NULL OR TMP.APPLY_DATE<=@effectiveTime)
		
		UNION ALL
		SELECT 
		TRM.RECYCLE_DATE 'receiptDate',
		'回收管理' AS 'receiptType',
		TRM.RECYCLE_SERIAL 'relateSerial',
		TRF.COMMODITY 'commodity',
		NULL 'specifications',
		TA.MEASUREMENT_UNIT 'unit',
		TRF.CHARGE_QUANTITY 'quantity',
		NULL 'supplementUnit',
		NULL 'supplementQuantity',
		TRF.CHARGE_PRICE 'compensationUnit',
		TRF.CHARGE_AMOUNT 'amount'
		FROM T_RECYCLE_MANAGE TRM
		LEFT JOIN T_RECYCLE_MANAGE_FEE TRF ON TRM.RECYCLE_ID=TRF.RECYCLE_ID
		LEFT JOIN T_MATERIALS_COMMODITY TMC ON TRF.COMMODITY=TMC.COMMODITY
		LEFT JOIN T_ASSEMBLE_AND_DISASSEMBLE_FEE TA ON  TRF.FEE_CATEGORY = TA.FEE_CATEGORY AND TMC.COMMODITY_ID = TA.COMMODITY_ID 
		AND TA.FEES_TYPE=2 WHERE TRM.APPLYFOR_STATE=3 AND TRM.DEL_FLAG=1 AND TRM.CONTRACT_ID=@contractId 
		AND CONVERT(varchar(10), TRM.RECYCLE_DATE, 23)>= @startDate AND CONVERT(varchar(10), TRM.RECYCLE_DATE, 23)<=@endDate 
		AND TRF.CHARGE_TYPE ='卸车费' AND TRF.CHARGE_WAY<>'1'
		AND (@effectiveTime IS NULL OR TRM.APPLY_DATE<=@effectiveTime)
		
		UNION ALL
		SELECT 
		TR.PACKAGE_DATE 'receiptDate',
		'暂存退货' AS 'receiptType',
		TR.RETURN_SERIAL 'relateSerial',
		CH.COMMODITY 'commodity',
		NULL 'specifications',
		TA.MEASUREMENT_UNIT 'unit',
		CH.CHARGE_QUANTITY 'quantity',
		NULL 'supplementUnit',
		NULL 'supplementQuantity',
		CH.CHARGE_UNIT_PRICE 'compensationUnit',
		CH.CHARGE_AMOUNT 'amount'
		FROM T_TEMPORARY_RETURN TR 
		LEFT JOIN T_CHARGE_HANDLE CH ON TR.RETURN_ID = CH.RETURN_ID 
		LEFT JOIN T_MATERIALS_COMMODITY TMC ON CH.COMMODITY=TMC.COMMODITY
 		LEFT JOIN T_ASSEMBLE_AND_DISASSEMBLE_FEE TA ON TMC.COMMODITY_ID = TA.COMMODITY_ID AND TA.FEES_TYPE =1 
		WHERE TR.CONTRACT_ID=@contractId AND TR.APPLYFOR_STATE=3 AND TR.DEL_FLAG=1 AND CH.FEES_TYPE =1 
		AND TR.PACKAGE_DATE>=@startDate AND TR.PACKAGE_DATE<=@endDate AND CH.CHARGE_MODE<>'1'
		AND (@effectiveTime IS NULL OR TR.APPLY_DATE<=@effectiveTime)
		]]>
        </select>
        
         <!--【周材结算】包装费用清单 -->
	<select id="package_fee_detail">
	<![CDATA[
		DECLARE @startDate VARCHAR(32)
		DECLARE @endDate VARCHAR(32)
		DECLARE @contractId bigint
		DECLARE @effectiveTime VARCHAR(32)
		SET @startDate =?
		SET @endDate = ?
		SET @contractId = ?
	    SET @effectiveTime=?
        SELECT 
		TMP.PACKAGE_DATE 'receiptDate',
		'现场装车' AS 'receiptType',
		TMP.PACKAGE_SERIAL 'relateSerial',
		TCD.COMMODITY 'commodity',
		NULL 'specifications',
		TA.MEASUREMENT_UNIT 'unit',
		TCD.CHARGE_QUANTITY 'quantity',
		NULL 'supplementUnit',
		NULL 'supplementQuantity',
		TCD.CHARGE_UNIT_PRICE 'compensationUnit',
		TCD.CHARGE_AMOUNT 'amount'
		FROM T_MATERIALS_PACKAGE TMP
		LEFT JOIN T_COST_DETAIL TCD ON  TMP.PACKAGE_ID = TCD.PACKAGE_ID
		LEFT JOIN T_MATERIALS_COMMODITY TMC ON TCD.COMMODITY=TMC.COMMODITY
		LEFT JOIN T_ASSEMBLE_AND_DISASSEMBLE_FEE TA ON TCD.FEES_TYPE = TA.FEES_TYPE 
		AND TCD.FEE_CATEGORY = TA.FEE_CATEGORY AND TMC.COMMODITY_ID = TA.COMMODITY_ID
		WHERE TMP.APPLYFOR_STATE=3 AND TMP.DEL_FLAG=1 AND TMP.CONTRACT_ID =@contractId 
		AND LEFT(TMP.PACKAGE_DATE,10)>= @startDate AND LEFT(TMP.PACKAGE_DATE,10)<=@endDate 
		AND TCD.FEES_TYPE =3 AND TMP.RENT_TYPE='0' AND TCD.CHARGE_MODE<>'1'
		AND (@effectiveTime IS NULL OR TMP.APPLY_DATE<=@effectiveTime)
		
		UNION ALL
		
		SELECT 
		TRM.RECYCLE_DATE 'receiptDate',
		'回收管理' AS 'receiptType',
		TRM.RECYCLE_SERIAL 'relateSerial',
		TRF.COMMODITY 'commodity',
		NULL 'specifications',
		TA.MEASUREMENT_UNIT 'unit',
		TRF.CHARGE_QUANTITY 'quantity',
		NULL 'supplementUnit',
		NULL 'supplementQuantity',
		TRF.CHARGE_PRICE 'compensationUnit',
		TRF.CHARGE_AMOUNT 'amount'
		FROM T_RECYCLE_MANAGE TRM
		LEFT JOIN T_RECYCLE_MANAGE_FEE TRF ON TRM.RECYCLE_ID=TRF.RECYCLE_ID
		LEFT JOIN T_MATERIALS_COMMODITY TMC ON TRF.COMMODITY=TMC.COMMODITY
		LEFT JOIN T_ASSEMBLE_AND_DISASSEMBLE_FEE TA ON TRF.FEE_CATEGORY = TA.FEE_CATEGORY AND TMC.COMMODITY_ID = TA.COMMODITY_ID
		AND TA.FEES_TYPE=3 WHERE TRM.APPLYFOR_STATE=3 AND TRM.DEL_FLAG=1 AND TRM.CONTRACT_ID=@contractId 
		AND CONVERT(varchar(10), TRM.RECYCLE_DATE, 23)>= @startDate AND CONVERT(varchar(10), TRM.RECYCLE_DATE, 23)<=@endDate 
		AND TRF.CHARGE_TYPE ='打包费' AND TRF.CHARGE_WAY<>'1'
		AND (@effectiveTime IS NULL OR TRM.APPLY_DATE<=@effectiveTime)
		 ]]>
      </select>
      
         <!--【周材结算】报停费用清单 -->
		<select id="cease_report_fee_detail">
			<![CDATA[
			DECLARE @startDate VARCHAR(32)
			DECLARE @endDate VARCHAR(32)
			DECLARE @contractId bigint
			DECLARE @effectiveTime VARCHAR(32)
			SET @startDate =?
			SET @endDate = ?
			SET @contractId = ?
		    SET @effectiveTime=?
			
			SELECT 
			CR.CEASE_ID AS 'ceaseId',
			CR.CEASE_TITLE AS 'ceaseTitle',
			CR.CEASE_SERIAL AS 'ceaseSerial',
			CM.PROJECT_NAME AS 'projectName',
			CM.PA_ENT_NAME AS 'paEntName',
			CR.SETTLED_AMOUNT AS 'settledAmount',
			CR.START_DATE AS 'startDate',
			CR.END_DATE AS 'endDate'
			 FROM T_CEASE_REPORT CR,T_CONTRACT_MATERIALS CM WHERE CR.CONTRACT_ID=CM.CONTRACTMA_ID AND status='1' 
			AND CONTRACT_ID=@contractId 
			AND ((START_DATE>=@startDate AND START_DATE<=@endDate)
			OR (END_DATE>=@startDate AND END_DATE<=@endDate)
			OR (START_DATE<=@startDate AND END_DATE>=@endDate))
			AND (@effectiveTime IS NULL OR CR.APPLY_DATE<=@effectiveTime)
	        ]]>
       	</select>
            <!--【周材结算】其他费用清单 -->
      <select id="materials_other_fee_detail">
	<![CDATA[
		DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @CONTRACTID bigint
		DECLARE @effectiveTime VARCHAR(32)
		SET @STARTDATE =?
		SET @ENDDATE = ?
		SET @CONTRACTID = ?
		SET @effectiveTime=?
					
		SELECT 
		TOB.CHARGEABLE_TIME 'receiptDate',
		'其他业务' AS 'receiptType',
		TOB.OTHER_BUSINESS_SERIAL 'relateSerial',
		BD.DEPOT_NAME 'depotName',
		BM.VALUE 'feesType',
		(CASE WHEN TOBD.CALCULATION_METHOD= 0 THEN '相加' WHEN TOBD.CALCULATION_METHOD= 1 THEN '相减' END) 'calculationMethod',
		TOBD.FEE 'amount'
		FROM T_OTHER_BUSINESS TOB 
		LEFT JOIN T_OTHER_BUSINESS_DETAIL TOBD ON TOB.OTHER_BUSINESS_ID = TOBD.OTHER_BUSINESS_ID
		LEFT JOIN T_BASE_DEPOT BD ON BD.DEPOT_ID=TOB.DEPOT_ID
		LEFT JOIN BM_FEES_TYPE BM ON BM.CODE=TOBD.FEES_TYPE
		WHERE TOB.APPLYFOR_STATE = 3 AND TOB.DEL_FLAG=1 AND TOB.CONTRACT_ID = @CONTRACTID 
		AND CONVERT(varchar(10), TOB.CHARGEABLE_TIME, 23)>=@STARTDATE AND CONVERT(varchar(10), TOB.CHARGEABLE_TIME, 23)<=@ENDDATE
		AND (@effectiveTime IS NULL OR TOB.APPLY_DATE IS NULL OR TOB.APPLY_DATE<=@effectiveTime)
		  ]]>
        </select>
        
        <!--******************************************************租借结算*******************************************************************-->
        
        <!-- 租借结算   上期结存-->
	<select id="initialInventory_materials">
	<![CDATA[
	DECLARE @START_DATE VARCHAR(64) 
	DECLARE @LEASE_ID BIGINT 
	SET @START_DATE=?
	SET @LEASE_ID=?
SELECT
T.COMMODITY_ID AS commodityId,
T.SPECIFICATIONS_ID AS specificationsId,
T.COMMODITY AS commodity,
T.SPECIFICATIONS AS specifications,
T.MEASUREMENT_UNIT AS measurementUnit,
T.ASSIST_UNIT AS unitConversion, 
SUM(T.QUANTITY) AS quantity,
T.COEFFICIENT AS convertedQuantity
FROM (
	--收货管理
	SELECT 
	B.COMMODITY_ID,
	B.SPECIFICATIONS_ID,
	B.COMMODITY,
	B.SPECIFICATIONS,
	B.MEASUREMENT_UNIT, 
	B.ASSIST_UNIT, 
	CONVERT(INT,B.RECIPIENT_QUANTITY) [QUANTITY],
	B.COEFFICIENT
	FROM T_GOODS_RECIPIENT A,T_RECIPIENT_LIST B WHERE A.RECIPIENT_ID=B.RECIPIENT_ID AND A.STATUS=3 
	AND A.DEL_FLAG=1 AND A.LEASE_ID=@LEASE_ID AND A.DELIVERY_DATE<@START_DATE
	UNION ALL
	--退货管理
	SELECT 
	B.COMMODITY_ID,
	B.SPECIFICATIONS_ID,
	B.COMMODITY,
	B.SPECIFICATIONS,
	B.MEASUREMENT_UNIT, 
	B.ASSIST_UNIT, 
	-CONVERT(INT,B.RETURN_QUANTITY) [QUANTITY],
	B.COEFFICIENT
	FROM T_RETURN_GOODS A,T_RETURN_LIST B WHERE A.RETURN_ID=B.RETURN_ID AND A.STATUS=3 
	AND A.DEL_FLAG=1 AND A.LEASE_ID=@LEASE_ID AND A.RETURN_DATE<@START_DATE
	UNION ALL
	--租借维修出库
	SELECT
	MC.COMMODITY_ID,
	BF.SPECIFICATIONS_ID,
	MC.COMMODITY,
	MS.SPECIFICATIONS,
	MS.FIRST_UNIT_CONVERSION AS MEASUREMENT_UNIT,
	MS.SECOND_UNIT_CONVERSION AS ASSIST_UNIT,
	-CONVERT(INT,REPAIR_QUANTITY) [QUANTITY],
	MS.SECOND_CONVERTED_QUANTITY AS COEFFICIENT
	FROM T_LEASE_REPAIR LR LEFT JOIN T_LEASE_REPAIR_BEFORE BF ON LR.REPAIR_ID = BF.REPAIR_ID
	LEFT JOIN T_MATERIALS_SPECIFICATIONS MS ON BF.SPECIFICATIONS_ID = MS.SPECIFICATIONS_ID
	LEFT JOIN T_MATERIALS_COMMODITY MC ON MC.COMMODITY_ID = MS.COMMODITY_ID
	WHERE LR.LEASE_ID = @LEASE_ID AND LR.STATUS = '3'  AND LR.DEL_FLAG=1 AND LR.REPAIR_DATE<@START_DATE
	UNION ALL
	--租借维修入库
	SELECT
	MC.COMMODITY_ID,
	AF.SPECIFICATIONS_ID,
	MC.COMMODITY,
	MS.SPECIFICATIONS,
	MS.FIRST_UNIT_CONVERSION AS MEASUREMENT_UNIT,
	MS.SECOND_UNIT_CONVERSION AS ASSIST_UNIT,
	CONVERT(INT,REPAIR_QUANTITY) [QUANTITY],
	MS.SECOND_CONVERTED_QUANTITY AS COEFFICIENT
	FROM T_LEASE_REPAIR LR LEFT JOIN T_LEASE_REPAIR_AFTER AF ON LR.REPAIR_ID = AF.REPAIR_ID
	LEFT JOIN T_MATERIALS_SPECIFICATIONS MS ON AF.SPECIFICATIONS_ID = MS.SPECIFICATIONS_ID
	LEFT JOIN T_MATERIALS_COMMODITY MC ON MC.COMMODITY_ID = MS.COMMODITY_ID
	WHERE LR.LEASE_ID = @LEASE_ID AND LR.STATUS = '3'  AND LR.DEL_FLAG=1 AND LR.REPAIR_DATE<@START_DATE
	UNION ALL
	--租借丢失赔偿
	SELECT 
	MC.COMMODITY_ID,
	LCD.SPECIFICATIONS_ID,
	MC.COMMODITY,
	MS.SPECIFICATIONS,
	MS.FIRST_UNIT_CONVERSION AS MEASUREMENT_UNIT,
	MS.SECOND_UNIT_CONVERSION AS ASSIST_UNIT, 
	-CONVERT(INT,LCD.LOST_QUANTITY) [QUANTITY],
	MS.SECOND_CONVERTED_QUANTITY AS COEFFICIENT
	FROM T_LEASED_LOST_COMPENSATION LC 
	LEFT JOIN T_LEASED_LOST_COMPENSATION_DETAIL LCD ON LC.LOST_ID = LCD.LOST_ID 
	LEFT JOIN T_MATERIALS_SPECIFICATIONS MS ON LCD.SPECIFICATIONS_ID = MS.SPECIFICATIONS_ID
	LEFT JOIN T_MATERIALS_COMMODITY MC ON MS.COMMODITY_ID = MC.COMMODITY_ID
	WHERE LC.APPLYFOR_STATE=3 AND LC.DEL_FLAG=1 AND LC.LEASE_ID=@LEASE_ID
	AND LC.COMPENSATION_DATE<@START_DATE
) T
GROUP BY T.COMMODITY_ID,T.SPECIFICATIONS_ID,T.COMMODITY,T.SPECIFICATIONS,T.MEASUREMENT_UNIT,T.ASSIST_UNIT,T.COEFFICIENT
ORDER BY T.SPECIFICATIONS_ID
	]]>
	</select>
	
	<!-- 租借结算清单（用于批量新增）-->
	<select id="batch_settlement_list">
	<![CDATA[
		DECLARE @START_DATE VARCHAR(10)
		DECLARE @END_DATE VARCHAR(10)
		DECLARE @LEASE_ID BIGINT
		DECLARE @DAYS INT
		
		SET @START_DATE = ?
		SET @END_DATE =?
		SET @LEASE_ID = ?
		SET @DAYS = ?
		
		SELECT
		MSC.SPECIFICATIONS_ID AS 'specificationsId',
		MSC.SPECIFICATIONS AS 'specifications',
		MSC.COMMODITY_ID AS 'commodityId',
		MSC.COMMODITY AS 'commodity',
		MSC.UNIT AS 'measurementUnit',
		MSC.SUPPLEMENT_UNIT AS 'unitConversion',
		MSC.CONVERT_NUM AS 'convertedQuantity',
		MSC.END_DATE AS 'stopDate',
		MSC.DAILY_RENT AS 'dailyRent',
		RECEIPT_TYPE AS 'receiptType',
		QUANTITY AS 'quantity',
		CONVERT(DECIMAL(10,2), QUANTITY*CONVERT(DECIMAL(10,3),CONVERT_NUM)) AS 'auxiliaryNum',
		SUBSTRING(RECEIPT_DATE,0,11) AS 'receiptDate',
		SUBSTRING(BEGIN_DATE,0,11) AS 'beginDate',
		RELATE_SERIAL AS 'relateSerial',
		DATEDIFF(dd,BEGIN_DATE,END_DATE)+@DAYS AS 'conversionDays',
		(CASE WHEN RECEIPT_TYPE IN ('上期结存','收货管理','租借维修入库') THEN
			CONVERT(DECIMAL(15,3),QUANTITY*CONVERT(DECIMAL(15,5),MSC.CONVERT_NUM)*(DATEDIFF(dd,BEGIN_DATE,END_DATE)+@DAYS)*MSC.DAILY_RENT)
					WHEN RECEIPT_TYPE IN ('退货管理','租借维修出库','租借丢失赔偿') THEN 
			CONVERT(DECIMAL(15,3),-1*QUANTITY*CONVERT(DECIMAL(15,5),MSC.CONVERT_NUM)*(DATEDIFF(dd,BEGIN_DATE,END_DATE)+@DAYS)*MSC.DAILY_RENT)
		ELSE 0 END)AS 'amount',
		MSC.DAILY_RENT_INSIDE AS 'dailyRent_inside',
		(CASE WHEN RECEIPT_TYPE IN ('上期结存','收货管理','租借维修入库') THEN
			CONVERT(DECIMAL(15,3),QUANTITY*CONVERT(DECIMAL(15,5),MSC.CONVERT_NUM)*(DATEDIFF(dd,BEGIN_DATE,END_DATE)+@DAYS)*MSC.DAILY_RENT_INSIDE)
					WHEN RECEIPT_TYPE IN ('退货管理','租借维修出库','租借丢失赔偿') THEN 
			CONVERT(DECIMAL(15,3),-1*QUANTITY*CONVERT(DECIMAL(15,5),MSC.CONVERT_NUM)*(DATEDIFF(dd,BEGIN_DATE,END_DATE)+@DAYS)*MSC.DAILY_RENT_INSIDE)
		ELSE 0 END) AS 'amount_inside'	
		FROM
		(SELECT 
			MS.SPECIFICATIONS_ID,
			MS.SPECIFICATIONS,
			MS.COMMODITY_ID,
			MC.COMMODITY,
			FIRST_UNIT_CONVERSION AS UNIT,
			SECOND_UNIT_CONVERSION AS SUPPLEMENT_UNIT,
			SECOND_CONVERTED_QUANTITY AS CONVERT_NUM,
			@END_DATE AS END_DATE,
			LPS.DAILY_RENT,
			MC.DAILY_RENT AS DAILY_RENT_INSIDE
			FROM T_LEASE_CONTRACT LC 
			LEFT JOIN T_LEASE_PRICE_SETTING LPS ON LC.LEASE_ID = LPS.LEASE_ID 
			LEFT JOIN T_MATERIALS_SPECIFICATIONS MS ON LPS.SPECIFICATIONS_ID = MS.SPECIFICATIONS_ID
			LEFT JOIN T_MATERIALS_COMMODITY MC ON MS.COMMODITY_ID = MC.COMMODITY_ID
			WHERE LC.LEASE_ID = @LEASE_ID AND LC.STATUS >= '3') AS MSC
		LEFT JOIN
		( SELECT
			SPECIFICATIONS_ID,
			'上期结存' AS RECEIPT_TYPE,
			SUM(T.QUANTITY) AS QUANTITY,
			@START_DATE AS BEGIN_DATE,
			NULL AS RECEIPT_DATE,
			NULL AS RELATE_SERIAL
			FROM (
				--收货管理
				SELECT 
				B.SPECIFICATIONS_ID,
				CONVERT(INT,B.RECIPIENT_QUANTITY) 'QUANTITY'
				FROM T_GOODS_RECIPIENT A,T_RECIPIENT_LIST B WHERE A.RECIPIENT_ID=B.RECIPIENT_ID AND A.STATUS=3
				AND A.DEL_FLAG=1 AND A.LEASE_ID=@LEASE_ID AND A.DELIVERY_DATE<@START_DATE
				UNION ALL
				--退货管理
				SELECT 
				B.SPECIFICATIONS_ID,
				-CONVERT(INT,B.RETURN_QUANTITY) 'QUANTITY'
				FROM T_RETURN_GOODS A,T_RETURN_LIST B WHERE A.RETURN_ID=B.RETURN_ID AND A.STATUS=3 AND A.DEL_FLAG=1
				AND A.LEASE_ID=@LEASE_ID AND SUBSTRING(A.RETURN_DATE,0,11)<@START_DATE
				UNION ALL
				--租借维修前
				SELECT
				SPECIFICATIONS_ID,
				-CONVERT(INT,REPAIR_QUANTITY) 'QUANTITY'
				FROM T_LEASE_REPAIR LR LEFT JOIN T_LEASE_REPAIR_BEFORE BF ON LR.REPAIR_ID = BF.REPAIR_ID
				WHERE LR.LEASE_ID = @LEASE_ID AND LR.STATUS = '3' AND LR.DEL_FLAG=1 AND LR.REPAIR_DATE<@START_DATE
				UNION ALL
				--租借维修后
				SELECT
				SPECIFICATIONS_ID,
				CONVERT(INT,REPAIR_QUANTITY) 'QUANTITY'
				FROM T_LEASE_REPAIR LR LEFT JOIN T_LEASE_REPAIR_AFTER AF ON LR.REPAIR_ID = AF.REPAIR_ID
				WHERE LR.LEASE_ID = @LEASE_ID AND LR.STATUS = '3' AND LR.DEL_FLAG=1 AND LR.REPAIR_DATE<@START_DATE
				UNION ALL
				--租借丢失赔偿
				SELECT 
				LCD.SPECIFICATIONS_ID,
				-CONVERT(INT,LCD.LOST_QUANTITY) 'QUANTITY'
				FROM T_LEASED_LOST_COMPENSATION LC LEFT JOIN T_LEASED_LOST_COMPENSATION_DETAIL LCD ON LC.LOST_ID = LCD.LOST_ID 
				WHERE LC.APPLYFOR_STATE=3 AND LC.DEL_FLAG=1 AND LC.LEASE_ID=@LEASE_ID
				AND LC.COMPENSATION_DATE<@START_DATE
			) T
			GROUP BY T.SPECIFICATIONS_ID
			UNION ALL
			SELECT 
			SPECIFICATIONS_ID,
			'收货管理' AS RECEIPT_TYPE,
			RECIPIENT_QUANTITY AS QUANTITY,
			DELIVERY_DATE AS RECEIPT_DATE,
			DELIVERY_DATE AS BEGIN_DATE,
			RECIPIENT_SERIAL AS RELATE_SERIAL
			FROM T_GOODS_RECIPIENT GR LEFT JOIN T_RECIPIENT_LIST RL ON GR.RECIPIENT_ID=RL.RECIPIENT_ID
			WHERE GR.LEASE_ID = @LEASE_ID AND GR.STATUS='3' AND GR.DELIVERY_DATE>=@START_DATE AND GR.DELIVERY_DATE<=@END_DATE
			UNION ALL 
			SELECT
			SPECIFICATIONS_ID,
			'退货管理' AS RECEIPT_TYPE,
			RETURN_QUANTITY AS QUANTITY,
			RETURN_DATE AS RECEIPT_DATE,
			RETURN_DATE AS BEGIN_DATE,
			RETURN_SERIAL AS RELATE_SERIAL
			FROM T_RETURN_GOODS RG LEFT JOIN T_RETURN_LIST RL ON RG.RETURN_ID = RL.RETURN_ID 
			WHERE RG.LEASE_ID = @LEASE_ID AND RG.STATUS = '3' AND SUBSTRING(RETURN_DATE,0,11)>=@START_DATE AND SUBSTRING(RETURN_DATE,0,11)<=@END_DATE
			UNION ALL
			SELECT
			SPECIFICATIONS_ID,
			'租借维修出库' AS RECEIPT_TYPE,
			REPAIR_QUANTITY AS QUANTITY,
			REPAIR_DATE AS RECEIPT_DATE,
			REPAIR_DATE AS BEGIN_DATE,
			REPAIR_SERIAL AS RELATE_SERIAL
			FROM T_LEASE_REPAIR LR LEFT JOIN T_LEASE_REPAIR_BEFORE BF ON LR.REPAIR_ID = BF.REPAIR_ID
			WHERE LR.LEASE_ID = @LEASE_ID AND LR.DEL_FLAG=1 AND LR.STATUS = '3' AND LR.REPAIR_DATE>=@START_DATE AND LR.REPAIR_DATE<=@END_DATE
			UNION ALL
			SELECT
			SPECIFICATIONS_ID,
			'租借维修入库' AS RECEIPT_TYPE,
			REPAIR_QUANTITY AS QUANTITY,
			REPAIR_DATE AS RECEIPT_DATE,
			REPAIR_DATE AS BEGIN_DATE,
			REPAIR_SERIAL AS RELATE_SERIAL
			FROM T_LEASE_REPAIR LR LEFT JOIN T_LEASE_REPAIR_AFTER AF ON LR.REPAIR_ID = AF.REPAIR_ID
			WHERE LR.LEASE_ID = @LEASE_ID AND LR.DEL_FLAG=1 AND LR.STATUS = '3' AND LR.REPAIR_DATE>=@START_DATE AND LR.REPAIR_DATE<=@END_DATE
			UNION ALL
			SELECT 
			LCD.SPECIFICATIONS_ID,
			'租借丢失赔偿' AS RECEIPT_TYPE,
			LCD.LOST_QUANTITY AS QUANTITY,
			LC.COMPENSATION_DATE AS RECEIPT_DATE,
			LC.COMPENSATION_DATE AS BEGIN_DATE,
			LC.LOST_SERIAL AS RELATE_SERIAL
			FROM T_LEASED_LOST_COMPENSATION LC LEFT JOIN T_LEASED_LOST_COMPENSATION_DETAIL LCD ON LC.LOST_ID = LCD.LOST_ID 
			WHERE LC.APPLYFOR_STATE=3 AND LC.DEL_FLAG=1 AND LC.LEASE_ID=@LEASE_ID
			AND LC.COMPENSATION_DATE>=@START_DATE AND LC.COMPENSATION_DATE<=@END_DATE
		) AS MAIN
		ON MSC.SPECIFICATIONS_ID = MAIN.SPECIFICATIONS_ID
		WHERE QUANTITY IS NOT NULL
		ORDER BY MSC.SPECIFICATIONS_ID,BEGIN_DATE,(CASE RECEIPT_TYPE 
		WHEN '上期结存' THEN 1
		WHEN '收货管理' THEN 2
		WHEN '退货管理' THEN 3
		WHEN '租借维修出库' THEN 4
		WHEN '租借维修入库' THEN 5
		WHEN '租借丢失赔偿' THEN 6
		END) ASC
		]]>
	</select>
	
	<!-- 租借报停费用（倒扣租金）-->
	<select id="lease_blockup_fee_backOff">
	<![CDATA[
		DECLARE @startDate VARCHAR(32)
		DECLARE @endDate VARCHAR(32)
		DECLARE @leaseId bigint
		DECLARE @days INT
		
		SET @startDate =?
		SET @endDate =?
		SET @leaseId = ?
		SET @days = ?
		
		SELECT 
		SUM(CASE WHEN T.OPERATION_WAY IN ('租借出租','租借维修入库') 
		THEN CONVERT(DECIMAL(10,2),T.SUPPLEMENT_QUANTITY) 
		WHEN T.OPERATION_WAY IN ('退货管理','租借维修出库','租借丢失赔偿') 
		THEN -CONVERT(DECIMAL(10,2),T.SUPPLEMENT_QUANTITY) END*CONVERT(DECIMAL(8,4),Y.DAILY_RENT)
		*(DATEDIFF(dd,CASE WHEN T.OPERATION_DATE>=@startDate 
		AND T.OPERATION_DATE<=@endDate THEN T.OPERATION_DATE
		WHEN T.OPERATION_DATE<@startDate THEN @startDate END,@endDate)+@days)) AS 'totalAmount',

		SUM(CASE WHEN T.OPERATION_WAY IN ('租借出租','租借维修入库') 
		THEN CONVERT(DECIMAL(10,2),T.SUPPLEMENT_QUANTITY) 
		WHEN T.OPERATION_WAY IN ('退货管理','租借维修出库','租借丢失赔偿') 
		THEN -CONVERT(DECIMAL(10,2),T.SUPPLEMENT_QUANTITY) END*CONVERT(DECIMAL(8,4),X.DAILY_RENT)
		*(DATEDIFF(dd,CASE WHEN T.OPERATION_DATE>=@startDate 
		AND T.OPERATION_DATE<=@endDate THEN T.OPERATION_DATE
		WHEN T.OPERATION_DATE<@startDate THEN @startDate END,@endDate)+@days)) AS 'totalAmount_inside'  --内部报停费用
		FROM 
		(SELECT *
		FROM T_PROJECT_DEPOT_IN_OUT 
		WHERE LEASE_ID=@leaseId 
		AND OPERATION_WAY IN ('租借出租','租借维修入库','退货管理','租借维修出库','租借丢失赔偿')
		) T 
		LEFT JOIN T_LEASE_PRICE_SETTING Y ON T.SPECIFICATIONS_ID=Y.SPECIFICATIONS_ID
		LEFT JOIN T_PRICE_SETTING X ON T.SPECIFICATIONS_ID = X.SPECIFICATIONS_ID
		WHERE Y.LEASE_ID = @leaseId AND T.CONTRACT_ID = X.CONTRACTMA_ID 
	   ]]>
        </select>	
        
        	<!-- 租借报停费用（不倒扣租金）-->
	<select id="lease_blockup_fee">
	<![CDATA[
        DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @LEASEID bigint
		DECLARE @DAYS INT
		
		SET @STARTDATE =?
		SET @ENDDATE =?
		SET @LEASEID = ?
		SET @DAYS = ?
		
		;WITH DATASET AS ((SELECT
				ROW_NUMBER() OVER (ORDER BY R.specificationsId,R.receiptDate,R.relateSerial,R.queryId) AS ROW,
				R.*
				FROM
						(SELECT 
						0 AS 'queryId',
						C.SPECIFICATIONS_ID AS 'specificationsId',
						NULL AS 'receiptDate',
						'上期结存' AS 'receiptType',
						NULL AS 'relateSerial',
						NULL AS 'operationWay',
						SUM(CASE WHEN C.OPERATION_WAY IN ('租借出租','租借维修入库') THEN CONVERT(DECIMAL(10,2),C.SUPPLEMENT_QUANTITY)
						WHEN C.OPERATION_WAY IN('退货管理','租借维修出库','租借丢失赔偿') THEN -CONVERT(DECIMAL(10,2),C.SUPPLEMENT_QUANTITY) END) 'supplementQuantity',
						B.DAILY_RENT AS 'dailyRent',
						DATEDIFF(dd,@STARTDATE,@ENDDATE)+@DAYS AS 'days'
						FROM T_LEASE_PRICE_SETTING B,T_MATERIALS_SPECIFICATIONS A,
						(SELECT *
						FROM T_PROJECT_DEPOT_IN_OUT 
						WHERE LEASE_ID=@LEASEID 
						AND OPERATION_DATE<@STARTDATE
						AND QUANTITY<>0
						AND OPERATION_WAY IN ('租借出租','租借维修入库',
  						  '退货管理','租借维修出库','租借丢失赔偿')
						) C
						WHERE B.LEASE_ID = @LEASEID 
						AND C.SPECIFICATIONS_ID=B.SPECIFICATIONS_ID 
						AND C.SPECIFICATIONS_ID=A.SPECIFICATIONS_ID
						GROUP BY C.SPECIFICATIONS_ID,C.COMMODITY,C.SPECIFICATIONS,C.UNIT,A.SECOND_UNIT_CONVERSION,B.DAILY_RENT,A.SECOND_CONVERTED_QUANTITY	
						UNION ALL
						SELECT 
						T.QUERY_ID AS 'queryId',
						T.SPECIFICATIONS_ID 'specificationsId',	
						T.OPERATION_DATE 'receiptDate',
						T.RELATE_MODULE_NAME 'receiptType',
						T.RELATE_SERIAL 'relateSerial',
						T.OPERATION_WAY 'operationWay',
						CONVERT(DECIMAL(10,2),T.SUPPLEMENT_QUANTITY) 'supplementQuantity',
						Y.DAILY_RENT 'dailyRent',
						DATEDIFF(dd,T.OPERATION_DATE,@ENDDATE)+@DAYS 'days'
						FROM T_LEASE_PRICE_SETTING Y,T_MATERIALS_SPECIFICATIONS X,
						(SELECT *
						FROM T_PROJECT_DEPOT_IN_OUT 
						WHERE LEASE_ID=@LEASEID 
						AND OPERATION_DATE>=@STARTDATE 
						AND OPERATION_DATE<=@ENDDATE 
						AND QUANTITY<>0
						AND OPERATION_WAY IN ('租借出租','租借维修入库',
  						  '退货管理','租借维修出库','租借丢失赔偿')
						) T
						WHERE Y.LEASE_ID = @LEASEID 
						AND T.SPECIFICATIONS_ID=Y.SPECIFICATIONS_ID 
						AND T.SPECIFICATIONS_ID=X.SPECIFICATIONS_ID) R)),
		QUERY AS
		(SELECT
		G.*, 
		(SELECT SUM(CASE WHEN P.receiptType='上期结存' THEN P.supplementQuantity
					WHEN P.operationWay='租借出租' THEN P.supplementQuantity
					WHEN P.operationWay='租借维修入库' THEN P.supplementQuantity
					WHEN P.operationWay='租借维修出库' THEN -P.supplementQuantity
					WHEN P.operationWay='退货管理' THEN -P.supplementQuantity
					WHEN P.operationWay='租借丢失赔偿' THEN -P.supplementQuantity
					ELSE 0 END) FROM dataSet
				 P WHERE P.ROW<=G.ROW AND P.specificationsId=G.specificationsId) AS [totalRent]
				FROM DATASET G)
		SELECT SUM(CASE 
			 WHEN T1.receiptType='上期结存' AND T1.supplementQuantity<=0 THEN 0
			 WHEN T1.receiptType='上期结存' AND T1.supplementQuantity>0 THEN CONVERT(DECIMAL(16,4),T1.supplementQuantity)*CONVERT(DECIMAL(10,4),T1.dailyRent)*CONVERT(INT,T1.days)
			 WHEN (T1.ROW=1 OR T1.specificationsId<>T2.specificationsId) AND T1.operationWay IN ('退货管理','租借维修出库','租借丢失赔偿') AND T1.totalRent>0
				THEN -CONVERT(DECIMAL(16,4),T1.supplementQuantity)*CONVERT(DECIMAL(10,4),T1.dailyRent)*CONVERT(INT,T1.days)
			 WHEN (T1.ROW=1 OR T1.specificationsId<>T2.specificationsId) AND T1.operationWay IN ('租借出租','租借维修入库') AND T1.totalRent>0		  
				THEN CONVERT(DECIMAL(16,4),T1.supplementQuantity)*CONVERT(DECIMAL(10,4),T1.dailyRent)*CONVERT(INT,T1.days)
		
			 WHEN T1.specificationsId=T2.specificationsId AND T1.operationWay IN ('退货管理','租借维修出库','租借丢失赔偿') AND T2.totalRent>0 AND T1.totalRent>=0 
				THEN -CONVERT(DECIMAL(16,4),T1.supplementQuantity)*CONVERT(DECIMAL(10,4),T1.dailyRent)*CONVERT(INT,T1.days)
			 WHEN T1.specificationsId=T2.specificationsId AND T1.operationWay IN ('退货管理','租借维修出库','租借丢失赔偿') AND T2.totalRent>0 AND T1.totalRent<0 
				THEN -CONVERT(DECIMAL(16,4),T2.totalRent)*CONVERT(DECIMAL(10,4),T1.dailyRent)*CONVERT(INT,T1.days)
			 WHEN T1.specificationsId=T2.specificationsId AND T1.operationWay IN ('退货管理','租借维修出库','租借丢失赔偿') AND T2.totalRent<=0 
				THEN 0
		
			 WHEN T1.specificationsId=T2.specificationsId AND T1.operationWay IN ('租借出租','租借维修入库') AND T2.totalRent>=0 AND T1.totalRent>=0
				THEN CONVERT(DECIMAL(16,4),T1.supplementQuantity)*CONVERT(DECIMAL(10,4),T1.dailyRent)*CONVERT(INT,T1.days)
			 WHEN T1.specificationsId=T2.specificationsId AND T1.operationWay IN ('租借出租','租借维修入库') AND T2.totalRent>=0 AND T1.totalRent<0
				THEN -CONVERT(DECIMAL(16,4),T2.totalRent)*CONVERT(DECIMAL(10,4),T1.dailyRent)*CONVERT(INT,T1.days)
			 WHEN T1.specificationsId=T2.specificationsId AND T1.operationWay IN ('租借出租','租借维修入库') AND T2.totalRent<0 AND T1.totalRent>0
				THEN CONVERT(DECIMAL(16,4),T1.totalRent)*CONVERT(DECIMAL(10,4),T1.dailyRent)*CONVERT(INT,T1.days)
		     WHEN T1.specificationsId<>T2.specificationsId AND T1.totalRent<=0 THEN 0
			 ELSE 0 END) 'totalAmount'
		FROM QUERY T1 LEFT JOIN QUERY T2 ON T1.ROW=T2.ROW+1
			   ]]>
        </select>	
        
        <!-- DECLARE @STARTDATE VARCHAR(32)
			DECLARE @ENDDATE VARCHAR(32)
			DECLARE @LEASEID bigint
			SET @STARTDATE =?
			SET @ENDDATE = ?
			SET @LEASEID = ?
			
			SELECT 
			U.BLOCK_ID AS 'blockId',
			U.BLOCK_TITLE AS 'blockTitle',
			U.BLOCK_SERIAL AS 'blockSerial',
			U.START_DATE AS 'startDate',
			U.END_DATE AS 'endDate',
			U.SETTLED_AMOUNT AS 'settledAmount',
			LC.LEASE_IDENTIFIER AS 'leaseIdentifier',
			P.PROJECT_NAME AS 'projectName'
			FROM T_LEASE_BLOCK_UP U,T_LEASE_CONTRACT LC,T_PROJECT P
			WHERE U.LEASE_ID=LC.LEASE_ID 
			AND P.PROJECT_ID = LC.PROJECT_ID
			AND U.DEL_FLAG=1 AND U.STATUS=1
			AND U.LEASE_ID=@LEASEID
			AND ((U.START_DATE>=@STARTDATE AND U.START_DATE<=@ENDDATE)
			OR (U.END_DATE>=@STARTDATE AND U.END_DATE<=@ENDDATE)
			OR (U.START_DATE<=@STARTDATE AND U.END_DATE>=@ENDDATE)) -->
      	<!-- 【租借结算】【租借报停】结算清单-->
		<select id="lease_blockup_list">
		<![CDATA[
			DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @LEASEID bigint
		DECLARE @DAYS INT
		
		SET @STARTDATE =?
		SET @ENDDATE =?
		SET @LEASEID = ?
		SET @DAYS = ?
		
		SELECT
				ROW_NUMBER() OVER (ORDER BY R.specificationsId,R.receiptDate,R.relateSerial,R.queryId) AS ROW,
				R.*
				FROM
						(SELECT 
						0 AS 'queryId',
						C.SPECIFICATIONS_ID AS 'specificationsId',
						C.SPECIFICATIONS AS 'specifications',
						C.COMMODITY AS 'commodity',
						C.UNIT AS 'unit',
						A.SECOND_CONVERTED_QUANTITY AS 'conversionNum',
						A.SECOND_UNIT_CONVERSION AS 'supplementUnit',
						NULL AS 'receiptDate',
						'上期结存' AS 'receiptType',
						NULL AS 'relateSerial',
						NULL AS 'operationWay',
						@STARTDATE AS 'beginDate',
						@ENDDATE AS 'stopDate',
						SUM(CASE WHEN C.OPERATION_WAY IN ('租借出租','租借维修入库') THEN CONVERT(int,C.QUANTITY)
						WHEN C.OPERATION_WAY IN('退货管理','租借维修出库','租借丢失赔偿') THEN -CONVERT(int,C.QUANTITY) END) 'quantity',
						SUM(CASE WHEN C.OPERATION_WAY IN ('租借出租','租借维修入库') THEN CONVERT(DECIMAL(10,2),C.SUPPLEMENT_QUANTITY)
						WHEN C.OPERATION_WAY IN('退货管理','租借维修出库','租借丢失赔偿') THEN -CONVERT(DECIMAL(10,2),C.SUPPLEMENT_QUANTITY) END) 'supplementQuantity',
						B.DAILY_RENT AS 'dailyRent',
						DATEDIFF(dd,@STARTDATE,@ENDDATE)+@DAYS AS 'days',
						SUM((CASE WHEN C.OPERATION_WAY IN ('租借出租','租借维修入库') THEN CONVERT(DECIMAL(10,2),C.SUPPLEMENT_QUANTITY) 
						WHEN C.OPERATION_WAY IN ('退货管理','租借维修出库','租借丢失赔偿') THEN -CONVERT(DECIMAL(10,2),C.SUPPLEMENT_QUANTITY) END)
						*CONVERT(DECIMAL(8,4),B.DAILY_RENT)*(DATEDIFF(dd,@STARTDATE,@ENDDATE)+@DAYS)) 'rentAmount'
						FROM T_LEASE_PRICE_SETTING B,T_MATERIALS_SPECIFICATIONS A,
						(SELECT *
						FROM T_PROJECT_DEPOT_IN_OUT 
						WHERE LEASE_ID=@LEASEID 
						AND OPERATION_DATE<@STARTDATE
						AND QUANTITY<>0
						AND OPERATION_WAY IN ('租借出租','租借维修入库',
  						  '退货管理','租借维修出库','租借丢失赔偿')
						) C
						WHERE B.LEASE_ID = @LEASEID 
						AND C.SPECIFICATIONS_ID=B.SPECIFICATIONS_ID 
						AND C.SPECIFICATIONS_ID=A.SPECIFICATIONS_ID
						GROUP BY C.SPECIFICATIONS_ID,C.COMMODITY,C.SPECIFICATIONS,C.UNIT,A.SECOND_UNIT_CONVERSION,B.DAILY_RENT,A.SECOND_CONVERTED_QUANTITY	
						UNION ALL
						SELECT 
						T.QUERY_ID AS 'queryId',
						T.SPECIFICATIONS_ID 'specificationsId',	
						X.SPECIFICATIONS AS 'specifications',
						T.COMMODITY AS 'commodity',
						X.FIRST_UNIT_CONVERSION AS 'unit',
						X.SECOND_CONVERTED_QUANTITY AS 'conversionNum',
						X.SECOND_UNIT_CONVERSION AS 'supplementUnit',
						T.OPERATION_DATE AS 'receiptDate',
						T.RELATE_MODULE_NAME AS 'receiptType',
						T.RELATE_SERIAL AS 'relateSerial',
						T.OPERATION_WAY AS 'operationWay',
						T.OPERATION_DATE AS 'beginDate',
						@ENDDATE AS 'stopDate',
						T.QUANTITY AS 'quantity', 						
						CONVERT(DECIMAL(10,2),T.SUPPLEMENT_QUANTITY) AS  'supplementQuantity',
						Y.DAILY_RENT AS 'dailyRent',
						DATEDIFF(dd,T.OPERATION_DATE,@ENDDATE)+@DAYS AS 'days',
						(CASE WHEN T.OPERATION_WAY IN ('租借出租','租借维修入库') THEN CONVERT(DECIMAL(10,2),T.SUPPLEMENT_QUANTITY) 
						WHEN T.OPERATION_WAY IN ('退货管理','租借维修出库','租借丢失赔偿') THEN -CONVERT(DECIMAL(10,2),T.SUPPLEMENT_QUANTITY) END)
						*CONVERT(DECIMAL(8,4),Y.DAILY_RENT)*(DATEDIFF(dd,T.OPERATION_DATE,@ENDDATE)+@DAYS) 'rentAmount'
						FROM T_LEASE_PRICE_SETTING Y,T_MATERIALS_SPECIFICATIONS X,
						(SELECT *
						FROM T_PROJECT_DEPOT_IN_OUT 
						WHERE LEASE_ID=@LEASEID 
						AND OPERATION_DATE>=@STARTDATE 
						AND OPERATION_DATE<=@ENDDATE 
						AND QUANTITY<>0
						AND OPERATION_WAY IN ('租借出租','租借维修入库',
  						  '退货管理','租借维修出库','租借丢失赔偿')
						) T
						WHERE Y.LEASE_ID = @LEASEID 
						AND T.SPECIFICATIONS_ID=Y.SPECIFICATIONS_ID 
						AND T.SPECIFICATIONS_ID=X.SPECIFICATIONS_ID) R
		   ]]>
        </select>	
       
       	<!-- 【租借结算】【租借报停】结算清单-->
		<select id="lease_blockup_list_inside">
		<![CDATA[
		DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @LEASEID bigint
		DECLARE @DAYS INT
		
		SET @STARTDATE =?
		SET @ENDDATE =?
		SET @LEASEID = ?
		SET @DAYS = ?
SELECT
				ROW_NUMBER() OVER (ORDER BY R.specificationsId,R.receiptDate,R.relateSerial,R.queryId) AS ROW,
				R.*
				FROM
						(SELECT 
						0 AS 'queryId',
						C.SPECIFICATIONS_ID AS 'specificationsId',
						C.SPECIFICATIONS AS 'specifications',
						C.COMMODITY AS 'commodity',
						C.UNIT AS 'unit',
						A.SECOND_CONVERTED_QUANTITY AS 'conversionNum',
						A.SECOND_UNIT_CONVERSION AS 'supplementUnit',
						NULL AS 'receiptDate',
						'上期结存' AS 'receiptType',
						NULL AS 'relateSerial',
						NULL AS 'operationWay',
						@STARTDATE AS 'beginDate',
						@ENDDATE AS 'stopDate',
						SUM(CASE WHEN C.OPERATION_WAY IN ('租借出租','租借维修入库') THEN CONVERT(int,C.QUANTITY)
						WHEN C.OPERATION_WAY IN('退货管理','租借维修出库','租借丢失赔偿') THEN -CONVERT(int,C.QUANTITY) END) 'quantity',
						SUM(CASE WHEN C.OPERATION_WAY IN ('租借出租','租借维修入库') THEN CONVERT(DECIMAL(10,2),C.SUPPLEMENT_QUANTITY)
						WHEN C.OPERATION_WAY IN('退货管理','租借维修出库','租借丢失赔偿') THEN -CONVERT(DECIMAL(10,2),C.SUPPLEMENT_QUANTITY) END) 'supplementQuantity',
						B.DAILY_RENT AS 'dailyRent',
						DATEDIFF(dd,@STARTDATE,@ENDDATE)+@DAYS AS 'days',
						SUM((CASE WHEN C.OPERATION_WAY IN ('租借出租','租借维修入库') THEN CONVERT(DECIMAL(10,2),C.SUPPLEMENT_QUANTITY) 
						WHEN C.OPERATION_WAY IN ('退货管理','租借维修出库','租借丢失赔偿') THEN -CONVERT(DECIMAL(10,2),C.SUPPLEMENT_QUANTITY) END)
						*CONVERT(DECIMAL(8,4),B.DAILY_RENT)*(DATEDIFF(dd,@STARTDATE,@ENDDATE)+@DAYS)) 'rentAmount'
						FROM 
						(SELECT *
						FROM T_PROJECT_DEPOT_IN_OUT 
						WHERE LEASE_ID=@LEASEID 
						AND OPERATION_DATE<@STARTDATE
						AND QUANTITY<>0
						AND OPERATION_WAY IN ('租借出租','租借维修入库',
  						  '退货管理','租借维修出库','租借丢失赔偿')
						) C
						LEFT JOIN T_PRICE_SETTING B ON C.CONTRACT_ID=B.CONTRACTMA_ID AND C.SPECIFICATIONS_ID=B.SPECIFICATIONS_ID
						LEFT JOIN T_MATERIALS_SPECIFICATIONS A ON C.SPECIFICATIONS_ID=A.SPECIFICATIONS_ID
						GROUP BY C.SPECIFICATIONS_ID,C.COMMODITY,C.SPECIFICATIONS,C.UNIT,A.SECOND_UNIT_CONVERSION,B.DAILY_RENT,A.SECOND_CONVERTED_QUANTITY	
						UNION ALL
						SELECT 
						T.QUERY_ID AS 'queryId',
						T.SPECIFICATIONS_ID 'specificationsId',	
						X.SPECIFICATIONS AS 'specifications',
						T.COMMODITY AS 'commodity',
						X.FIRST_UNIT_CONVERSION AS 'unit',
						X.SECOND_CONVERTED_QUANTITY AS 'conversionNum',
						X.SECOND_UNIT_CONVERSION AS 'supplementUnit',
						T.OPERATION_DATE AS 'receiptDate',
						T.RELATE_MODULE_NAME AS 'receiptType',
						T.RELATE_SERIAL AS 'relateSerial',
						T.OPERATION_WAY AS 'operationWay',
						T.OPERATION_DATE AS 'beginDate',
						@ENDDATE AS 'stopDate',
						T.QUANTITY AS 'quantity', 						
						CONVERT(DECIMAL(10,2),T.SUPPLEMENT_QUANTITY) AS  'supplementQuantity',
						Y.DAILY_RENT AS 'dailyRent',
						DATEDIFF(dd,T.OPERATION_DATE,@ENDDATE)+@DAYS AS 'days',
						(CASE WHEN T.OPERATION_WAY IN ('租借出租','租借维修入库') THEN CONVERT(DECIMAL(10,2),T.SUPPLEMENT_QUANTITY) 
						WHEN T.OPERATION_WAY IN ('退货管理','租借维修出库','租借丢失赔偿') THEN -CONVERT(DECIMAL(10,2),T.SUPPLEMENT_QUANTITY) END)
						*CONVERT(DECIMAL(8,4),Y.DAILY_RENT)*(DATEDIFF(dd,T.OPERATION_DATE,@ENDDATE)+@DAYS) 'rentAmount'
						FROM 
						(SELECT *
						FROM T_PROJECT_DEPOT_IN_OUT 
						WHERE LEASE_ID=@LEASEID 
						AND OPERATION_DATE>=@STARTDATE 
						AND OPERATION_DATE<=@ENDDATE 
						AND QUANTITY<>0
						AND OPERATION_WAY IN ('租借出租','租借维修入库',
  						  '退货管理','租借维修出库','租借丢失赔偿')
						) T
						LEFT JOIN T_PRICE_SETTING Y ON T.CONTRACT_ID=Y.CONTRACTMA_ID AND T.SPECIFICATIONS_ID=Y.SPECIFICATIONS_ID 
						LEFT JOIN T_MATERIALS_SPECIFICATIONS X ON T.SPECIFICATIONS_ID=X.SPECIFICATIONS_ID
						 ) R
		   ]]>
        </select>	
         
       <!--【租借结算】其他费用清单 -->
      <select id="lease_other_fee_detail">
	<![CDATA[
	DECLARE @STARTDATE VARCHAR(32)
		DECLARE @ENDDATE VARCHAR(32)
		DECLARE @LEASEID bigint
		SET @STARTDATE =?
		SET @ENDDATE = ?
		SET @LEASEID = ?
		
		SELECT 
		TOB.OTHER_ID 'otherId',
		TOB.CHARGEABLE_TIME 'receiptDate',
		'其他业务' AS 'receiptType',
		TOB.BUSINESS_SERIAL 'relateSerial',
		BD.DEPOT_NAME 'depotName',
		BM.VALUE 'feesType',
		(CASE WHEN TOBD.CALCULATION_METHOD= 0 THEN '相加' WHEN TOBD.CALCULATION_METHOD= 1 THEN '相减' END) 'calculationMethod',
		TOBD.FEE 'amount'
		FROM T_OTHER_LEASE_BUSINESS TOB 
		LEFT JOIN T_OTHER_LEASE_DETAIL TOBD ON TOB.OTHER_ID = TOBD.OTHER_ID
		LEFT JOIN T_BASE_DEPOT BD ON BD.DEPOT_ID=TOB.DEPOT_ID
		LEFT JOIN BM_FEES_TYPE BM ON BM.CODE=TOBD.FEES_TYPE
		WHERE TOB.APPLYFOR_STATE = 3 AND TOB.DEL_FLAG=1 AND TOB.LEASE_ID = @LEASEID 
		AND CONVERT(varchar(10), TOB.CHARGEABLE_TIME, 23)>=@STARTDATE AND CONVERT(varchar(10), TOB.CHARGEABLE_TIME, 23)<=@ENDDATE
		   ]]>
        </select>	
        
       <!--【租借结算】报停费用清单+内部报停清单 -->
      <select id="lease_block_up_detail">
	<![CDATA[
		DECLARE @STARTDATE VARCHAR(10)
		DECLARE @ENDDATE VARCHAR(10)
		DECLARE @LEASEID BIGINT

		SET @STARTDATE =?
		SET @ENDDATE = ?
		SET @LEASEID = ?

		SELECT 
		BP.BLOCK_ID 'blockId',
		P.PROJECT_NAME 'projectName',
		BP.BLOCK_SERIAL 'blockSerial',
		BP.BLOCK_TITLE 'blockTitle',
		LC.LEASE_UNIT 'leaseUnit',
		CASE WHEN START_DATE>=@STARTDATE AND END_DATE<=@ENDDATE
		 THEN CONVERT(DECIMAL(12,2),SETTLED_AMOUNT)
		 WHEN START_DATE>=@STARTDATE AND START_DATE<=@ENDDATE AND END_DATE>@ENDDATE 
				 THEN CONVERT(DECIMAL(12,2),(DATEDIFF(DD,START_DATE,@ENDDATE)*1.0)/DATEDIFF(DD,START_DATE,END_DATE)*CONVERT(decimal(10,2),SETTLED_AMOUNT)) 
				 WHEN END_DATE>=@STARTDATE AND END_DATE<=@ENDDATE AND START_DATE<@STARTDATE 
				 THEN CONVERT(DECIMAL(12,2),(DATEDIFF(DD,@STARTDATE,END_DATE)*1.0)/DATEDIFF(DD,START_DATE,END_DATE)*CONVERT(decimal(10,2),SETTLED_AMOUNT)) 
				 ELSE 0 END AS 'settledAmount',
		
		CASE WHEN START_DATE>=@STARTDATE AND END_DATE<=@ENDDATE
		 THEN CONVERT(DECIMAL(12,2),INSIDE_AMOUNT)
		 WHEN START_DATE>=@STARTDATE AND START_DATE<=@ENDDATE AND END_DATE>@ENDDATE 
				 THEN CONVERT(DECIMAL(12,2),(DATEDIFF(DD,START_DATE,@ENDDATE)*1.0)/DATEDIFF(DD,START_DATE,END_DATE)*CONVERT(decimal(10,2),INSIDE_AMOUNT)) 
				 WHEN END_DATE>=@STARTDATE AND END_DATE<=@ENDDATE AND START_DATE<@STARTDATE 
				 THEN CONVERT(DECIMAL(12,2),(DATEDIFF(DD,@STARTDATE,END_DATE)*1.0)/DATEDIFF(DD,START_DATE,END_DATE)*CONVERT(decimal(10,2),INSIDE_AMOUNT)) 
				 ELSE 0 END AS 'insideAmount',
		(CASE WHEN START_DATE>=@STARTDATE  THEN START_DATE 
		 WHEN  START_DATE<@STARTDATE THEN @STARTDATE END) AS 'startDate',
		(CASE WHEN END_DATE<=@ENDDATE THEN END_DATE
		 WHEN END_DATE>@ENDDATE THEN @ENDDATE END) AS 'endDate'
		from T_LEASE_BLOCK_UP BP,T_LEASE_CONTRACT LC,T_PROJECT P 
		WHERE BP.LEASE_ID=LC.LEASE_ID AND BP.STATUS='1'
		AND P.PROJECT_ID=LC.PROJECT_ID  
		AND BP.LEASE_ID=@LEASEID
			AND ((START_DATE>=@STARTDATE AND START_DATE<=@ENDDATE)
			OR (END_DATE>=@STARTDATE AND END_DATE<=@ENDDATE)
			OR (@STARTDATE<=START_DATE AND END_DATE<=@ENDDATE))
		   ]]>
        </select>	
        
      <!-- 查询设备上一期结算截止日 -->
       <select id="last_end_settle_date_1">
		<![CDATA[
			DECLARE @contractIds VARCHAR(300) 
			SET @contractIds = ?
			SELECT 
			EQUIP_ID AS 'equipId',
			END_SETTLE_DATE AS 'endSettleDate' 
			FROM T_SETTLE_EQUIP_BRIEF
			WHERE SETTLE_ID IN (
				SELECT MAX(SETTLE_ID) FROM (
					SELECT SC.SETTLE_ID,SC.CONTRACT_ID 
					FROM T_SETTLE_EQUIP_BRIEF SEB 
					LEFT JOIN T_SETTLE_CONTRACT SC ON SEB.SETTLE_ID = SC.SETTLE_ID 
					LEFT JOIN T_CONTRACT_LEASE CL ON CL.CONTRACT_ID = SC.CONTRACT_ID
					WHERE SC.DEL_FLAG='1' AND SC.EFFECTIVE='1'
					AND EXISTS (SELECT a FROM dbo.Split(@contractIds,',') WHERE a=SC.CONTRACT_ID)
					UNION ALL 
					SELECT SC.SETTLE_ID,SC.CONTRACT_ID 
					FROM T_SETTLE_EQUIP_BRIEF SEB 
					LEFT JOIN T_SETTLE_CONTRACT SC ON SEB.SETTLE_ID = SC.SETTLE_ID 
					LEFT JOIN T_COMBINE_SETTLE_CONTRACT CSC ON CSC.CONTRACT_ID = SC.CONTRACT_ID
					WHERE SC.DEL_FLAG='1' AND SC.EFFECTIVE='1'
					AND EXISTS (SELECT a FROM dbo.Split(@contractIds,',') WHERE a=SC.CONTRACT_ID)
				) T GROUP BY T.CONTRACT_ID
			)
		  ]]>
        </select>	
        
      <!-- 查询设备上一期结算截止日 -->
       <select id="last_end_settle_date_2">
		<![CDATA[
			DECLARE @contractIds VARCHAR(300) 
			SET @contractIds = ?
			SELECT 
			EQUIP_ID AS 'equipId',
			END_SETTLE_DATE AS 'endSettleDate' 
			FROM T_OPERATOR_SALARY_STATEMENT
			WHERE SETTLE_ID IN (
				SELECT MAX(SETTLE_ID) FROM (
					SELECT SC.SETTLE_ID,SC.CONTRACT_ID 
					FROM T_OPERATOR_SALARY_STATEMENT OSS 
					LEFT JOIN T_SETTLE_CONTRACT SC ON OSS.SETTLE_ID = SC.SETTLE_ID 
					LEFT JOIN T_CONTRACT_LEASE CL ON CL.CONTRACT_ID = SC.CONTRACT_ID
					WHERE SC.DEL_FLAG='1' AND SC.EFFECTIVE='1'
					AND EXISTS (SELECT a FROM dbo.Split(@contractIds,',') WHERE a=SC.CONTRACT_ID)
					UNION ALL 
					SELECT SC.SETTLE_ID,SC.CONTRACT_ID 
					FROM T_OPERATOR_SALARY_STATEMENT OSS 
					LEFT JOIN T_SETTLE_CONTRACT SC ON OSS.SETTLE_ID = SC.SETTLE_ID 
					LEFT JOIN T_COMBINE_SETTLE_CONTRACT CSC ON CSC.CONTRACT_ID = SC.CONTRACT_ID
					WHERE SC.DEL_FLAG='1' AND SC.EFFECTIVE='1'
					AND EXISTS (SELECT a FROM dbo.Split(@contractIds,',') WHERE a=SC.CONTRACT_ID)
				) T GROUP BY T.CONTRACT_ID
			)
		  ]]>
        </select>	
         <!-- 查询设备上一次起租日期 -->
       <select id="last_end_activate_date_1">
		<![CDATA[
			DECLARE @equipId VARCHAR(300) 
			SET @equipId = ?
			SELECT
				TOP 1 EQUIP_ID AS 'equipId',ACTIVATE_DATE AS 'endSettleDate'
			FROM(
				SELECT
					EA.ACTIVATE_ID,
					EF.EQUIP_ID,
					EA.ACTIVATE_DATE
				FROM
					T_EQUIPMENT_ACTIVATE EA
					LEFT JOIN T_EQUIPMENT_FLOW EF ON EF.FLOW_ID = EA.FLOW_ID
					LEFT JOIN T_CONTRACT_LEASE CL ON CL.CONTRACT_ID = EF.CONTRACT_ID 
				WHERE
					EA.DEL_FLAG= '1' 
					AND EA.EFFECTIVE= '1' 
					AND EF.EQUIP_ID = @equipId
			) T ORDER BY T.ACTIVATE_ID DESC
		  ]]>
        </select>	
      <!-- 查询设备上一次停用日期 -->
       <select id="last_end_activate_date_2">
		<![CDATA[
			DECLARE @equipId VARCHAR(300) 
			SET @equipId = ?
			SELECT
				TOP 1 EQUIP_ID AS 'equipId',BLOCKUP_DATE AS 'endSettleDate'
			FROM(
				SELECT
					EB.BLOCKUP_ID,
					EF.EQUIP_ID,
					EB.BLOCKUP_DATE
				FROM
					T_EQUIPMENT_BLOCKUP EB
					LEFT JOIN T_EQUIPMENT_FLOW EF ON EF.FLOW_ID = EB.FLOW_ID
					LEFT JOIN T_CONTRACT_LEASE CL ON CL.CONTRACT_ID = EF.CONTRACT_ID 
				WHERE
					EB.DEL_FLAG= '1' 
					AND EB.EFFECTIVE= '1' 
					AND EF.EQUIP_ID = @equipId
			) T ORDER BY T.BLOCKUP_ID DESC
		  ]]>
        </select>	
        
      <!-- 查询设备上一期结算截止日 -->
       <select id="last_end_settle_date_3">
		<![CDATA[
			DECLARE @contractIds VARCHAR(300) 
			SET @contractIds = ?
			SELECT 
			EQUIP_ID AS 'equipId',
			END_SETTLE_DATE AS 'endSettleDate' 
			FROM T_SAFETY_MONITOR_SETTLE_STATEMENT
			WHERE SETTLE_ID IN (
				SELECT MAX(SETTLE_ID) FROM (
					SELECT SC.SETTLE_ID,SC.CONTRACT_ID 
					FROM T_SAFETY_MONITOR_SETTLE_STATEMENT SMS 
					LEFT JOIN T_SETTLE_CONTRACT SC ON SMS.SETTLE_ID = SC.SETTLE_ID 
					LEFT JOIN T_CONTRACT_LEASE CL ON CL.CONTRACT_ID = SC.CONTRACT_ID
					WHERE SC.DEL_FLAG='1' AND SC.EFFECTIVE='1'
					AND EXISTS (SELECT a FROM dbo.Split(@contractIds,',') WHERE a=SC.CONTRACT_ID)
					UNION ALL 
					SELECT SC.SETTLE_ID,SC.CONTRACT_ID 
					FROM T_SAFETY_MONITOR_SETTLE_STATEMENT SMS 
					LEFT JOIN T_SETTLE_CONTRACT SC ON SMS.SETTLE_ID = SC.SETTLE_ID 
					LEFT JOIN T_COMBINE_SETTLE_CONTRACT CSC ON CSC.CONTRACT_ID = SC.CONTRACT_ID
					WHERE SC.DEL_FLAG='1' AND SC.EFFECTIVE='1'
					AND EXISTS (SELECT a FROM dbo.Split(@contractIds,',') WHERE a=SC.CONTRACT_ID)
				) T GROUP BY T.CONTRACT_ID
			)
		  ]]>
        </select>
	<!-- 结算单打印获取相应设备 -->
	<select id="get_settle_contract_relate_equip">
		<![CDATA[
			DECLARE @settleId BIGINT
			SET @settleId=?
			SELECT
			E.EQUIP_ID AS equipId,
			RC.VALUE AS equipCategoryName,
			ES.VALUE AS equipSpecificName
			FROM T_EQUIPMENT E
			LEFT JOIN BM_REPERTORY_CATEGORY RC ON RC.CODE = E.EQUIP_CATEGORY
			LEFT JOIN BM_EQUIP_SPECIFIC ES ON ES.CODE = E.EQUIP_SPECIFIC
			WHERE EQUIP_ID IN (
				SELECT EQUIP_ID FROM T_SETTLE_EQUIP_BRIEF WHERE SETTLE_ID = @settleId
				UNION
				SELECT EQUIP_ID FROM T_SETTLE_ITEM_BRIEF WHERE SETTLE_ID = @settleId
				UNION
				SELECT EQUIP_ID FROM T_OPERATOR_SALARY_STATEMENT WHERE SETTLE_ID = @settleId
				UNION
				SELECT EQUIP_ID FROM T_SAFETY_MONITOR_SETTLE_STATEMENT WHERE SETTLE_ID = @settleId
				UNION
				SELECT EQUIP_ID FROM T_OTHER_EXPENSE_STATEMENT WHERE SETTLE_ID = @settleId
			)
		  ]]>
	</select>
	<!-- 结算单打印获取相应设备 -->
	<select id="get_settle_contract_invoice_relate_equip">
		<![CDATA[
			DECLARE @contractId BIGINT
			SET @contractId=?
			SELECT
			E.EQUIP_ID AS equipId,
			RC.VALUE AS equipCategoryName,
			ES.VALUE AS equipSpecificName
			FROM T_EQUIPMENT E
			LEFT JOIN BM_REPERTORY_CATEGORY RC ON RC.CODE = E.EQUIP_CATEGORY
			LEFT JOIN BM_EQUIP_SPECIFIC ES ON ES.CODE = E.EQUIP_SPECIFIC
			WHERE EQUIP_ID IN (
				SELECT EQUIP_ID FROM T_SETTLE_EQUIP_BRIEF WHERE SETTLE_ID = @settleId
				UNION
				SELECT EQUIP_ID FROM T_SETTLE_ITEM_BRIEF WHERE SETTLE_ID = @settleId
				UNION
				SELECT EQUIP_ID FROM T_OPERATOR_SALARY_STATEMENT WHERE SETTLE_ID = @settleId
				UNION
				SELECT EQUIP_ID FROM T_SAFETY_MONITOR_SETTLE_STATEMENT WHERE SETTLE_ID = @settleId
				UNION
				SELECT EQUIP_ID FROM T_OTHER_EXPENSE_STATEMENT WHERE SETTLE_ID = @settleId
			)
		  ]]>
	</select>
	<!-- 根据某个月份更新结算单的关账状态 -->
	<select id="update_close_status">
		<![CDATA[
			DECLARE @months VARCHAR(64)
			DECLARE @closedStatus VARCHAR(12)
			SET @months=?
			SET @closedStatus=?
			UPDATE T_SETTLE_CONTRACT SET CLOSED_STATUS = @closedStatus WHERE (START_SETTLE_DATE LIKE '%'+@months+'%' OR PROVIDED_DATE LIKE '%'+@months+'%') AND DEL_FLAG = 1
		]]>
	</select>
	<!-- 查询关账信息 -->
	<select id="close_settle_by_months">
		<![CDATA[
			DECLARE @providedDate VARCHAR(64)
			DECLARE @startSettleDate VARCHAR(64)
			SET @providedDate=?
			SET @startSettleDate=?
			SELECT CSI.MONTHS FROM T_CLOSED_SETTLE_INFO CSI WHERE (CSI.MONTHS LIKE '%'+@providedDate+'%' OR CSI.MONTHS LIKE '%'+@startSettleDate+'%') AND CSI.CLOSED_STATUS = '1'
		]]>
	</select>
	<!-- 获取设备的启用日期 -->
	<select id="get_equip_activateDate">
		<![CDATA[
			SELECT TOP 1 ACTIVATE_DATE AS 'activateDate' FROM T_EQUIPMENT_ACTIVATE 
				WHERE FLOW_ID IN (SELECT FLOW_ID FROM T_EQUIPMENT_FLOW WHERE CONTRACT_ID = ? AND EQUIP_ID = ?) 
				AND DEL_FLAG='1' AND EFFECTIVE='1'
		  ]]>
	</select>
	<!-- 关账前检查是否有未完成的单据 -->
	<select id="before_closed_settle_check">
	<![CDATA[
		DECLARE @months VARCHAR(64)
		SET @months=?
		SELECT sc.SETTLE_ID ids FROM T_SETTLE_CONTRACT sc WHERE sc.EFFECTIVE != 1 AND sc.DEL_FLAG=1 AND (LEFT(sc.PROVIDED_DATE,7)=@months OR LEFT(sc.START_SETTLE_DATE, 7)=@months OR LEFT(sc.END_SETTLE_DATE, 7)=@months)
		UNION ALL
		SELECT ar.AMOUNT_RECEIVE_ID ids FROM T_AMOUNT_RECEIVE ar WHERE ar.DEL_FLAG=1 AND ar.APPLYFOR_STATE < 3 AND (LEFT(ar.PROVIDED_DATE, 7)=@months OR LEFT(ar.RECEIVE_DATE, 7)=@months)
		UNION ALL 
		SELECT adr.ADRECEIVE_ID ids FROM T_ADVANCE_RECEIVE adr WHERE adr.DEL_FLAG=1 AND adr.APPLYFOR_STATE < 3 AND (LEFT(adr.PROVIDED_DATE, 7)=@months OR LEFT(adr.ADVANCE_DATE, 7)=@months)
	]]>
	</select>
	<!-- 根据某个月份更新结算单的关账状态的结算列表 -->
	<select id="update_close_status_list">
		<![CDATA[
			DECLARE @months VARCHAR(64)
			SET @months=?
			SELECT SETTLE_ID FROM T_SETTLE_CONTRACT WHERE (START_SETTLE_DATE LIKE '%'+@months+'%' OR PROVIDED_DATE LIKE '%'+@months+'%') AND DEL_FLAG = 1
		]]>
	</select>
	
	<!-- 结算打印查所有设备 （不包含进出场和其他费用）-->
	<select id="get_settle_relate_equip">
		<![CDATA[
			DECLARE @settleId BIGINT
			SET @settleId=?
			;WITH A AS (SELECT
					DISTINCT E.EQUIP_DIARY_ID equipDiaryId,
					E.EQUIP_ID equipId,
					RC.VALUE AS equipCategoryName,
					ES.VALUE AS equipSpecificName
			FROM (
				SELECT EQUIP_ID, EQUIP_DIARY_ID FROM T_SETTLE_EQUIP_BRIEF WHERE SETTLE_ID = @settleId
				UNION ALL
				SELECT EQUIP_ID, EQUIP_DIARY_ID FROM T_OPERATOR_SALARY_STATEMENT WHERE SETTLE_ID = @settleId
				UNION ALL
				SELECT EQUIP_ID, EQUIP_DIARY_ID FROM T_SAFETY_MONITOR_SETTLE_STATEMENT WHERE SETTLE_ID = @settleId
			) E
			LEFT JOIN T_EQUIPMENT te ON te.EQUIP_ID = E.EQUIP_ID
			LEFT JOIN BM_REPERTORY_CATEGORY RC ON RC.CODE = te.EQUIP_CATEGORY
			LEFT JOIN BM_EQUIP_SPECIFIC ES ON ES.CODE = te.EQUIP_SPECIFIC), 
			B AS (SELECT 
				DISTINCT E.EQUIP_ID equipId 
			FROM (
				SELECT EQUIP_ID FROM T_SETTLE_ITEM_BRIEF WHERE SETTLE_ID = @settleId
				UNION ALL
				SELECT EQUIP_ID FROM T_OTHER_EXPENSE_STATEMENT WHERE SETTLE_ID = @settleId
				) E
			LEFT JOIN T_EQUIPMENT te ON te.EQUIP_ID = E.EQUIP_ID
			LEFT JOIN BM_REPERTORY_CATEGORY RC ON RC.CODE = te.EQUIP_CATEGORY
			LEFT JOIN BM_EQUIP_SPECIFIC ES ON ES.CODE = te.EQUIP_SPECIFIC) 
			SELECT 
				NULL equipDiaryId,
				B.*,
				RC.VALUE AS equipCategoryName,
				ES.VALUE AS equipSpecificName 
			FROM B 
			LEFT JOIN T_EQUIPMENT te ON te.EQUIP_ID = B.equipId
			LEFT JOIN BM_REPERTORY_CATEGORY RC ON RC.CODE = te.EQUIP_CATEGORY
			LEFT JOIN BM_EQUIP_SPECIFIC ES ON ES.CODE = te.EQUIP_SPECIFIC
			WHERE NOT EXISTS (SELECT * FROM A WHERE B.equipId=A.equipId)
			UNION ALL
			SELECT A.* FROM A
		  ]]>
	</select>
	
	<!-- 查出所有结算的设备（进出场和其他费用） -->
	<select id="get_settle_relate_equip2">
		<![CDATA[
			DECLARE @settleId BIGINT
			SET @settleId=?
			SELECT 
				DISTINCT E.EQUIP_ID equipId,
				RC.VALUE AS equipCategoryName,
				ES.VALUE AS equipSpecificName	 
			FROM (
				SELECT EQUIP_ID, 'SettleItemBrief' AS module, SI_BRIEF_ID id FROM T_SETTLE_ITEM_BRIEF WHERE SETTLE_ID = @settleId
				UNION ALL
				SELECT EQUIP_ID, 'OtherExpenseStatement' AS module, STATEMENT_ID id FROM T_OTHER_EXPENSE_STATEMENT WHERE SETTLE_ID = @settleId
				) E
			LEFT JOIN T_EQUIPMENT te ON te.EQUIP_ID = E.EQUIP_ID
			LEFT JOIN BM_REPERTORY_CATEGORY RC ON RC.CODE = te.EQUIP_CATEGORY
			LEFT JOIN BM_EQUIP_SPECIFIC ES ON ES.CODE = te.EQUIP_SPECIFIC
		]]>
	</select>
</mapper>