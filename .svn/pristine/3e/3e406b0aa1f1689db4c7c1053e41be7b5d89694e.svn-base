<?xml version="1.0" encoding="UTF-8"?>
<mapper namespace="terminal">
	<!-- 当前设备状态汇总 -->
	<select id="gather">
	<![CDATA[
		SELECT B.CODE BUSINESSSTATUS, COUNT(T.EQUIP_ID) COUNTS
		  FROM BM_BUILTIN_STORAGE B
		  LEFT JOIN T_EQUIPMENT T ON T.BUSINESS_STATUS = B.CODE AND T.STATUS < '6' AND T.DEL_FLAG = 1
		 WHERE 1 = 1
		 GROUP BY B.CODE
	]]>
	</select>
	<!-- 当前人员LBS -->
	<select id="list_user_lbs">
	<![CDATA[
		SELECT U.USERID userId, U.FULLNAME fullname, U.LONGITUDE longitude,
		U.LATITUDE latitude, CONVERT(CHAR(10), U.UPDATE_TIME, 23) updateTime  
		FROM APP_USER U WHERE U.STATUS = 1 AND U.DELFLAG = 0 AND U.USERID > 1 AND U.LATITUDE IS NOT NULL
	]]>
	</select>
	<!-- 待安装的设备列表 -->
	<select id="wait_install">
	<![CDATA[
		DECLARE @PROJECT_NAME VARCHAR(128)
		DECLARE @RECORD_ID VARCHAR(128)
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @BUILDING_NUM VARCHAR(64)
		SET @PROJECT_NAME = ?
		SET @RECORD_ID = ?
		SET @EXW_SERIAL = ?
		SET @BUILDING_NUM = ?
		SELECT DE.DISPATCH_EQUIP_ID dispatchEquipId,
		       DE.DISPATCH_ID       dispatchId,
		       D.PROJECT_NAME       projectName,
		       D.PROJECT_ID         projectId,
		       E.RECORD_ID          recordId,
		       E.EXW_SERIAL         exwSerial,
			   DE.BUILDING_NUM      buildingNum
		  FROM T_DISPATCH D, T_DISPATCH_EQUIP DE, T_EQUIPMENT E
		 WHERE D.APPLYFOR_STATE = '3'
		   AND D.RELATE_MODULE = 'CONTRACT_LEASE'
		   AND DE.DISPATCH_ID = D.DISPATCH_ID
		   AND DE.WORK_STATUS = '0'
		   AND DE.EQUIP_ID = E.EQUIP_ID
		   AND (
			    CHARINDEX((CASE WHEN @PROJECT_NAME IS NULL THEN D.PROJECT_NAME ELSE @PROJECT_NAME END), D.PROJECT_NAME) > 0
			   OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN E.RECORD_ID ELSE @RECORD_ID END), E.RECORD_ID) > 0
			   OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN D.EXW_SERIAL ELSE @EXW_SERIAL END), D.EXW_SERIAL) > 0
			   OR CHARINDEX((CASE WHEN @BUILDING_NUM IS NULL THEN DE.BUILDING_NUM ELSE @BUILDING_NUM END), DE.BUILDING_NUM) > 0
		   )
		   ORDER BY D.DISPATCH_ID desc
	]]>
	</select>
	<!-- 人员信息列表 -->
	<select id="list_practitioner">
	<![CDATA[
		DECLARE @MOBILE VARCHAR(16)
		DECLARE @PRACTI_NAME VARCHAR(64)
		DECLARE @KIND_WORK_NAME VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		SET @MOBILE = ?
		SET @PRACTI_NAME = ?
		SET @KIND_WORK_NAME = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		;WITH QUERY AS (
			SELECT P.PRACTI_ID practiId, P.MOBILE mobile, P.PRACTI_NAME practiName, B.VALUE kindWorkName, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM 
			  FROM T_PRACTITIONER P
			  LEFT JOIN BM_KIND_WORK B ON B.CODE = P.KIND_WORK
			 WHERE CHARINDEX((CASE WHEN @MOBILE IS NULL THEN P.MOBILE ELSE @MOBILE END), P.MOBILE) > 0
			    OR CHARINDEX((CASE WHEN @PRACTI_NAME IS NULL THEN P.PRACTI_NAME ELSE @PRACTI_NAME END), P.PRACTI_NAME) > 0
			    OR CHARINDEX((CASE WHEN @KIND_WORK_NAME IS NULL THEN B.VALUE ELSE @KIND_WORK_NAME END), B.VALUE) > 0
	    ) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!-- 配件信息列表 -->
	<select id="list_component">
	<![CDATA[
		DECLARE @COMPON_SERIAL VARCHAR(64)
		DECLARE @DIMENSIONS VARCHAR(64)
		DECLARE @COMPON_GENERIC_NAME VARCHAR(64)
		DECLARE @COMPON_SPECIFIC_NAME VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		DECLARE @STORE_ID BIGINT
		SET @COMPON_SERIAL = ?
		SET @DIMENSIONS = ?
		SET @COMPON_GENERIC_NAME = ?
		SET @COMPON_SPECIFIC_NAME = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		;WITH QUERY AS (
			SELECT C.COMPON_ID componId  ,CSS.EXW_SERIAL exwSerial, C.COMPON_SERIAL componSerial, C.CONSUME_COUNTS consumeCounts, C.DIMENSIONS dimensions, CG.VALUE componGenericName, CS.VALUE componSpecificName, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			  FROM T_COMPONENT C
			  LEFT JOIN BM_COMPONENT_GENERIC CG ON CG.CODE = C.COMPON_GENERIC
			  LEFT JOIN BM_COMPONENT_SPECIFIC CS ON CS.CODE = C.COMPON_SPECIFIC
			  LEFT JOIN T_EQUIPMENT CSS ON CSS.EQUIP_ID=C.EQUIP_ID
			  WHERE (CHARINDEX((CASE WHEN @COMPON_SERIAL IS NULL THEN C.COMPON_SERIAL ELSE @COMPON_SERIAL END), C.COMPON_SERIAL) > 0
			     OR CHARINDEX((CASE WHEN @DIMENSIONS IS NULL THEN C.DIMENSIONS ELSE @DIMENSIONS END), C.DIMENSIONS) > 0
			     OR CHARINDEX((CASE WHEN @COMPON_GENERIC_NAME IS NULL THEN CG.VALUE ELSE @COMPON_GENERIC_NAME END), CG.VALUE) > 0
			     OR CHARINDEX((CASE WHEN @COMPON_SPECIFIC_NAME IS NULL THEN CS.VALUE ELSE @COMPON_SPECIFIC_NAME END), CS.VALUE) > 0)
			     AND C.DEL_FLAG = '1'
		) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!-- 配件信息列表 -->
	<select id="list_component_dispatch">
		<![CDATA[
		DECLARE @COMPON_SERIAL VARCHAR(64)
		DECLARE @DIMENSIONS VARCHAR(64)
		DECLARE @COMPON_GENERIC_NAME VARCHAR(64)
		DECLARE @COMPON_SPECIFIC_NAME VARCHAR(64)
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		DECLARE @STORE_ID BIGINT
		SET @COMPON_SERIAL = ?
		SET @DIMENSIONS = ?
		SET @COMPON_GENERIC_NAME = ?
		SET @COMPON_SPECIFIC_NAME = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		SET @STORE_ID = ?
		SET @EXW_SERIAL=?

		;WITH QUERY AS (
			SELECT C.COMPON_ID componId  ,CSS.EXW_SERIAL exwSerial, C.COMPON_SERIAL componSerial, C.CONSUME_COUNTS consumeCounts, C.DIMENSIONS dimensions, CG.VALUE componGenericName, CS.VALUE componSpecificName, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_COMPONENT C
			  LEFT JOIN BM_COMPONENT_GENERIC CG ON CG.CODE = C.COMPON_GENERIC
			  LEFT JOIN BM_COMPONENT_SPECIFIC CS ON CS.CODE = C.COMPON_SPECIFIC
			    LEFT JOIN T_EQUIPMENT CSS ON CSS.EQUIP_ID=C.EQUIP_ID
			WHERE (CHARINDEX((CASE WHEN @COMPON_SERIAL IS NULL THEN C.COMPON_SERIAL ELSE @COMPON_SERIAL END), C.COMPON_SERIAL) > 0
				   OR CHARINDEX((CASE WHEN @DIMENSIONS IS NULL THEN C.DIMENSIONS ELSE @DIMENSIONS END), C.DIMENSIONS) > 0
				    OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN CSS.EXW_SERIAL ELSE @EXW_SERIAL END), CSS.EXW_SERIAL) > 0
				   OR CHARINDEX((CASE WHEN @COMPON_GENERIC_NAME IS NULL THEN CG.VALUE ELSE @COMPON_GENERIC_NAME END), CG.VALUE) > 0
				   OR CHARINDEX((CASE WHEN @COMPON_SPECIFIC_NAME IS NULL THEN CS.VALUE ELSE @COMPON_SPECIFIC_NAME END), CS.VALUE) > 0)
				  AND C.DEL_FLAG = '1'
				  AND (@STORE_ID IS NULL OR @STORE_ID = '' OR C.STORE_ID = @STORE_ID)
				  AND C.CONSUME_COUNTS <> 0
		) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!-- 获取设备列表 -->
	<select id="list_equip">
		<![CDATA[
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @RECORD_ID VARCHAR(64)
		DECLARE @EQUIP_VENDER VARCHAR(64)
		DECLARE @EQUIP_GENERIC_NAME VARCHAR(64)
		DECLARE @EQUIP_SPECIFIC_NAME VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		SET @EXW_SERIAL = ?
		SET @RECORD_ID = ?
		SET @EQUIP_VENDER = ?
		SET @EQUIP_GENERIC_NAME =?
		SET @EQUIP_SPECIFIC_NAME = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		;WITH QUERY AS (
			SELECT E.EQUIP_ID equipId  , E.EXW_SERIAL exwSerial, E.RECORD_ID recordId, E.EQUIP_VENDER equipVender, EG.VALUE equipGenericName, ES.VALUE equipSpecificName, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			  FROM T_EQUIPMENT E
			  LEFT JOIN BM_EQUIP_GENERIC EG ON EG.CODE = E.EQUIP_GENERIC
			  LEFT JOIN BM_EQUIP_SPECIFIC ES ON ES.CODE = E.EQUIP_SPECIFIC
			  WHERE (CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN E.EXW_SERIAL ELSE @EXW_SERIAL END), E.EXW_SERIAL) > 0
			     OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN E.RECORD_ID ELSE @RECORD_ID END), E.RECORD_ID) > 0
				 OR CHARINDEX((CASE WHEN @EQUIP_VENDER IS NULL THEN E.EQUIP_VENDER ELSE @EQUIP_VENDER END), E.EQUIP_VENDER) > 0
			     OR CHARINDEX((CASE WHEN @EQUIP_GENERIC_NAME IS NULL THEN EG.VALUE ELSE @EQUIP_GENERIC_NAME END), EG.VALUE) > 0
			     OR CHARINDEX((CASE WHEN @EQUIP_SPECIFIC_NAME IS NULL THEN ES.VALUE ELSE @EQUIP_SPECIFIC_NAME END), ES.VALUE) > 0)
			     AND E.DEL_FLAG = '1'
		) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!-- 安装信息列表 -->
	<select id="list_install_all">
	<![CDATA[
		DECLARE @PROJECT_NAME VARCHAR(64)
		DECLARE @RECORD_ID VARCHAR(64)
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @BUILDING_NUM VARCHAR(64)
		DECLARE @FLOW_STATE VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		SET @PROJECT_NAME = ?
		SET @RECORD_ID = ?
		SET @EXW_SERIAL = ?
		SET @BUILDING_NUM = ?
		SET @FLOW_STATE = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		;WITH QUERY AS (
			SELECT *, ROW_NUMBER() OVER (ORDER BY A.startinDate DESC) AS _ROWNUM
			  FROM (SELECT EI.INSTALL_ID        installId,
			               ED.PROJECT_NAME      projectName,
			               ED.RECORD_ID         recordId,
			               ED.EXW_SERIAL        exwserial,
			               ED.BUILDING_NUM      buildingnum,
			               CONVERT(varchar(10), EI.STARTIN_DATE, 23)      startinDate,
			               CONVERT(varchar(10), EI.ENDIN_DATE, 23)        endinDate,
			               EI.WALL_ATTACHE_QTY  wallAttacheQty,
			               EI.INSTALL_HEIGHT    installHeight,
			               EI.BRACHIUM          brachium,
			               EI.LONGITUDE         longitude,
			               EI.LATITUDE          latitude,
			               EI.USER_NAME         userName,
			               EF.DISPATCH_ID       dispatchId,
			               EF.FLOW_ID           flowId,
			               'EQUIP_INSTALL'      relateModule
			          FROM T_EQUIPMENT_INSTALL EI,
			               T_EQUIPMENT_FLOW    EF,
			               T_EQUIPMENT_DIARY   ED
			         WHERE EI.FLOW_ID = EF.FLOW_ID
			           AND EF.FLOW_ID = ED.FLOW_ID
			           AND EI.DEL_FLAG = 1
					   AND EF.FLOW_STATE = @FLOW_STATE
			           AND (CHARINDEX((CASE WHEN @PROJECT_NAME IS NULL THEN ED.PROJECT_NAME ELSE @PROJECT_NAME END), ED.PROJECT_NAME) > 0
			           			 OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN ED.RECORD_ID ELSE @RECORD_ID END), ED.RECORD_ID) > 0
			           			 OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN ED.EXW_SERIAL ELSE @EXW_SERIAL END), ED.EXW_SERIAL) > 0
			           			 OR CHARINDEX((CASE WHEN @BUILDING_NUM IS NULL THEN ED.BUILDING_NUM ELSE @BUILDING_NUM END), ED.BUILDING_NUM) > 0
			           	   )
			        ) A
		) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE) ORDER BY installId desc
	]]>
	</select>
	<!-- 待拆卸列表 -->
	<select id="list_dismantle_wait">
	<![CDATA[
		DECLARE @PROJECT_NAME VARCHAR(64)
		DECLARE @RECORD_ID VARCHAR(64)
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @BUILDING_NUM VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		SET @PROJECT_NAME = ?
		SET @RECORD_ID = ?
		SET @EXW_SERIAL = ?
		SET @BUILDING_NUM = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		;WITH QUERY AS (
			SELECT *, ROW_NUMBER() OVER (ORDER BY A.startinDate DESC) AS _ROWNUM 
			  FROM (SELECT EI.INSTALL_ID        installId,
			               ED.PROJECT_NAME      projectName,
			               ED.RECORD_ID         recordId,
			               ED.EXW_SERIAL        exwserial,
	                       ED.BUILDING_NUM      buildingnum,
			               CONVERT(varchar(10), EI.STARTIN_DATE, 23)      startinDate,
			               CONVERT(varchar(10), EI.ENDIN_DATE, 23)        endinDate,
			               EI.WALL_ATTACHE_QTY  wallAttacheQty,
			               EI.INSTALL_HEIGHT    installHeight,
			               EI.BRACHIUM          brachium,
			               EI.LONGITUDE         longitude,
			               EI.LATITUDE          latitude,
			               EI.USER_NAME         userName,
			               EF.DISPATCH_ID       dispatchId,
			               EF.FLOW_ID           flowId,
			               'EQUIP_INSTALL'      relateModule
			          FROM T_EQUIPMENT_INSTALL EI,
			               T_EQUIPMENT_FLOW    EF,
			               T_EQUIPMENT_DIARY   ED
			         WHERE EI.FLOW_ID = EF.FLOW_ID
			           AND EF.FLOW_ID = ED.FLOW_ID
			           AND (EF.FLOW_STATE = '2' OR EF.FLOW_STATE = '4')
			           AND (CHARINDEX((CASE WHEN @PROJECT_NAME IS NULL THEN ED.PROJECT_NAME ELSE @PROJECT_NAME END), ED.PROJECT_NAME) > 0 
			           		OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN ED.RECORD_ID ELSE @RECORD_ID END), ED.RECORD_ID) > 0
			           		OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN ED.EXW_SERIAL ELSE @EXW_SERIAL END), ED.EXW_SERIAL) > 0
			           		OR CHARINDEX((CASE WHEN @BUILDING_NUM IS NULL THEN ED.BUILDING_NUM ELSE @BUILDING_NUM END), ED.BUILDING_NUM) > 0
			           )
			        ) A
		) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE) ORDER BY installId desc
	]]>
	</select>
	<!-- 巡检信息列表 -->
	<select id="list_inspect_all">
	<![CDATA[
		DECLARE @PROJECT_NAME VARCHAR(64)
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @BUILDING_NUM VARCHAR(64)
		DECLARE @RECORD_ID VARCHAR(24)
	    DECLARE @START INT
	    DECLARE @PAGE_SIZE INT
		DECLARE @RECTIFICATION VARCHAR(24)
	DECLARE @INSPECT_RESULT VARCHAR(24)

	    SET @PROJECT_NAME = ?
   	    SET @EXW_SERIAL = ?
   	    SET @BUILDING_NUM = ?
   	    SET @RECORD_ID = ?
	    SET @START = ?
	    SET @PAGE_SIZE = ?
		SET @RECTIFICATION = ?
	SET @INSPECT_RESULT =?
	    ;WITH QUERY AS (
	      SELECT
			CONVERT(CHAR(10),A.inspectDate,23) inspectDate,inspectId,inspectPepoles,inspectResult,exwserial,buildingnum,recordId,
			inspectResultName,statusName,remark,longitude,latitude,projectName,rectification,relateModule
			, ROW_NUMBER() OVER (ORDER BY A.inspectDate DESC) AS _ROWNUM
	        FROM (SELECT EI.INSPECT_DATE     inspectDate,
	                     EI.INSPECT_ID        inspectId,
	                     EI.INSPECT_SERIAL    inspectSerial,
	                     EI.INSPECT_PEPOLES   inspectPepoles,
	                     EI.INSPECT_RESULT    inspectResult,
	                     EI.EXW_SERIAL        exwserial,
	                     EI.BUILDING_NUM      buildingnum,
	                     EI.RECORD_ID         recordId,
	                     B.VALUE              inspectResultName,
	                     EI.STATUS            statusName,
	                     EI.REMARK            remark,
	                     EI.LONGITUDE         longitude,
	                     EI.LATITUDE          latitude,
	                     ED.PROJECT_NAME      projectName,
						 EI.RECTIFICATION     rectification,
	                     'EQUIP_INSPECT'      relateModule
	                FROM T_EQUIPMENT_INSPECT EI LEFT JOIN BM_INSPECT_RESULT B ON B.CODE = EI.INSPECT_RESULT, T_EQUIPMENT_INSPECT_SCHEMA EIS, T_EQUIPMENT_DIARY ED
	               WHERE ED.EQUIP_DIARY_ID = EIS.EQUIP_DIARY_ID
	                 AND EIS.INSPECT_SCHEMA_ID = EI.INSPECT_SCHEMA_ID	
	                 AND  (CHARINDEX((CASE WHEN @PROJECT_NAME IS NULL THEN ED.PROJECT_NAME ELSE @PROJECT_NAME END), ED.PROJECT_NAME) > 0
												OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN EI.EXW_SERIAL ELSE @EXW_SERIAL END), EI.EXW_SERIAL) > 0
												OR CHARINDEX((CASE WHEN @BUILDING_NUM IS NULL THEN EI.BUILDING_NUM ELSE @BUILDING_NUM END), EI.BUILDING_NUM) > 0
												OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN EI.RECORD_ID ELSE @RECORD_ID END), EI.RECORD_ID) > 0
	                    	)
									AND ( EI.RECTIFICATION ='1' OR CHARINDEX(EI.INSPECT_RESULT,(CASE WHEN @INSPECT_RESULT IS NULL THEN EI.INSPECT_RESULT ELSE @INSPECT_RESULT END)) > 0)
				
	              UNION ALL
	              SELECT IM.INSPECT_DATE     inspectDate,
	                     IM.INSPECT_ID        inspectId,
	                     NULL                 inspectSerial,
	                     IM.INSPECT_PEPOLES   inspectPepoles,
	                     IM.INSPECT_RESULT    inspectResult,
	                     IM.EXW_SERIAL        exwserial,
	                     IM.BUILDING_NUM      buildingnum,
	                     IM.RECORD_ID         recordId,
	                     B.VALUE              inspectResultName,
	                     NULL                 statusName,
	                     IM.REMARK            remark,
	                     IM.LONGITUDE         longitude,
	                     IM.LATITUDE          latitude,
	                     IM.PROJECT_NAME      projectName,
						 IM.RECTIFICATION     rectification,
	                     'INSPECT_MANAGE'     relateModule
	                FROM T_INSPECT_MANAGE IM LEFT JOIN BM_INSPECT_RESULT B ON B.CODE = IM.INSPECT_RESULT
	               WHERE  (CHARINDEX((CASE WHEN @PROJECT_NAME IS NULL THEN IM.PROJECT_NAME ELSE @PROJECT_NAME END), IM.PROJECT_NAME) > 0
	               			OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN IM.EXW_SERIAL ELSE @EXW_SERIAL END), IM.EXW_SERIAL) > 0
	                		 OR CHARINDEX((CASE WHEN @BUILDING_NUM IS NULL THEN IM.BUILDING_NUM ELSE @BUILDING_NUM END), IM.BUILDING_NUM) > 0
	                		 OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN IM.RECORD_ID ELSE @RECORD_ID END), IM.RECORD_ID) > 0) 
											AND ( IM.RECTIFICATION = '1' OR (CHARINDEX(Im.INSPECT_RESULT,(CASE WHEN @INSPECT_RESULT IS NULL THEN Im.INSPECT_RESULT ELSE @INSPECT_RESULT END))> 0))
	              ) A
	    ) SELECT (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE) ORDER BY inspectDate desc
	]]>
	</select>
	<!-- 巡检信息列表 -->
	<select id="list_inspect_all2">
	<![CDATA[
		DECLARE @PROJECT_NAME VARCHAR(64)
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @BUILDING_NUM VARCHAR(64)
		DECLARE @RECORD_ID VARCHAR(24)
	    DECLARE @START INT
	    DECLARE @PAGE_SIZE INT
		DECLARE @RECTIFICATION VARCHAR(24)
	DECLARE @INSPECT_RESULT VARCHAR(24)

	    SET @PROJECT_NAME = ?
   	    SET @EXW_SERIAL = ?
   	    SET @BUILDING_NUM = ?
   	    SET @RECORD_ID = ?
	    SET @START = ?
	    SET @PAGE_SIZE = ?
		SET @RECTIFICATION = ?
	SET @INSPECT_RESULT =?
	    ;WITH QUERY AS (
	      SELECT
			CONVERT(CHAR(10),A.inspectDate,23) inspectDate,inspectId,inspectPepoles,inspectResult,exwserial,buildingnum,recordId,
			inspectResultName,statusName,remark,longitude,latitude,projectName,rectification,relateModule
			, ROW_NUMBER() OVER (ORDER BY A.inspectDate DESC) AS _ROWNUM
	        FROM (SELECT EI.INSPECT_DATE     inspectDate,
	                     EI.INSPECT_ID        inspectId,
	                     EI.INSPECT_SERIAL    inspectSerial,
	                     EI.INSPECT_PEPOLES   inspectPepoles,
	                     EI.INSPECT_RESULT    inspectResult,
	                     EI.EXW_SERIAL        exwserial,
	                     EI.BUILDING_NUM      buildingnum,
	                     EI.RECORD_ID         recordId,
	                     B.VALUE              inspectResultName,
	                     EI.STATUS            statusName,
	                     EI.REMARK            remark,
	                     EI.LONGITUDE         longitude,
	                     EI.LATITUDE          latitude,
	                     ED.PROJECT_NAME      projectName,
						 EI.RECTIFICATION     rectification,
	                     'EQUIP_INSPECT'      relateModule
	                FROM T_EQUIPMENT_INSPECT EI LEFT JOIN BM_INSPECT_RESULT B ON B.CODE = EI.INSPECT_RESULT, T_EQUIPMENT_INSPECT_SCHEMA EIS, T_EQUIPMENT_DIARY ED
	               WHERE ED.EQUIP_DIARY_ID = EIS.EQUIP_DIARY_ID
	                 AND EIS.INSPECT_SCHEMA_ID = EI.INSPECT_SCHEMA_ID	
	                 AND  (CHARINDEX((CASE WHEN @PROJECT_NAME IS NULL THEN ED.PROJECT_NAME ELSE @PROJECT_NAME END), ED.PROJECT_NAME) > 0
												OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN EI.EXW_SERIAL ELSE @EXW_SERIAL END), EI.EXW_SERIAL) > 0
												OR CHARINDEX((CASE WHEN @BUILDING_NUM IS NULL THEN EI.BUILDING_NUM ELSE @BUILDING_NUM END), EI.BUILDING_NUM) > 0
												OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN EI.RECORD_ID ELSE @RECORD_ID END), EI.RECORD_ID) > 0
	                    	)
									AND ( (EI.RECTIFICATION !='1' ) AND CHARINDEX(EI.INSPECT_RESULT,(CASE WHEN @INSPECT_RESULT IS NULL THEN EI.INSPECT_RESULT ELSE @INSPECT_RESULT END)) > 0)
				
	              UNION ALL
	              SELECT IM.INSPECT_DATE     inspectDate,
	                     IM.INSPECT_ID        inspectId,
	                     NULL                 inspectSerial,
	                     IM.INSPECT_PEPOLES   inspectPepoles,
	                     IM.INSPECT_RESULT    inspectResult,
	                     IM.EXW_SERIAL        exwserial,
	                     IM.BUILDING_NUM      buildingnum,
	                     IM.RECORD_ID         recordId,
	                     B.VALUE              inspectResultName,
	                     NULL                 statusName,
	                     IM.REMARK            remark,
	                     IM.LONGITUDE         longitude,
	                     IM.LATITUDE          latitude,
	                     IM.PROJECT_NAME      projectName,
						 IM.RECTIFICATION     rectification,
	                     'INSPECT_MANAGE'     relateModule
	                FROM T_INSPECT_MANAGE IM LEFT JOIN BM_INSPECT_RESULT B ON B.CODE = IM.INSPECT_RESULT
	               WHERE  (CHARINDEX((CASE WHEN @PROJECT_NAME IS NULL THEN IM.PROJECT_NAME ELSE @PROJECT_NAME END), IM.PROJECT_NAME) > 0
	               			OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN IM.EXW_SERIAL ELSE @EXW_SERIAL END), IM.EXW_SERIAL) > 0
	                		 OR CHARINDEX((CASE WHEN @BUILDING_NUM IS NULL THEN IM.BUILDING_NUM ELSE @BUILDING_NUM END), IM.BUILDING_NUM) > 0
	                		 OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN IM.RECORD_ID ELSE @RECORD_ID END), IM.RECORD_ID) > 0) 
											AND ( (IM.RECTIFICATION != '1') AND (CHARINDEX(Im.INSPECT_RESULT,(CASE WHEN @INSPECT_RESULT IS NULL THEN Im.INSPECT_RESULT ELSE @INSPECT_RESULT END))> 0))
	              ) A
	    ) SELECT (SELECT COUNT(*) FROM QUERY) AS 'count',* FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE) ORDER BY inspectDate desc
	]]>
	</select>
	<!-- 拆卸信息列表 -->
	<select id="list_dismantle_all">
	<![CDATA[
		DECLARE @PROJECT_NAME VARCHAR(64)
		DECLARE @RECORD_ID VARCHAR(64)
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @BUILDING_NUM VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		SET @PROJECT_NAME = ?
		SET @RECORD_ID = ?
		SET @EXW_SERIAL = ?
		SET @BUILDING_NUM = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		;WITH QUERY AS (
	      SELECT *, ROW_NUMBER() OVER (ORDER BY A.startdisDate DESC) AS _ROWNUM 
	        FROM (SELECT DIS.DISMANTLE_ID     dismantleId,
	                     ED.PROJECT_NAME      projectName,
	                     ED.RECORD_ID         recordId,
	                     ED.EXW_SERIAL        exwserial,
			             ED.BUILDING_NUM      buildingnum,
	                     CONVERT(varchar(10), DIS.STARTDIS_DATE, 23)    startdisDate,
	                     CONVERT(varchar(10), DIS.ENDDIS_DATE, 23)      enddisDate,
	                     DIS.DISMANTLE_HEIGHT dismantleHeight,
	                     DIS.LONGITUDE        longitude,
	                     DIS.LATITUDE         latitude,
	                     DIS.USER_NAME        userName,
	                     EF.DISPATCH_ID       dispatchId,
	                     'EQUIP_DISMANTLE'    relateModule
	                FROM T_EQUIPMENT_DISMANTLE DIS,
	                     T_EQUIPMENT_FLOW      EF,
	                     T_EQUIPMENT_DIARY     ED
	               WHERE DIS.FLOW_ID = EF.FLOW_ID
	                 AND EF.FLOW_ID = ED.FLOW_ID
	                 AND (     CHARINDEX((CASE WHEN @PROJECT_NAME IS NULL THEN ED.PROJECT_NAME ELSE @PROJECT_NAME END), ED.PROJECT_NAME) > 0 
	                 		OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN ED.RECORD_ID ELSE @RECORD_ID END), ED.RECORD_ID) > 0 
	                 		OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN ED.EXW_SERIAL ELSE @EXW_SERIAL END), ED.EXW_SERIAL) > 0 
							OR CHARINDEX((CASE WHEN @BUILDING_NUM IS NULL THEN ED.BUILDING_NUM ELSE @BUILDING_NUM END), ED.BUILDING_NUM) > 0 
	                 		)
	              UNION ALL
	              SELECT DM.DISMANTLE_ID      dismantleId,
	                     DM.PROJECT_NAME      projectName,
	                     DM.RECORD_ID         recordId,
	                     DM.EXW_SERIAL		  exwserial,
			             DM.BUILDING_NUM	  buildingnum,
	                     CONVERT(varchar(10), DM.STARTDIS_DATE, 23)     startdisDate,
	                     CONVERT(varchar(10), DM.ENDDIS_DATE, 23)       enddisDate,
	                     DM.DISMANTLE_HEIGHT  dismantleHeight,
	                     DM.LONGITUDE         longitude,
	                     DM.LATITUDE          latitude,
	                     DM.USER_NAME         userName,
	                     NULL                 dispatchId,
	                     'DISMANTLE_MANAGE'   relateModule
	                FROM T_DISMANTLE_MANAGE DM
	               WHERE CHARINDEX((CASE WHEN @PROJECT_NAME IS NULL THEN DM.PROJECT_NAME ELSE @PROJECT_NAME END), DM.PROJECT_NAME) > 0 
	                  OR CHARINDEX((CASE WHEN @RECORD_ID IS NULL THEN DM.RECORD_ID ELSE @RECORD_ID END), DM.RECORD_ID) > 0 
	                  OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN DM.EXW_SERIAL ELSE @EXW_SERIAL END), DM.EXW_SERIAL) > 0 
					  OR CHARINDEX((CASE WHEN @BUILDING_NUM IS NULL THEN DM.BUILDING_NUM ELSE @BUILDING_NUM END), DM.BUILDING_NUM) > 0 
	              ) A
	    ) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE) ORDER BY dismantleId desc
	]]>
	</select>
	<select id="list_chk_man">
	<![CDATA[
		SELECT U.USERID, U.FULLNAME AS USERNAME FROM APP_USER U,USER_ROLE R WHERE U.USERID=R.USERID AND STATUS=1 AND U.DELFLAG=0 
			AND U.FULLNAME LIKE ? AND R.ROLEID=? ORDER BY U.USERID
	]]>	
	</select>
	<select id="list_project">
	<![CDATA[
		SELECT P.PROJECT_ID,P.PROJECT_SERIAL,P.PROJECT_NAME,P.ADDRESS FROM T_PROJECT P WHERE P.DEL_FLAG=1
				AND P.PROJECT_NAME LIKE ? ORDER BY P.PROJECT_ID
	]]>	
	</select>
	<select id="list_inuse_project">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
         DECLARE @STATUS  VARCHAR(64)
        SET @START = ?
        SET @PAGE_SIZE =?
        SET @STATUS = ?
        ;WITH QUERY AS (
		SELECT COUNT(_EQUIP.EQUIP_ID) AS coutequip, P.PROJECT_ID AS projectId, P.PROJECT_SERIAL AS projectSerial, P.PROJECT_NAME AS projectName, P.ADDRESS AS address
		, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
		FROM  T_EQUIPMENT _EQUIP, T_PROJECT P
			Where _EQUIP.PROJECT_ID = P.PROJECT_ID
			AND P.DEL_FLAG = 1
			AND _EQUIP.DEL_FLAG = 1
			AND P.STATUS = @STATUS
			 GROUP BY P.PROJECT_ID, P.PROJECT_SERIAL, P.PROJECT_NAME, P.ADDRESS) 
			SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>	
	</select>
<!-- 	<select id="list_inuse_project">  by_dispatch
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
         DECLARE @STATUS  VARCHAR(64)
        SET @START = ?
        SET @PAGE_SIZE =?
        SET @STATUS = ?
        ;WITH QUERY AS (
		SELECT COUNT(_DE.EQUIP_ID) AS coutequip, P.PROJECT_ID AS projectId, P.PROJECT_SERIAL AS projectSerial, P.PROJECT_NAME AS projectName, P.ADDRESS AS address
		, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
		FROM  T_EQUIPMENT _EQUIP
			FULL JOIN T_DISPATCH_EQUIP _DE ON _DE.EQUIP_ID = _EQUIP.EQUIP_ID
			FULL JOIN T_DISPATCH _DISPATCH ON _DISPATCH.DISPATCH_ID = _DE.DISPATCH_ID 
			FULL JOIN T_PROJECT P ON _DISPATCH.PROJECT_ID = P.PROJECT_ID
			WHERE P.DEL_FLAG = 1
			AND P.STATUS = @STATUS
			 GROUP BY P.PROJECT_ID, P.PROJECT_SERIAL, P.PROJECT_NAME, P.ADDRESS) 
			SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>	
	</select> -->
	<select id="list_users">
	<![CDATA[
		SELECT U.USERID, U.FULLNAME AS USERNAME,U.MOBILE ,D.DEP_NAME DEPNAME
		FROM APP_USER U
		LEFT JOIN DEPARTMENT D ON U.DEP_ID = D.DEP_ID
		WHERE U.DELFLAG=0 and STATUS=1
		AND (U.FULLNAME LIKE ? or D.DEP_NAME LIKE ?)
		ORDER BY U.USERID
	]]>
	</select>
	<select id="list_usersForConstruct">
		<![CDATA[
		SELECT U.USERID, U.FULLNAME AS USERNAME,U.MOBILE
		FROM APP_USER U
		WHERE U.DELFLAG=0 and STATUS=1
		AND U.FULLNAME LIKE ?
		ORDER BY U.USERID
	]]>
	</select>
	<select id="list_types">
	<![CDATA[
		SELECT *,1 enable FROM T_APP_REPAIR_TYPE where PARENTID=? ORDER BY ID
		]]>	
	</select>

	<select id="list_app_repair">
		<![CDATA[
		SELECT R.*,(SELECT FULLNAME FROM APP_USER WHERE USERID=R.CREATE_BY) AS CREATE_BYNAME,CASE R.STATE WHEN '1' THEN '待处理' WHEN '2' THEN '派工中' 	WHEN '3' THEN '处理中' WHEN '4' THEN '完成' WHEN '0' THEN '结案' END AS STATENAME  
		FROM T_APP_REPAIR R 
		WHERE R.STATE=?  AND (R.CREATE_BY =? OR PROC_MAN LIKE ? ) AND (R.PROJ_NAME LIKE ? OR R.RECORD_SERIAL LIKE ?  OR R.EXW_SERIAL LIKE ? OR R.BUILDING_NUM LIKE ? OR R.EQUIP_ID= ?) ORDER BY R.REPID DESC
		]]>			
	</select>

	<!-- 开工项目-设备-维修信息 -->
	<select id="list_equip_repair">
		<![CDATA[
		SELECT R.*,(SELECT FULLNAME FROM APP_USER WHERE USERID=R.CREATE_BY) AS CREATE_BYNAME,CASE R.STATE WHEN '1' THEN '待处理' WHEN '2' THEN '派工中' 	WHEN '3' THEN '处理中' WHEN '4' THEN '完成' WHEN '0' THEN '结案' END AS STATENAME  
		FROM T_APP_REPAIR R 
		WHERE   R.CREATE_BY =?  AND  R.EQUIP_ID=? ORDER BY R.REPID DESC		]]>			
	</select>
		<select id="list_app_repair_admin">
		<![CDATA[
		SELECT R.*,(SELECT FULLNAME FROM APP_USER WHERE USERID=R.CREATE_BY) AS CREATE_BYNAME,CASE R.STATE WHEN '1' THEN '待处理' WHEN '2' THEN '派工中' 	WHEN '3' THEN '处理中' WHEN '4' THEN '完成' WHEN '0' THEN '结案' END AS STATENAME  
		FROM T_APP_REPAIR R 
		WHERE R.STATE=?   AND (R.PROJ_NAME LIKE ? OR R.RECORD_SERIAL LIKE ?  OR R.EXW_SERIAL LIKE ? OR R.BUILDING_NUM LIKE ? OR R.EQUIP_ID= ?)   ORDER BY R.REPID DESC
		]]>			
	</select>
		<select id="count_app_repair">
		<![CDATA[
		SELECT COUNT(*) as NUM,STATE
		FROM T_APP_REPAIR R 
		WHERE (R.PROJ_NAME LIKE ? OR R.RECORD_SERIAL LIKE ?  OR R.EXW_SERIAL LIKE ? OR R.BUILDING_NUM LIKE ? ) GROUP BY R.STATE
		]]>			
	</select>
	<select id="list_app_equips">
		<![CDATA[
		SELECT * FROM (
			SELECT  ROW_NUMBER() OVER (ORDER BY R.EQUIP_ID) AS _ROWNUM ,R.EQUIP_GENERIC,R.EQUIP_SERIAL,R.PROJECT_ID,R.EQUIP_ID ,R.EXW_SERIAL,R.BUILDING_NUM,R.PROJECT_NAME,R.RECORD_ID,(SELECT VALUE FROM BM_EQUIP_SPECIFIC WHERE CODE = R.EQUIP_SPECIFIC) as SPECIFICNAME  
			FROM T_EQUIPMENT R WHERE R.STATUS IN(0,1,2,4,6,7,9) AND R.PROJECT_NAME LIKE ? OR R.EXW_SERIAL LIKE ? OR R.RECORD_ID like ?) A WHERE  A._ROWNUM>= ? AND A._ROWNUM <= ?
		]]>			
	</select>
	<select id="get_app_equipnums">
		<![CDATA[
		SELECT  count(*) AS _ROWNUM FROM T_EQUIPMENT R WHERE R.STATUS IN(0,1,2) AND R.PROJECT_NAME LIKE ? OR R.EXW_SERIAL LIKE ? OR R.RECORD_ID like ?
		]]>			
	</select>
	<select id="review_count">
	<![CDATA[
		SELECT COUNT(*) AS NUM,SCORE FROM T_REVIEW WHERE  RELATE_ID=? AND RELATE_MODULE=? GROUP BY SCORE	
			]]>	
	</select>
	<select id="get_currentAppPracti">
	<![CDATA[
		SELECT * FROM T_PRACTITIONER P
		LEFT JOIN T_CORP_INFO CI ON P.CORP_ID = CI.CORP_ID
		WHERE P.USERID = ?	
			]]>
	</select>
	<select id="get_currentAppUser">
	<![CDATA[
		SELECT * FROM APP_USER P
		WHERE P.USERID = ?
			]]>
	</select>
		<select id="get_currentAntiFallAppUser">
	<![CDATA[
		SELECT * FROM T_CORP_INFO P
		WHERE P.CORP_ID = ?	
			]]>	
	</select>
	
		<select id="get_toSendUser">
	<![CDATA[
	 select * from T_CORP_INFO where CORP_ID=(
		select PB_ENT from T_CONTRACT_LEASE where contract_ID=( select RELATE_ID from T_DISPATCH where DISPATCH_ID=?));
			]]>	
	</select>
	
	<select id="get_toSendUserFromContratArrange">
	<![CDATA[
	 select * from T_CORP_INFO where CORP_ID=?;
			]]>	
	</select>
    <!-- 项目配件信息列表 -->
    <select id="list_project_compon">
        <![CDATA[
		DECLARE @COMPON_SERIAL VARCHAR(64)
		DECLARE @DIMENSIONS VARCHAR(64)
		DECLARE @COMPON_GENERIC_NAME VARCHAR(64)
		DECLARE @COMPON_SPECIFIC_NAME VARCHAR(64)
		DECLARE @EXW_SERIAL VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		DECLARE @PROJECT_ID BIGINT
		SET @COMPON_SERIAL = ?
		SET @DIMENSIONS = ?
		SET @COMPON_GENERIC_NAME = ?
		SET @COMPON_SPECIFIC_NAME = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		SET @PROJECT_ID = ?
		SET @EXW_SERIAL = ?
		;WITH QUERY AS (
			SELECT C.COMPON_ID componId  , CSS.EXW_SERIAL exwSerial,C.COMPON_SERIAL componSerial,PC.COUNTS freeCounts, C.DIMENSIONS dimensions, CG.VALUE componGenericName, CS.VALUE componSpecificName, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			  FROM T_PROJECT_COMPON PC
			  LEFT JOIN T_COMPONENT C ON C.COMPON_ID = PC.COMPON_ID
			  LEFT JOIN BM_COMPONENT_GENERIC CG ON CG.CODE = C.COMPON_GENERIC
			  LEFT JOIN BM_COMPONENT_SPECIFIC CS ON CS.CODE = C.COMPON_SPECIFIC
			  LEFT JOIN T_EQUIPMENT CSS ON CSS.EQUIP_ID=C.EQUIP_ID
			  WHERE (CHARINDEX((CASE WHEN @COMPON_SERIAL IS NULL THEN C.COMPON_SERIAL ELSE @COMPON_SERIAL END), C.COMPON_SERIAL) > 0
			     OR CHARINDEX((CASE WHEN @DIMENSIONS IS NULL THEN C.DIMENSIONS ELSE @DIMENSIONS END), C.DIMENSIONS) > 0
			      OR CHARINDEX((CASE WHEN @EXW_SERIAL IS NULL THEN CSS.EXW_SERIAL ELSE @EXW_SERIAL END), CSS.EXW_SERIAL) > 0
			     OR CHARINDEX((CASE WHEN @COMPON_GENERIC_NAME IS NULL THEN CG.VALUE ELSE @COMPON_GENERIC_NAME END), CG.VALUE) > 0
			     OR CHARINDEX((CASE WHEN @COMPON_SPECIFIC_NAME IS NULL THEN CS.VALUE ELSE @COMPON_SPECIFIC_NAME END), CS.VALUE) > 0)
			     AND C.DEL_FLAG = '1' AND PC.COUNTS <> 0
			     AND PC.STATUS = '0'
			     AND (@PROJECT_ID IS NULL OR @PROJECT_ID = '' OR PC.PROJECT_ID = @PROJECT_ID)
		) SELECT
			componId,
			componSerial,
			SUM(freeCounts) consumeCounts,
			dimensions,
			componGenericName,
			componSpecificName,
			exwSerial
		FROM(
		SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)) A
		GROUP BY componId,componSerial,dimensions,componGenericName,componSpecificName,exwSerial
	]]>
    </select>
	<!-- 车俩列表 -->
    <select id="list_car">
        <![CDATA[
		DECLARE @LICENSE_PLATE VARCHAR(64)
		DECLARE @SEDAN VARCHAR(64)
		DECLARE @PROPERTY_NAME VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		SET @LICENSE_PLATE = ?
		SET @SEDAN = ?
		SET @PROPERTY_NAME = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		;WITH QUERY AS (
			SELECT top(@PAGE_SIZE) C.CAR_ID carId  , C.LICENSE_PLATE licensePlate, C.SEDAN sedan, C.PROPERTY_NAME propertyName, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			  FROM T_CAR C
			  WHERE (CHARINDEX((CASE WHEN @LICENSE_PLATE IS NULL THEN C.LICENSE_PLATE ELSE @LICENSE_PLATE END), C.LICENSE_PLATE) > 0
			     OR CHARINDEX((CASE WHEN @SEDAN IS NULL THEN C.SEDAN ELSE @SEDAN END), C.SEDAN) > 0
				 OR CHARINDEX((CASE WHEN @PROPERTY_NAME IS NULL THEN C.PROPERTY_NAME ELSE @PROPERTY_NAME END), C.PROPERTY_NAME) > 0)
				 AND C.STATUS = '1'
			     AND C.DEL_FLAG = '1'
		) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE) ORDER BY carId DESC
        ]]>
    </select>
	<!-- 装车物流列表 -->
	<select id="list_logistics">
		<![CDATA[
		DECLARE @KEYWORD VARCHAR(64)
		DECLARE @DELIVERY_MAN VARCHAR(64)
		DECLARE @LICENSE_PLATE VARCHAR(64)
		DECLARE @SEND_WAREHOUSE_NAME VARCHAR(64)
		DECLARE @RECEIVE_WAREHOUSE_NAME VARCHAR(64)
		DECLARE @SUMMARY VARCHAR(64)
		DECLARE @STATUS VARCHAR(64)
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		SET @KEYWORD = ?
		SET @STATUS = ?
		SET @START = ?
		SET @PAGE_SIZE = ?
		SET @DELIVERY_MAN = @KEYWORD
		SET @SEND_WAREHOUSE_NAME = @KEYWORD
		SET @RECEIVE_WAREHOUSE_NAME = @KEYWORD
		SET @LICENSE_PLATE = @KEYWORD
		SET @SUMMARY = @KEYWORD
		;WITH QUERY AS (
			SELECT L.LOGI_ID logiId  ,L.DISID disId,L.DELIVERY_DATE deliveryDate, L.DELIVERY_MAN deliveryMan, L.SEND_WAREHOUSE_NAME sendWarehouseName,L.RECEIVE_WAREHOUSE_NAME receiveWarehouseName, L.PROPERTY_NAME propertyName,L.SUMMARY summary,L.STATUS status,L.LICENSE_PLATE licensePlate, ROW_NUMBER() OVER (ORDER BY L.LOGI_ID DESC) AS _ROWNUM
			  FROM T_APP_LOGISTICS L
			  WHERE (CHARINDEX((CASE WHEN @DELIVERY_MAN IS NULL THEN L.DELIVERY_MAN ELSE @DELIVERY_MAN END), L.DELIVERY_MAN) > 0
			     OR CHARINDEX((CASE WHEN @SEND_WAREHOUSE_NAME IS NULL THEN L.SEND_WAREHOUSE_NAME ELSE @SEND_WAREHOUSE_NAME END), L.SEND_WAREHOUSE_NAME) > 0
				 OR CHARINDEX((CASE WHEN @RECEIVE_WAREHOUSE_NAME IS NULL THEN L.RECEIVE_WAREHOUSE_NAME ELSE @RECEIVE_WAREHOUSE_NAME END), L.RECEIVE_WAREHOUSE_NAME) > 0
				 OR CHARINDEX((CASE WHEN @LICENSE_PLATE IS NULL THEN L.LICENSE_PLATE ELSE @LICENSE_PLATE END), L.LICENSE_PLATE) > 0
				 OR L.SUMMARY LIKE '%'+@SUMMARY+'%')
				 AND CHARINDEX((CASE WHEN @STATUS IS NULL THEN L.STATUS ELSE @STATUS END), L.STATUS) > 0
		) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE) ORDER BY _ROWNUM
        ]]>
	</select>
	<!-- 当前设备各状态数量统计 -->
	<select id="equip_count">
	<![CDATA[
		Select INUSE=(COUNT(case when(BUSINESS_STATUS = '6') then '1' end))
		,NOTINUSE=(COUNT(case when(BUSINESS_STATUS ='0'  AND STATUS !=6) then '2' end))
		,BROKEN=(COUNT(case when(BUSINESS_STATUS='7' or BUSINESS_STATUS ='9' or BUSINESS_STATUS = 'A') then '3' end)) 
		,OUT=(COUNT(case when(BUSINESS_STATUS >='1' AND BUSINESS_STATUS <='5') then '4' end)) 
		,SCRAP= (COUNT(case when(BUSINESS_STATUS = '0' AND STATUS =6) then '1' end))
		from T_EQUIPMENT t where DEL_FLAG = 1
	]]>
	</select>
	<!-- 查看指定状态的设备 -->
<!-- 	<select id="list_equip_on_status">
		<![CDATA[
		DECLARE @BUSINESS_STATUS VARCHAR(128)
		DECLARE @BUSINESS_STATUS1 VARCHAR(128)
		SET @BUSINESS_STATUS = ?
		SET @BUSINESS_STATUS1 = ?
		 Select D.* from T_EQUIPMENT D where D.DEL_FLAG = 1  
		 and ((CHARINDEX((CASE WHEN @BUSINESS_STATUS IS NULL THEN D.BUSINESS_STATUS ELSE @BUSINESS_STATUS END), D.BUSINESS_STATUS) > 0 
		 or CHARINDEX((CASE WHEN @BUSINESS_STATUS1 IS NULL THEN D.BUSINESS_STATUS ELSE @BUSINESS_STATUS1 END), D.BUSINESS_STATUS) > 0)) 
        ]]>
	</select> -->
	<!-- 结算详情 -->
	<select id="list_settle_contract">
	<![CDATA[
		DECLARE @PROJECT_ID  VARCHAR(24)
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        SET @PROJECT_ID =?
        SET @START =?
        SET @PAGE_SIZE = ?  	
             ;WITH QUERY AS (
			SELECT SUM(T.SETTLE_AMOUNT) totalAmout,
			SUM(T.BALANCE_AMOUNT) totalFinishAmount,
			SUM(T.FINISHED_AMOUNT) totalBalanceAmount,
			T.BALANCE_AMOUNT balanceAmount,T.FINISHED_AMOUNT finishAmount,T.SETTLE_AMOUNT settleAmout, T.CONTRACT_SERIAL contractSerial,
			T.PA_ENT_NAME paEntName,T.START_SETTLE_DATE startDate,T.END_SETTLE_DATE endDate,
			ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			 FROM T_SETTLE_CONTRACT T 
			 WHERE PROJECT_ID = @PROJECT_ID  AND T.DEL_FLAG = 1 GROUP BY 
			 T.SETTLE_AMOUNT,T.FINISHED_AMOUNT,T.BALANCE_AMOUNT,T.BALANCE_AMOUNT,T.FINISHED_AMOUNT,T.SETTLE_AMOUNT,T.CONTRACT_SERIAL ,
			 T.PA_ENT_NAME,T.START_SETTLE_DATE,T.END_SETTLE_DATE
			 )SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!--消息统计 -->
	<select id="message_count">
	<![CDATA[
		SELECT COUNT(*) COUNTS from T_BUSINESS_MESSAGE T where READ_FLAG = 0 and RECEIVE_TEL = ?
	]]>
	</select>
	<select id="remote_repair">
	<![CDATA[
		Select * FROM T_ELEVATOR_MONITOR WHERE EQUIPMENT_STATUS = ?
	]]>
	</select>
	<!-- 项目资产-配件 -->
	<select id="query_comp">
	<![CDATA[
		DECLARE @PROJECT_ID  VARCHAR(24)
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
         SET @PROJECT_ID = ?
        SET @START = ?
        SET @PAGE_SIZE = ?
   	     ;WITH QUERY AS (
		 SELECT T.STATUS status,T.COUNTS counts, _BG.VALUE componGeneric, _BC.VALUE componSpecific
		 , ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
		FROM T_PROJECT_COMPON T, T_COMPONENT C
		LEFT JOIN BM_COMPONENT_GENERIC _BG ON _BG.CODE = C.COMPON_GENERIC
		LEFT JOIN BM_COMPONENT_SPECIFIC _BC ON _BC.CODE = C.COMPON_SPECIFIC
		WHERE C.COMPON_ID = T.COMPON_ID
		AND T.PROJECT_ID = @PROJECT_ID
		AND T.COUNTS>0
		)SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!-- 维修次数-->
	<select id="list_repair_counts">
	<![CDATA[
		 DECLARE @PROJECT_ID  VARCHAR(24)
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        SET @PROJECT_ID = ?
        SET @START = ?
        SET @PAGE_SIZE =?
   	     ;WITH QUERY AS (
		SELECT REPAIR_ID AS repairId, REPAIR_SERIAL AS repairSerial, PROJECT_ID AS projectId, EQUIP_ID AS equipId, PHENOMENON AS phenomenon
		, REPAIR_MAN AS repairMan, REPAIR_AMOUNT AS repairAmount, REPAIR_RESULT AS repairResult, STATUS AS status, USER_ID AS userId
		, USER_NAME AS userName, DEP_ID AS depId, PROVIDED_DATE AS providedDate, APPLYFOR_STATE AS applyforState
		 , ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
		FROM T_EQUIPMENT_REPAIR
		WHERE PROJECT_ID =  @PROJECT_ID)SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)
	]]>
	</select>
	<!-- 首页统计-->
	<select id="list_all_counts">
	<![CDATA[
DECLARE @STATE VARCHAR(128)
	DECLARE @EQUIPMENT_STATUS VARCHAR(128)
	DECLARE @STATUS VARCHAR(128)
	DECLARE @RECEIVE_TEL VARCHAR(128)
		SET @STATE = ?
		SET  @EQUIPMENT_STATUS = ?
		SET @STATUS = ?
		SET @RECEIVE_TEL = ?
		 select  top 1 (select COUNT(*)   from T_APP_REPAIR WHERE STATE = @STATE ) as countRepair,
 		(select COUNT(*)  from T_ELEVATOR_MONITOR WHERE EQUIPMENT_STATUS = @EQUIPMENT_STATUS )  as countRemoteRepair, 
 		(SELECT COUNT(*) FROM T_BUSINESS_MESSAGE WHERE READ_FLAG = '0' AND MSG_TYPE='0' AND DEL_FLAG = 1 AND RECEIVE_TEL = @RECEIVE_TEL) as countToDo ,
 		(select COUNT(*)  from T_PROJECT T RIGHT JOIN  (
 		SELECT DISTINCT  P.PROJECT_ID projectId
		FROM  T_EQUIPMENT _EQUIP, T_PROJECT P
			Where _EQUIP.PROJECT_ID = P.PROJECT_ID
			AND P.DEL_FLAG = 1
			AND _EQUIP.DEL_FLAG = 1
			AND P.STATUS = @STATUS
 		) K ON K.projectId = T.PROJECT_ID AND  STATUS = @STATUS) as projectInUse from T_PROJECT 
	]]>
	</select>
	
	<!-- 查看指定状态的设备 -->
	
	<!-- 查询闲置在仓设备详情-->
	<select id="">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE @BUSINESS_STATUS VARCHAR(128)
		SET @START = ?
        SET @PAGE_SIZE = ?
        SET @BUSINESS_STATUS =?
        ;WITH QUERY AS (
		SELECT _ACTIVATE.ACTIVATE_DATE AS activateDate, _PROJ.PROJECT_ID AS projectId,_PROJ.PROJECT_NAME AS projectName, _EQUIP.BUILDING_NUM AS				
		buildingNum, _EQUIP.EXW_SERIAL AS exwSerial, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			,_BS.VALUE AS specification,BM.VALUE equipGeneric,  _EQUIP.RECORD_ID AS recordId,_EQUIP.EQUIP_VENDER proName,
			_EQUIP.BRACHIUM brachium,_EQUIP.EQUIP_ID equipId
			FROM T_EQUIPMENT_ACTIVATE _ACTIVATE
			FULL JOIN  T_EQUIPMENT_FLOW _FLOW ON _FLOW.ACTIVATE_ID = _ACTIVATE.ACTIVATE_ID
			FULL JOIN  T_EQUIPMENT _EQUIP ON _EQUIP.FLOW_ID = _FLOW.FLOW_ID
			FULL JOIN T_PROJECT _PROJ ON _EQUIP.PROJECT_ID = _PROJ.PROJECT_ID
			LEFT JOIN BM_EQUIP_GENERIC BM ON BM.CODE = _EQUIP.EQUIP_GENERIC 
			LEFT JOIN BM_EQUIP_SPECIFIC _BS ON _BS.CODE = _EQUIP.EQUIP_SPECIFIC
			WHERE _EQUIP.BUSINESS_STATUS = @BUSINESS_STATUS  AND _EQUIP.DEL_FLAG =1) SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)				]]>
	</select>
	<!-- 查询出仓未启用设备详情-->
	<select id="list_equip_out_detail">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE @BUSINESS_STATUS VARCHAR(128)
		SET @START = ?
        SET @PAGE_SIZE = ?
        SET @BUSINESS_STATUS =?
		;WITH QUERY AS (
			SELECT _ACTIVATE.ACTIVATE_DATE AS activateDate,_PROJ.PROJECT_ID AS projectId, _PROJ.PROJECT_NAME AS projectName,
			 _EQUIP.BUILDING_NUM AS buildingNum, _EQUIP.EXW_SERIAL AS exwSerial
			, _EQUIP.RECORD_ID AS recordId,_BS.VALUE AS specification,BM.VALUE equipGeneric,  ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM T_EQUIPMENT_ACTIVATE _ACTIVATE
			FULL JOIN  T_EQUIPMENT_FLOW _FLOW ON _FLOW.ACTIVATE_ID = _ACTIVATE.ACTIVATE_ID
			FULL JOIN  T_EQUIPMENT _EQUIP ON _EQUIP.FLOW_ID = _FLOW.FLOW_ID
			FULL JOIN T_PROJECT _PROJ ON _EQUIP.PROJECT_ID = _PROJ.PROJECT_ID
			LEFT JOIN BM_EQUIP_GENERIC BM ON BM.CODE = _EQUIP.EQUIP_GENERIC 
			LEFT JOIN BM_EQUIP_SPECIFIC _BS ON _BS.CODE = _EQUIP.EQUIP_SPECIFIC
			WHERE  (_EQUIP.BUSINESS_STATUS >='1' AND _EQUIP.BUSINESS_STATUS<=@BUSINESS_STATUS) AND _EQUIP.DEL_FLAG =1) 
			SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
			]]>
	</select>
	<!-- 查询报停未入仓设备详情-->
	<select id="list_equip_broke_detail">
	<![CDATA[
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        DECLARE @BUSINESS_STATUS VARCHAR(128)
		SET @START = ?
        SET @PAGE_SIZE = ?
        SET @BUSINESS_STATUS =?
		;WITH QUERY AS (
			SELECT _ACTIVATE.ACTIVATE_DATE AS activateDate,_PROJ.PROJECT_ID AS projectId, _PROJ.PROJECT_NAME AS projectName,
			 _EQUIP.BUILDING_NUM AS buildingNum, _EQUIP.EXW_SERIAL AS exwSerial
			, _EQUIP.RECORD_ID AS recordId,_BS.VALUE AS specification,BM.VALUE equipGeneric, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			FROM  T_EQUIPMENT_ACTIVATE _ACTIVATE
			FULL JOIN  T_EQUIPMENT_FLOW _FLOW ON _FLOW.ACTIVATE_ID = _ACTIVATE.ACTIVATE_ID
				FULL JOIN  T_EQUIPMENT _EQUIP ON _EQUIP.FLOW_ID = _FLOW.FLOW_ID
				FULL JOIN T_PROJECT _PROJ ON _EQUIP.PROJECT_ID = _PROJ.PROJECT_ID
				LEFT JOIN BM_EQUIP_GENERIC BM ON BM.CODE = _EQUIP.EQUIP_GENERIC 
				LEFT JOIN BM_EQUIP_SPECIFIC _BS ON _BS.CODE = _EQUIP.EQUIP_SPECIFIC
			WHERE (_EQUIP.BUSINESS_STATUS =@BUSINESS_STATUS OR _EQUIP.BUSINESS_STATUS='9') AND _EQUIP.DEL_FLAG=1) 
			SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)	
			]]>
	</select>
	<!-- 查看项目对应设备信息-->
	<select id="list_equip_on_project_id">
	<![CDATA[
		DECLARE @PROJECT_ID  VARCHAR(24)
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
        SET @START = ?
   	    SET @PAGE_SIZE =?
   	    SET @PROJECT_ID =?
   	      ;WITH QUERY AS (
		SELECT _EQUIP.EQUIP_ID equipId,_EQUIP.BUILDING_NUM buildingNum,
			_DE.INSTALL_HEIGHT installHeight,BM.VALUE equpGeneric
			,_ACTIVATE.ACTIVATE_DATE activateDate,_EQUIP.EXW_SERIAL exwSerial,_EQUIP.EQUIP_VENDER proName,_EQUIP.RECORD_ID recordId,
			BS.VALUE equipSpecific,_DE.BRACHIUM brachium, ROW_NUMBER() OVER (ORDER BY CURRENT_TIMESTAMP) AS _ROWNUM
			 FROM T_EQUIPMENT _EQUIP
			 LEFT JOIN T_EQUIPMENT_FLOW _FLOW ON _EQUIP.FLOW_ID = _FLOW.FLOW_ID
			 LEFT JOIN T_EQUIPMENT_ACTIVATE _ACTIVATE ON _FLOW.ACTIVATE_ID = _ACTIVATE.ACTIVATE_ID 
			 LEFT JOIN BM_EQUIP_GENERIC BM ON BM.CODE = _EQUIP.EQUIP_GENERIC
			 LEFT JOIN BM_EQUIP_SPECIFIC BS ON BS.CODE = _EQUIP.EQUIP_SPECIFIC
			 LEFT JOIN T_PROJECT _PROJ ON _PROJ.PROJECT_ID = _EQUIP.PROJECT_ID AND _PROJ.STATUS = 2 AND _PROJ.DEL_FLAG = 1
			 LEFT JOIN T_EQUIPMENT_INSTALL _DE ON _DE.FLOW_ID =  _EQUIP.FLOW_ID 
			WHERE
			 _EQUIP.PROJECT_ID = @PROJECT_ID
			AND _EQUIP.DEL_FLAG = 1)SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)				
	]]>
	</select>
	<!-- 查看项目详情-头部统计信息-->
	<select id="list_head_info_on_project_id">
	<![CDATA[
		DECLARE @PROJECT_ID  VARCHAR(24)
		SET @PROJECT_ID =?
			SELECT A.totalAmout,B.repairCount FROM ( SELECT SUM(T.SETTLE_AMOUNT) totalAmout FROM T_SETTLE_CONTRACT T WHERE PROJECT_ID =  @PROJECT_ID AND T.DEL_FLAG =1) A ,
			(SELECT  COUNT(*) repairCount FROM T_EQUIPMENT_REPAIR WHERE PROJECT_ID = @PROJECT_ID ) B  
	]]>
	</select>
		
	<!-- 查看项目对应设备-安全信息-->
	<select id="list_secure_on_equip_id">
	<![CDATA[
	   DECLARE @@EQUIP_ID  VARCHAR(24)
 		DECLARE @PROJECT_ID VARCHAR(24)
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
   	    SET @@EQUIP_ID =?
   	    SET @PROJECT_ID = ?
   	    SET @START = ?
   	     SET @PAGE_SIZE =?
	    ;WITH QUERY AS (
	      SELECT
			CONVERT(CHAR(10),A.inspectDate,23) inspectDate,inspectId,inspectPepoles,inspectResult,exwserial,buildingnum,recordId,
			inspectResultName,statusName,remark,longitude,latitude,projectName,rectification,relateModule
			, ROW_NUMBER() OVER (ORDER BY A.inspectDate DESC) AS _ROWNUM
	        FROM (SELECT EI.INSPECT_DATE     inspectDate,
	                     EI.INSPECT_ID        inspectId,
	                     EI.INSPECT_SERIAL    inspectSerial,
	                     EI.INSPECT_PEPOLES   inspectPepoles,
	                     EI.INSPECT_RESULT    inspectResult,
	                     EI.EXW_SERIAL        exwserial,
	                     EI.BUILDING_NUM      buildingnum,
	                     EI.RECORD_ID         recordId,
	                     B.VALUE              inspectResultName,
	                     EI.STATUS            statusName,
	                     EI.REMARK            remark,
	                     EI.LONGITUDE         longitude,
	                     EI.LATITUDE          latitude,
	                     ED.PROJECT_NAME      projectName,
						 EI.RECTIFICATION     rectification,
	                     'EQUIP_INSPECT'      relateModule
	                FROM T_EQUIPMENT_INSPECT EI LEFT JOIN BM_INSPECT_RESULT B ON B.CODE = EI.INSPECT_RESULT, T_EQUIPMENT_INSPECT_SCHEMA EIS, T_EQUIPMENT_DIARY ED
	               WHERE ED.EQUIP_DIARY_ID = EIS.EQUIP_DIARY_ID
	                 AND EIS.INSPECT_SCHEMA_ID = EI.INSPECT_SCHEMA_ID
	                  AND ED.EQUIP_ID = @@EQUIP_ID
	                  AND ED.PROJECT_ID = @PROJECT_ID
	              UNION ALL
	              SELECT IM.INSPECT_DATE     inspectDate,
	                     IM.INSPECT_ID        inspectId,
	                     NULL                 inspectSerial,
	                     IM.INSPECT_PEPOLES   inspectPepoles,
	                     IM.INSPECT_RESULT    inspectResult,
	                     IM.EXW_SERIAL        exwserial,
	                     IM.BUILDING_NUM      buildingnum,
	                     IM.RECORD_ID         recordId,
	                     B.VALUE              inspectResultName,
	                     NULL                 statusName,
	                     IM.REMARK            remark,
	                     IM.LONGITUDE         longitude,
	                     IM.LATITUDE          latitude,
	                     IM.PROJECT_NAME      projectName,
						 IM.RECTIFICATION     rectification,
	                     'INSPECT_MANAGE'     relateModule
	                FROM T_INSPECT_MANAGE IM LEFT JOIN BM_INSPECT_RESULT B ON B.CODE = IM.INSPECT_RESULT
	                WHERE IM.PROJECT_ID = @PROJECT_ID
	              ) A
	    )SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)  ORDER BY inspectDate desc
		
	]]>
	</select>
	<!-- 远程故障设备-->
	<select id="list_remote_repair">
	<![CDATA[
 		DECLARE @EQUIPMENT_STATUS  VARCHAR(24)
		DECLARE @START INT
        DECLARE @PAGE_SIZE INT
   	    SET @EQUIPMENT_STATUS =?
   	    SET @START = ?
   	     SET @PAGE_SIZE =?
	    ;WITH QUERY AS (
	    SELECT  top(@PAGE_SIZE)repid, monitorAddress, equipmentNumber, equipmentStatus,fault,createByname,faultCurrent, breakdownVoltage, failureFrequency, weightOfFailure, faultFloor,
		 inputVoltage,position,hours, minutes, createDateTime, monitorId, switchFault1,switchFault2, switchFault3, 
		 equipId, exwSerial, equipSpecific, projectName,recordSerial, buildingNum ,ROW_NUMBER() OVER (ORDER BY createDateTime DESC) AS _ROWNUM
	     FROM(
		SELECT  
				null repid,
				T.MONITOR_ADDRESS monitorAddress,
				T.EQUIPMENT_NUMBER equipmentNumber,
				T.EQUIPMENT_STATUS equipmentStatus,
				BF.VALUE fault,
				null createByname,
				T.FAULT_CURRENT faultCurrent,
				T.BREAKDOWN_VOLTAGE breakdownVoltage,
				T.FAILURE_FREQUENCY failureFrequency,
				T.WEIGHT_OF_FAILURE weightOfFailure,
				T.FAULT_FLOOR faultFloor,
				T.INPUT_VOLTAGE inputVoltage,
				T.POSITION position,
				T.HOURS hours,
				T.MINUTES minutes,
				T.CREATE_DATE_TIME createDateTime,
				T.MONITOR_ID monitorId,
				T.SWITCH_FAULT_1 switchFault1,
				T.SWITCH_FAULT_2 switchFault2,
				T.SWITCH_FAULT_3 switchFault3, 
				TE.EQUIP_ID equipId,
				TE.EXW_SERIAL exwSerial,
				TE.EQUIP_SPECIFIC equipSpecific,
				TE.PROJECT_NAME projectName,
				TE.RECORD_ID recordSerial,
				TE.BUILDING_NUM buildingNum 
		FROM T_ELEVATOR_MONITOR T 
		LEFT JOIN T_EQUIPMENT TE ON TE.MONITOR_SERIAL = T.EQUIPMENT_NUMBER  
		LEFT JOIN BM_REPAIR_FAULT  BF ON T.FAULT = BF.CODE 
		UNION ALL
		SELECT  
				TR.REPID repid,  
				null monitorAddress,
				null equipmentNumber,
				null equipmentStatus,
				TR.FAULT_DESC fault,
				AU.FULLNAME createByname,
				TR.FAULT_LEVEL faultCurrent,
				TR.BREAK_DOWN_VOLTAGE breakdownVoltage,
				null failureFrequency,
				TR.WEIGHT_OF_FAILURE weightOfFailure,
				null faultFloor,
				TR.IMPUT_VOLTAGE inputVoltage,
				TR.LOCATION position,
				null hours,
				null minutes,
				TR.CREATE_DT createDateTime,
				null monitorId,
				TR.SWITCH_FAULT_1 switchFault1,
				TR.SWITCH_FAULT_2 switchFault2,
				TR.SWITCH_FAULT_3 switchFault3,
				TR.EQUIP_ID equipId,
				TR.EXW_SERIAL exwSerial,
				TR.EQUIPSPEC equipSpecific,
				TR.PROJ_NAME projectName,
				TR.RECORD_SERIAL recordSerial,
				TR.BUILDING_NUM buildingNum
 	FROM T_APP_REPAIR TR 
 	LEFT JOIN APP_USER AU ON AU.USERID = TR.CREATE_BY
 	 where TR.STATE = 1) as woi)
	SELECT * FROM QUERY WHERE _ROWNUM > @START AND _ROWNUM <= (@START + @PAGE_SIZE)  ORDER BY createDateTime DESC
	]]>
	</select>
	<!-- 查看部门-->
	<select id="list_department">
	<![CDATA[
		SELECT T.DEP_ID depId,T.DEP_NAME depName FROM DEPARTMENT T WHERE DELFLAG = 1
	]]>
	</select>
	<!-- 查找指定用户APPUSER -->
	<select id="list_app_user">
	<![CDATA[
		SELECT TOP 1 PASSWORD,USERNAME,MOBILE FROM APP_USER WHERE MOBILE = ? AND DELFLAG = 0
	]]>
	</select>
	
		<!-- 查询配件所在的仓库名称-->
	<select id="list_component_store">
	<![CDATA[	
		SELECT c.CONSUME_COUNTS,s.STORE_NAME  FROM T_COMPONENT c LEFT JOIN T_STORE_HOUSE s ON 
		c.TASK_ID=s.TASK_ID
		WHERE s.TASK_ID=?
		]]>
	</select>
	
	<!-- 设备分布情况看板 -->>
	<select id="equip_distribution">
	<![CDATA[
		SELECT 
			(SELECT COUNT(e.EQUIP_ID) FROM 
					T_EQUIPMENT e
			WHERE 
					e.PROJECT_ID IN (SELECT p.PROJECT_ID FROM T_PROJECT p WHERE p.CITY = bc.CODE AND p.DEL_FLAG = 1)
	 			AND e.DEL_FLAG = 1) counts,
			bc.CODE code,
	 		bc.[VALUE] value,
	 		bc.LONGITUDE longitude, 
			 bc.LATITUDE latitude,
	 		(SELECT COUNT(e.EQUIP_ID) FROM T_EQUIPMENT e 
				LEFT JOIN T_PROJECT pp ON e.PROJECT_ID = pp.PROJECT_ID 
				WHERE e.STATUS =0  AND e.DEL_FLAG = 1 AND pp.DEL_FLAG = 1) inuseCount,
			(SELECT COUNT(e.EQUIP_ID) FROM T_EQUIPMENT e 
				LEFT JOIN T_PROJECT pp ON e.PROJECT_ID = pp.PROJECT_ID 
				WHERE e.STATUS !=0  AND e.DEL_FLAG = 1 AND pp.DEL_FLAG = 1) idleCount,
			round(cast(isnull(cast((SELECT COUNT(e.EQUIP_ID) FROM T_EQUIPMENT e 
									LEFT JOIN T_PROJECT pp ON e.PROJECT_ID = pp.PROJECT_ID 
									WHERE e.STATUS =0  AND e.DEL_FLAG = 1 AND pp.DEL_FLAG = 1)*1.0/
				nullif((SELECT COUNT(te.EQUIP_ID) FROM T_EQUIPMENT te WHERE te.DEL_FLAG = 1),0) as decimal(10,2)),0)*100 as int),2) inuseRate,
			round(cast(isnull(cast((SELECT COUNT(e.EQUIP_ID) FROM T_EQUIPMENT e 
									LEFT JOIN T_PROJECT pp ON e.PROJECT_ID = pp.PROJECT_ID 
									WHERE e.STATUS !=0  AND e.DEL_FLAG = 1 AND pp.DEL_FLAG = 1)*1.0/
				nullif((SELECT COUNT(te.EQUIP_ID) FROM T_EQUIPMENT te WHERE te.DEL_FLAG = 1),0) as decimal(10,2)),0)*100 as int),2) idleRate,
			(SELECT COUNT(e.EQUIP_ID) FROM T_EQUIPMENT e 
				LEFT JOIN T_PROJECT pp ON e.PROJECT_ID = pp.PROJECT_ID 
				WHERE  pp.CITY = bc.CODE AND e.EQUIP_GENERIC='T' AND e.DEL_FLAG = 1 AND pp.DEL_FLAG = 1) towerCityCount,
			(SELECT COUNT(e.EQUIP_ID) FROM T_EQUIPMENT e 
			 	LEFT JOIN T_PROJECT pp ON e.PROJECT_ID = pp.PROJECT_ID 
				WHERE  pp.CITY = bc.CODE AND e.EQUIP_GENERIC='T' AND e.DEL_FLAG = 1 AND pp.DEL_FLAG = 1 AND e.STATUS =0) towerCityInuseCount,	
			(SELECT COUNT(e.EQUIP_ID) FROM T_EQUIPMENT e 
			 LEFT JOIN T_PROJECT pp ON e.PROJECT_ID = pp.PROJECT_ID 
				WHERE  pp.CITY = bc.CODE AND e.EQUIP_GENERIC='T' AND e.DEL_FLAG = 1 AND pp.DEL_FLAG = 1 AND e.STATUS !=0) towerCityIdleCount,
			(SELECT COUNT(e.EQUIP_ID) FROM T_EQUIPMENT e 
				LEFT JOIN T_PROJECT pp ON e.PROJECT_ID = pp.PROJECT_ID 
				WHERE  pp.CITY = bc.CODE AND e.EQUIP_GENERIC='S' AND e.DEL_FLAG = 1 AND pp.DEL_FLAG = 1) liftCityCount,
			(SELECT COUNT(e.EQUIP_ID) FROM T_EQUIPMENT e 
				LEFT JOIN T_PROJECT pp ON e.PROJECT_ID = pp.PROJECT_ID 
				WHERE  pp.CITY = bc.CODE AND e.EQUIP_GENERIC='S' AND e.DEL_FLAG = 1 AND pp.DEL_FLAG = 1 AND e.STATUS =0) liftCityInuseCount,	
			(SELECT COUNT(e.EQUIP_ID) FROM T_EQUIPMENT e 
				LEFT JOIN T_PROJECT pp ON e.PROJECT_ID = pp.PROJECT_ID 
				WHERE  pp.CITY = bc.CODE AND e.EQUIP_GENERIC='S' AND e.DEL_FLAG = 1 AND pp.DEL_FLAG = 1 AND e.STATUS !=0) liftCityIdleCount,
			(SELECT COUNT(tt.EQUIP_ID) FROM T_EQUIPMENT tt WHERE tt.EQUIP_GENERIC='T' AND tt.DEL_FLAG = 1) towerTotalCounts,
			(SELECT COUNT(tt.EQUIP_ID) FROM T_EQUIPMENT tt WHERE tt.EQUIP_GENERIC='T' AND tt.DEL_FLAG = 1 AND tt.STATUS =0)	towerInuseCounts,
			(SELECT COUNT(tt.EQUIP_ID) FROM T_EQUIPMENT tt WHERE tt.EQUIP_GENERIC='T' AND tt.DEL_FLAG = 1 AND tt.STATUS !=0)	towerIdleCounts,
			(SELECT COUNT(tt.EQUIP_ID) FROM T_EQUIPMENT tt WHERE tt.EQUIP_GENERIC='S' AND tt.DEL_FLAG = 1)	liftTotalCounts,
			(SELECT COUNT(tt.EQUIP_ID) FROM T_EQUIPMENT tt WHERE tt.EQUIP_GENERIC='S' AND tt.DEL_FLAG = 1 AND tt.STATUS =0)	liftInuseCounts,
			(SELECT COUNT(tt.EQUIP_ID) FROM T_EQUIPMENT tt WHERE tt.EQUIP_GENERIC='S' AND tt.DEL_FLAG = 1 AND tt.STATUS !=0)	liftIdleCounts,
			(SELECT COUNT(tt.EQUIP_ID) FROM T_EQUIPMENT tt WHERE tt.DEL_FLAG = 1)	totalCounts
		FROM 
			BM_CITY bc 
		 WHERE 
		     bc.CODE LIKE '45%'
	]]>
	</select>
		
	<!-- 设备看板（巡检预警提醒） -->
	<select id="equip_inspect_warning">
	<![CDATA[
		SELECT (SELECT COUNT(*) FROM T_EQUIPMENT_INSPECT WHERE STATUS = 2) AS overdueNotInspect,
		round(cast(isnull(cast((SELECT COUNT(*) 
								FROM T_EQUIPMENT_INSPECT 
								WHERE STATUS = 1 OR STATUS = 3)*1.0/
					NULLIF((SELECT COUNT(*) 
							FROM T_EQUIPMENT_INSPECT ),0) as decimal(10,2)),0)*100 as int),2) AS inspectCompleted,
		(SELECT COUNT(*) FROM 
				(SELECT e.EQUIP_ID AS i FROM T_EQUIPMENT e 
					WHERE e.EQUIP_ID IN (
						SELECT ef.EQUIP_ID FROM T_EQUIPMENT_FLOW ef 
						LEFT JOIN T_EQUIPMENT_INSTALL ei ON ei.INSTALL_ID = ef.INSTALL_ID AND ei.APPLYFOR_STATE = 3  
						WHERE ei.DEL_FLAG = 1) 
					AND e.DEL_FLAG=1) j 
		WHERE j.i NOT IN ( SELECT efw.EQUIP_ID FROM T_EQUIPMENT_FLOW efw LEFT JOIN T_EQUIPMENT_INSPECT_SCHEMA eic ON eic.FLOW_ID = efw.FLOW_ID ))AS installNotPlan,
		round(cast(isnull(cast(
						(SELECT COUNT(e.EQUIP_ID) 
							FROM T_EQUIPMENT e 
							WHERE e.EQUIP_ID IN (SELECT ef.EQUIP_ID FROM T_EQUIPMENT_FLOW ef 
													LEFT JOIN T_EQUIPMENT_INSTALL ei ON ei.INSTALL_ID = ef.INSTALL_ID AND ei.APPLYFOR_STATE = 3 
													WHERE ei.DEL_FLAG=1) 
							AND e.EQUIP_ID NOT IN (SELECT ef.EQUIP_ID FROM T_EQUIPMENT_FLOW ef 
													LEFT JOIN T_EQUIPMENT_INSPECT_SCHEMA eis ON eis.FLOW_ID = ef.FLOW_ID) 
							AND e.DEL_FLAG=1)*1.0/
				NULLIF((SELECT COUNT(*) 
						FROM T_EQUIPMENT e 
						LEFT JOIN T_EQUIPMENT_FLOW ef ON ef.EQUIP_ID=e.EQUIP_ID 
						LEFT JOIN T_EQUIPMENT_INSTALL tei ON tei.FLOW_ID=ef.FLOW_ID
						WHERE e.DEL_FLAG=1 AND tei.DEL_FLAG=1),0) as decimal(10,2)),0)*100 as int),2) AS inspectPlanRate,
		(SELECT COUNT(*) AS a FROM T_APP_REPAIR WHERE STATE = 1) AS maintNotManage,
		(CONVERT(decimal(18, 1),(SELECT COUNT(*) FROM T_APP_REPAIR apr WHERE apr.STATE = 0 OR apr.STATE = 4) * 1.0 / 
		nullif((SELECT COUNT(*) FROM T_APP_REPAIR apr),0)) * 100) AS maintCompleted
	]]>
	</select>
	
	<!-- 设备看板（本周巡检排行） -->
	<select id="equip_inspect_week_ranking">
	<![CDATA[
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		SET @START = ?
		SET @PAGE_SIZE =?
		;WITH QUERY AS (
		SELECT _a.CORP_ID,
			_a.CORP_NAME corpName,
			ROW_NUMBER() OVER (ORDER BY _a.corpInspectCompleted DESC) AS _ROWNUM,
			_a.corpInspectCompleted,
			_a.corpInspectPlan,
			_a.corpMaintCompleted 
		FROM (
			SELECT
				ci.CORP_ID,
				ci.CORP_NAME,
				(CONVERT(decimal(18, 2),(
						SELECT COUNT(e.EQUIP_ID) 
						FROM T_EQUIPMENT e 
						WHERE e.EQUIP_ID IN (SELECT ef.EQUIP_ID FROM T_EQUIPMENT_FLOW ef 
												LEFT JOIN T_EQUIPMENT_INSTALL ei ON ei.INSTALL_ID = ef.INSTALL_ID AND ei.APPLYFOR_STATE = 3 
												WHERE ei.DEL_FLAG=1) 
							AND e.EQUIP_ID NOT IN (SELECT ef.EQUIP_ID FROM T_EQUIPMENT_FLOW ef 
													LEFT JOIN T_EQUIPMENT_INSPECT_SCHEMA eis ON eis.FLOW_ID = ef.FLOW_ID
													WHERE DATEDIFF(week,eis.CYCLE_ACTIVATE_DATE,GETDATE())=0) 
															AND e.PROPERTY_ENT = ci.CORP_ID 
							AND e.DEL_FLAG = 1) * 1.0 / 
				NULLIF((SELECT COUNT(*) FROM T_EQUIPMENT e 
							LEFT JOIN T_EQUIPMENT_FLOW ef ON ef.EQUIP_ID=e.EQUIP_ID 
							LEFT JOIN T_EQUIPMENT_INSTALL tei ON tei.FLOW_ID=ef.FLOW_ID
							WHERE e.PROPERTY_ENT = ci.CORP_ID 
									AND tei.APPLYFOR_STATE = 3
									AND e.DEL_FLAG = 1 
									AND	tei.DEL_FLAG = 1),0)
				)* 100 ) corpInspectPlan,
				(CONVERT(decimal(18, 2),(
						SELECT COUNT(ei.INSPECT_ID) 
							FROM T_EQUIPMENT_INSPECT ei 
							LEFT JOIN T_EQUIPMENT_INSPECT_SCHEMA eic ON eic.INSPECT_SCHEMA_ID = ei.INSPECT_SCHEMA_ID 
							LEFT JOIN T_EQUIPMENT_DIARY ed ON ed.EQUIP_DIARY_ID = eic.EQUIP_DIARY_ID 
							LEFT JOIN T_EQUIPMENT e ON e.EQUIP_ID=ed.EQUIP_ID
							WHERE e.PROPERTY_ENT = ci.CORP_ID 
								AND (ei.STATUS = 1 
								OR ei.STATUS = 3)
								AND DATEDIFF(week,ei.INSPECT_DATE,GETDATE())=0
								AND e.DEL_FLAG = 1) * 1.0 / 
						nullif((SELECT COUNT(ei.INSPECT_ID) FROM T_EQUIPMENT_INSPECT ei 
									LEFT JOIN T_EQUIPMENT_INSPECT_SCHEMA eic ON eic.INSPECT_SCHEMA_ID = ei.INSPECT_SCHEMA_ID 
									LEFT JOIN T_EQUIPMENT_DIARY ed ON ed.EQUIP_DIARY_ID = eic.EQUIP_DIARY_ID 
									LEFT JOIN T_EQUIPMENT e ON e.EQUIP_ID=ed.EQUIP_ID
									WHERE e.PROPERTY_ENT = ci.CORP_ID 
												AND DATEDIFF(week,ei.INSPECT_DATE,GETDATE())=0
												AND e.DEL_FLAG = 1),0)) * 100 
				) AS corpInspectCompleted,
				(CONVERT(decimal(18, 1),(
								SELECT count(apr.REPID) FROM T_APP_REPAIR apr 
									LEFT JOIN T_EQUIPMENT e ON apr.EQUIP_ID = e.EQUIP_ID 
									WHERE apr.STATE=4 
										AND e.PROPERTY_ENT = ci.CORP_ID 
										AND DATEDIFF(week,apr.REPORT_DT,GETDATE())=0
										AND e.DEL_FLAG = 1) * 1.0 / 
						nullif((SELECT count(apr.REPID) FROM T_APP_REPAIR apr 
									LEFT JOIN T_EQUIPMENT e ON apr.EQUIP_ID = e.EQUIP_ID 
									WHERE  DATEDIFF(week,apr.REPORT_DT,GETDATE())=0
										AND e.DEL_FLAG = 1),0)) * 100) AS corpMaintCompleted
			FROM
					T_CORP_INFO ci
			WHERE ci.DEL_FLAG = 1		
			)  _a
		)
		SELECT * FROM QUERY q WHERE _ROWNUM >@START AND _ROWNUM <= (@START +  @PAGE_SIZE)  ORDER BY q.corpInspectCompleted DESC
	]]>
	</select>
	
	<!-- 设备看板（本月巡检排行） -->
	<select id="equip_inspect_month_ranking">
	<![CDATA[
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		SET @START = ?
		SET @PAGE_SIZE =?
		;WITH QUERY AS (
		SELECT _a.CORP_ID,
			_a.CORP_NAME corpName,
			ROW_NUMBER() OVER (ORDER BY _a.corpInspectCompleted DESC) AS _ROWNUM,
			_a.corpInspectCompleted,
			_a.corpInspectPlan,
			_a.corpMaintCompleted 
		FROM (
			SELECT
				ci.CORP_ID,
				ci.CORP_NAME,
				(CONVERT(decimal(18, 2),(
						SELECT COUNT(e.EQUIP_ID) 
						FROM T_EQUIPMENT e 
						WHERE e.EQUIP_ID IN (SELECT ef.EQUIP_ID FROM T_EQUIPMENT_FLOW ef 
												LEFT JOIN T_EQUIPMENT_INSTALL ei ON ei.INSTALL_ID = ef.INSTALL_ID AND ei.APPLYFOR_STATE = 3 
												WHERE ei.DEL_FLAG=1) 
							AND e.EQUIP_ID NOT IN (SELECT ef.EQUIP_ID FROM T_EQUIPMENT_FLOW ef 
													LEFT JOIN T_EQUIPMENT_INSPECT_SCHEMA eis ON eis.FLOW_ID = ef.FLOW_ID
													WHERE DATEDIFF(month,eis.CYCLE_ACTIVATE_DATE,GETDATE())=0) 
															AND e.PROPERTY_ENT = ci.CORP_ID 
							AND e.DEL_FLAG = 1) * 1.0 / 
				NULLIF((SELECT COUNT(*) FROM T_EQUIPMENT e 
							LEFT JOIN T_EQUIPMENT_FLOW ef ON ef.EQUIP_ID=e.EQUIP_ID 
							LEFT JOIN T_EQUIPMENT_INSTALL tei ON tei.FLOW_ID=ef.FLOW_ID
							WHERE e.PROPERTY_ENT = ci.CORP_ID 
									AND tei.APPLYFOR_STATE = 3
									AND e.DEL_FLAG = 1 
									AND	tei.DEL_FLAG = 1),0)
				)* 100 ) corpInspectPlan,
				(CONVERT(decimal(18, 2),(
						SELECT COUNT(ei.INSPECT_ID) 
							FROM T_EQUIPMENT_INSPECT ei 
							LEFT JOIN T_EQUIPMENT_INSPECT_SCHEMA eic ON eic.INSPECT_SCHEMA_ID = ei.INSPECT_SCHEMA_ID 
							LEFT JOIN T_EQUIPMENT_DIARY ed ON ed.EQUIP_DIARY_ID = eic.EQUIP_DIARY_ID 
							LEFT JOIN T_EQUIPMENT e ON e.EQUIP_ID=ed.EQUIP_ID
							WHERE e.PROPERTY_ENT = ci.CORP_ID 
								AND (ei.STATUS = 1 
								OR ei.STATUS = 3)
								AND DATEDIFF(month,ei.INSPECT_DATE,GETDATE())=0
								AND e.DEL_FLAG = 1) * 1.0 / 
						nullif((SELECT COUNT(ei.INSPECT_ID) FROM T_EQUIPMENT_INSPECT ei 
									LEFT JOIN T_EQUIPMENT_INSPECT_SCHEMA eic ON eic.INSPECT_SCHEMA_ID = ei.INSPECT_SCHEMA_ID 
									LEFT JOIN T_EQUIPMENT_DIARY ed ON ed.EQUIP_DIARY_ID = eic.EQUIP_DIARY_ID 
									LEFT JOIN T_EQUIPMENT e ON e.EQUIP_ID=ed.EQUIP_ID
									WHERE e.PROPERTY_ENT = ci.CORP_ID 
												AND DATEDIFF(month,ei.INSPECT_DATE,GETDATE())=0
												AND e.DEL_FLAG = 1),0)) * 100 
				) AS corpInspectCompleted,
				(CONVERT(decimal(18, 1),(
								SELECT count(apr.REPID) FROM T_APP_REPAIR apr 
									LEFT JOIN T_EQUIPMENT e ON apr.EQUIP_ID = e.EQUIP_ID 
									WHERE apr.STATE=4 
										AND e.PROPERTY_ENT = ci.CORP_ID 
										AND DATEDIFF(month,apr.REPORT_DT,GETDATE())=0
										AND e.DEL_FLAG = 1) * 1.0 / 
						nullif((SELECT count(apr.REPID) FROM T_APP_REPAIR apr 
									LEFT JOIN T_EQUIPMENT e ON apr.EQUIP_ID = e.EQUIP_ID 
									WHERE  DATEDIFF(month,apr.REPORT_DT,GETDATE())=0
										AND e.DEL_FLAG = 1),0)) * 100) AS corpMaintCompleted
			FROM
					T_CORP_INFO ci
			WHERE ci.DEL_FLAG = 1		
			)  _a
		)
		SELECT * FROM QUERY q WHERE _ROWNUM >@START AND _ROWNUM <= (@START +  @PAGE_SIZE)  ORDER BY q.corpInspectCompleted DESC
	]]>
	</select>
	
	<!-- 设备看板（本年巡检排行） -->
	<select id="equip_inspect_year_ranking">
	<![CDATA[
		DECLARE @RANK INT
		DECLARE @START INT
		DECLARE @PAGE_SIZE INT
		SET @START = ?
		SET @PAGE_SIZE =?
		SET @RANK =?
		;WITH QUERY AS (
		SELECT _a.CORP_ID,
			_a.CORP_NAME corpName,
			ROW_NUMBER() OVER (ORDER BY (CASE @RANK
										WHEN 0 THEN _a.corpInspectCompleted
										WHEN 1 THEN _a.corpInspectPlan
										ELSE _a.corpMaintCompleted
										END) DESC) AS _ROWNUM,
			_a.corpInspectCompleted,
			_a.corpInspectPlan,
			_a.corpMaintCompleted 
		FROM (
			SELECT
				ci.CORP_ID,
				ci.CORP_NAME,
				(CONVERT(decimal(18, 2),(
						SELECT COUNT(e.EQUIP_ID) 
						FROM T_EQUIPMENT e 
						WHERE e.EQUIP_ID IN (SELECT ef.EQUIP_ID FROM T_EQUIPMENT_FLOW ef 
												LEFT JOIN T_EQUIPMENT_INSTALL ei ON ei.INSTALL_ID = ef.INSTALL_ID AND ei.APPLYFOR_STATE = 3 
												WHERE ei.DEL_FLAG=1) 
							AND e.EQUIP_ID NOT IN (SELECT ef.EQUIP_ID FROM T_EQUIPMENT_FLOW ef 
													LEFT JOIN T_EQUIPMENT_INSPECT_SCHEMA eis ON eis.FLOW_ID = ef.FLOW_ID
													WHERE DATEDIFF(year,GETDATE(),eis.CYCLE_ACTIVATE_DATE)=0) 
															AND e.PROPERTY_ENT = ci.CORP_ID 
							AND e.DEL_FLAG = 1) * 1.0 / 
				NULLIF((SELECT COUNT(*) FROM T_EQUIPMENT e 
							LEFT JOIN T_EQUIPMENT_FLOW ef ON ef.EQUIP_ID=e.EQUIP_ID 
							LEFT JOIN T_EQUIPMENT_INSTALL tei ON tei.FLOW_ID=ef.FLOW_ID
							WHERE e.PROPERTY_ENT = ci.CORP_ID 
									AND tei.APPLYFOR_STATE = 3
									AND e.DEL_FLAG = 1 
									AND	tei.DEL_FLAG = 1),0)
				)* 100 ) corpInspectPlan,
				(CONVERT(decimal(18, 2),(
						SELECT COUNT(ei.INSPECT_ID) 
							FROM T_EQUIPMENT_INSPECT ei 
							LEFT JOIN T_EQUIPMENT_INSPECT_SCHEMA eic ON eic.INSPECT_SCHEMA_ID = ei.INSPECT_SCHEMA_ID 
							LEFT JOIN T_EQUIPMENT_DIARY ed ON ed.EQUIP_DIARY_ID = eic.EQUIP_DIARY_ID 
							LEFT JOIN T_EQUIPMENT e ON e.EQUIP_ID=ed.EQUIP_ID
							WHERE e.PROPERTY_ENT = ci.CORP_ID 
								AND (ei.STATUS = 1 
								OR ei.STATUS = 3)
								AND DATEDIFF(year,GETDATE(),ei.INSPECT_DATE)=0
								AND e.DEL_FLAG = 1) * 1.0 / 
						nullif((SELECT COUNT(ei.INSPECT_ID) FROM T_EQUIPMENT_INSPECT ei 
									LEFT JOIN T_EQUIPMENT_INSPECT_SCHEMA eic ON eic.INSPECT_SCHEMA_ID = ei.INSPECT_SCHEMA_ID 
									LEFT JOIN T_EQUIPMENT_DIARY ed ON ed.EQUIP_DIARY_ID = eic.EQUIP_DIARY_ID 
									LEFT JOIN T_EQUIPMENT e ON e.EQUIP_ID=ed.EQUIP_ID
									WHERE e.PROPERTY_ENT = ci.CORP_ID 
												AND DATEDIFF(year,GETDATE(),ei.INSPECT_DATE)=0
												AND e.DEL_FLAG = 1),0)) * 100 
				) AS corpInspectCompleted,
				(CONVERT(decimal(18, 1),(
								SELECT count(apr.REPID) FROM T_APP_REPAIR apr 
									LEFT JOIN T_EQUIPMENT e ON apr.EQUIP_ID = e.EQUIP_ID 
									WHERE apr.STATE=4 
										AND e.PROPERTY_ENT = ci.CORP_ID 
										AND DATEDIFF(year,GETDATE(),apr.REPORT_DT)=0
										AND e.DEL_FLAG = 1) * 1.0 / 
						nullif((SELECT count(apr.REPID) FROM T_APP_REPAIR apr 
									LEFT JOIN T_EQUIPMENT e ON apr.EQUIP_ID = e.EQUIP_ID 
									WHERE  DATEDIFF(year,GETDATE(),apr.REPORT_DT)=0
										AND e.DEL_FLAG = 1),0)) * 100) AS corpMaintCompleted
			FROM
					T_CORP_INFO ci
			WHERE ci.DEL_FLAG = 1		
			)  _a
		)
		SELECT * FROM QUERY q WHERE _ROWNUM >@START AND _ROWNUM <= (@START +  @PAGE_SIZE) 
			 ORDER BY (CASE @RANK
						WHEN 0 THEN q.corpInspectCompleted
						WHEN 1 THEN q.corpInspectPlan
							ELSE q.corpMaintCompleted
						END) DESC
	]]>
	</select>
</mapper>


