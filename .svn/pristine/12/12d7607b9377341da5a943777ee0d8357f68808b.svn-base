package com.knight.app.model;

// Generated 2015-5-29 9:21:52 by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;

import com.google.gson.annotations.Expose;
import com.google.gson.annotations.Since;
import com.google.gson.reflect.TypeToken;
import com.knight.core.model.BaseModel;
import com.knight.core.model.ExportModel;
import com.knight.core.table.CodeFieldDeclare;
import com.knight.core.table.PersistantDeclare;
import com.knight.core.util.GsonUtil;
import com.knight.emms.constant.Constant;
import com.knight.emms.model.AppRepairCostGrid;
import com.knight.emms.model.DemandDetail;

import lombok.Data;
import lombok.ToString;

/**
 * TAppRepair generated by hbm2java
 */
@Data
@ToString(callSuper = false, doNotUseGetters = true)
@PersistantDeclare(isExportable = true, exportName = "故障报修", sheetName = "故障报修")
public class TAppRepair extends BaseModel  implements ExportModel, Cloneable {

	private static final long serialVersionUID = 1L;
	@Expose
	private Long repid;
	@Expose
	private Long equipId;
	@Expose
	private String equipSpec;
	@Expose
	private String recordSerial;
	@Expose
	private String exwSerial;
	@Expose
	private String buildingNum;
	@Expose
	private String projName;
	@Expose
	private String reportDt;
	@Expose
	private String faultLevel;
	@Expose
	private String faultDesc;
	@Expose
	private String procMan;
	@Expose
	private String location;
	@Expose
	private String disMan;
	@Expose
	private String disManName;
	@Expose
	private String repairDt;
	@Expose
	private String repScheme;
	@Expose
	private String procResult;
	@Expose
	private String repMan;
	@Expose
	private String repTimes;	
	@Expose
	private BigDecimal repFee;  //总维修费用
	@Expose
	private String repReason;	
	@Expose
	private String repImage;	
	@Expose
	@CodeFieldDeclare(codeId = "APP_REPAIR_STATE", valueField = "stateName")
	private String state;
	@Expose
	private String stateName;
	@Expose
	private String createDt;
	@Expose
	private Long createBy;
	@Expose
	private String fileAttaches;
	@Expose
	private String hasview;
	@Expose
	private String disDate;	//派工时间
	@Expose
	private String arriveTime;  //到达时间
	@Expose
	@CodeFieldDeclare(codeId = "appRepairType", valueField = "repairTypeName")
	private String repairType; //故障类型
	@Expose
	private String repairTypeName; //故障类型
	@Expose
	private String disRemark;     //备注
	
	@Expose
	private String createByname;
	@Expose(deserialize = false, serialize = false)
	@Since(value = 2.0)
	private Set<TAppRepairCompon> repairComponSet = new HashSet<TAppRepairCompon>();
	@Expose
    private String weightOfFailure;
	@Expose
    private String inputVoltage;
	@Expose
    private String breakdownVoltage;
	@Expose
	private String switchFault1; 		//开关故障1
	@Expose
	private String switchFault2; 		//开关故障2
	@Expose
	private String switchFault3; 		//开关故障3
	@Expose
	private String equipSerial;         //设备自编号      
	private String appRepairCostGrids = "";
	@Expose
	private Long sum;               //临时存放总维修费用
	
	@Expose(deserialize = false, serialize = false)
	@Since(value = 2.0)
	private Set<AppRepairCostGrid> appRepairCostGridSet = new HashSet<AppRepairCostGrid>();
	// ==============================================================================//
			public void setSubScrapContract() {
				Set<AppRepairCostGrid> appRepairCostGridSet = GsonUtil.fromJson(this.getAppRepairCostGrids(), new TypeToken<Set<AppRepairCostGrid>>() {});
				if (appRepairCostGridSet != null) {
					repFee=BigDecimal.valueOf(0);
					sum=(long) 0;
					for (AppRepairCostGrid p : appRepairCostGridSet) {
						p.setRelateId(repid);
						sum+=p.getAmount();
					}
					repFee=BigDecimal.valueOf(sum);
				}
				this.setAppRepairCostGridSet(appRepairCostGridSet);
			}
}
