<?xml version="1.0" encoding="UTF-8"?>
<mapper namespace="dispatch">
	<!-- 调度(合同/安装/使用/拆卸)申请通过时提醒:调度资源设备/零配件 在用情况 -->
	<select id="dispatch_diary_componequip_inused">
	<![CDATA[
		DECLARE @DISPATCH_ID BIGINT
		SET @DISPATCH_ID = ?
		SELECT D.RECORD_SERIAL PRODUCT_SERIAL, D.RELATE_SERIAL
		  FROM T_EQUIPMENT_DIARY D, T_DISPATCH_EQUIP E
		 WHERE E.DISPATCH_ID = @DISPATCH_ID
		   AND D.EQUIP_ID = E.EQUIP_ID
		   AND D.END_DATE > E.START_DATE
		   AND D.ACTIVE = 1
		UNION ALL
		SELECT CD.COMPON_SERIAL PRODUCT_SERIAL, CD.RELATE_SERIAL
		  FROM T_COMPONENT_DIARY CD, T_DISPATCH_COMPON E
		 WHERE E.DISPATCH_ID = @DISPATCH_ID
		   AND CD.COMPON_ID = E.COMPON_ID
		   AND CD.END_DATE > E.START_DATE
		   AND CD.ACTIVE = 1
		   AND CD.CONSUME_FLAG = '0'
	]]>
	</select>
	<!-- 安装/使用/拆卸 申请通过前验证:零配件(领用、借用)占用情况 -->
	<select id="equipFlow_diary_component_inused_pickupborrow">
	<![CDATA[
		DECLARE @START_DATE SMALLDATETIME
		DECLARE @END_DATE SMALLDATETIME
		DECLARE @RELATE_ID BIGINT
		DECLARE @RELATE_MODULE VARCHAR(32)
		SET @START_DATE = ?
		SET @END_DATE = ?
		SET @RELATE_ID = ?
		SET @RELATE_MODULE = ?
		SELECT CD.COMPON_SERIAL, CD.RELATE_SERIAL
		  FROM T_COMPONENT_DIARY CD
		 WHERE (CD.RELATE_MODULE = 'PICKUP' OR CD.RELATE_MODULE = 'BORROW')
		   AND CD.ACTIVE = '1'
		   AND CD.START_DATE < @END_DATE
		   AND CD.END_DATE > @START_DATE
		   AND CD.CONSUME_FLAG = '0'
		   AND EXISTS (SELECT 'X'
		          FROM T_COMPONENT_DIARY T
		         WHERE RELATE_ID = @RELATE_ID
		           AND T.RELATE_MODULE = @RELATE_MODULE
		           AND CD.COMPON_ID = T.COMPON_ID)
	]]>
	</select>
	<!-- 安装/使用/拆卸 申请通过时提醒:零配件占用情况(领用/借用已过滤) [之前验证过:ied_diary_component_inused_pickupborrow] -->
	<select id="equipFlow_diary_component_inused">
	<![CDATA[
		DECLARE @START_DATE SMALLDATETIME
		DECLARE @END_DATE SMALLDATETIME
		DECLARE @RELATE_ID BIGINT
		DECLARE @RELATE_MODULE VARCHAR(32)
		SET @START_DATE = ?
		SET @END_DATE = ?
		SET @RELATE_ID = ?
		SET @RELATE_MODULE = ?
		SELECT CD.COMPON_ID, CD.COMPON_SERIAL, CD.RELATE_SERIAL
		  FROM T_COMPONENT_DIARY CD
		 WHERE CD.ACTIVE = '1'
		   AND CD.START_DATE <= @END_DATE
		   AND CD.END_DATE >= @START_DATE
		   AND CD.CONSUME_FLAG = '0'
		   AND EXISTS (SELECT 'X'
		          FROM T_COMPONENT_DIARY T
		         WHERE T.RELATE_ID = @RELATE_ID
		           AND T.RELATE_MODULE = @RELATE_MODULE
		           AND T.COMPON_ID = CD.COMPON_ID)
	]]>
	</select>
	<!-- 安装/使用/拆卸 申请通过时:零配件其他设备使用流程业务日历结束时间更新(领用/借用已过滤) -->
	<select id="equipFlow_diary_component_preover">
	<![CDATA[
		DECLARE @RELATE_ID BIGINT
		DECLARE @RELATE_MODULE VARCHAR(32)
		DECLARE @START_DATE SMALLDATETIME
		SET @RELATE_ID = ?
		SET @RELATE_MODULE = ?
		SET @START_DATE = ?
		UPDATE CD
		   SET CD.END_DATE = @START_DATE, CD.STATUS = '8'
		  FROM T_COMPONENT_DIARY CD
		 WHERE CD.END_DATE > @START_DATE
		   AND CD.ACTIVE = '1'
		   AND CD.CONSUME_FLAG = '0'
		   AND ((CD.RELATE_ID <> @RELATE_ID) OR (CD.RELATE_ID = @RELATE_ID AND CD.RELATE_MODULE <> @RELATE_MODULE))
		   AND EXISTS (SELECT 'X'
		          FROM T_COMPONENT_DIARY T
		         WHERE T.RELATE_ID = @RELATE_ID
		           AND T.RELATE_MODULE = @RELATE_MODULE
		           AND T.COMPON_ID = CD.COMPON_ID)
	]]>
	</select>
	<!-- 拆卸 申请通过时:零配件当前设备使用流程业务中日历结束时间更新(领用/借用已过滤) -->
	<select id="equipFlow_set_diary_component_endDate_bydismantle">
	<![CDATA[
		DECLARE @DISMANTLE_ID BIGINT
		DECLARE @END_DATE SMALLDATETIME
		SET @DISMANTLE_ID = ?
		SET @END_DATE = ?
		UPDATE CD
		   SET CD.END_DATE = @END_DATE
		  FROM T_COMPONENT_DIARY CD, T_EQUIPMENT_FLOW EF
		 WHERE EF.DISMANTLE_ID = @DISMANTLE_ID
		   AND EF.FLOW_STATE = '6'
		   AND ((CD.RELATE_ID = EF.INSTALL_ID AND CD.RELATE_MODULE = 'EQUIP_INSTALL') OR (CD.RELATE_ID = EF.EMPLOY_ID AND CD.RELATE_MODULE = 'EQUIP_EMPLOY'))
		   AND CD.ACTIVE = '1'
		   AND CD.END_DATE > @END_DATE
	]]>
	</select>
	<!-- 调度(安装/使用/拆卸)申请通过前:调度资源人员/零配件 重复调配 -->
	<select id="dispatch_diary_componpracti_repeat">
	<![CDATA[
		DECLARE @RELATE_ID BIGINT
		DECLARE @RELATE_MODULE VARCHAR(32)
		DECLARE @DISPATCH_ID BIGINT
		SET @RELATE_ID = ?
		SET @RELATE_MODULE = ?
		SET @DISPATCH_ID = ?
		SELECT PD.PRACTI_NAME RESOURCE_NAME
		  FROM T_PRACTI_DIARY PD, T_DISPATCH_PRACTI DP
		 WHERE PD.RELATE_ID = @RELATE_ID
		   AND PD.RELATE_MODULE = @RELATE_MODULE
		   AND DP.DISPATCH_ID = @DISPATCH_ID
		   AND DP.PRACTI_ID = PD.PRACTI_ID
		UNION ALL
		SELECT CD.COMPON_SERIAL RESOURCE_NAME
		  FROM T_COMPONENT_DIARY CD, T_DISPATCH_COMPON DC
		 WHERE CD.RELATE_ID = @RELATE_ID
		   AND CD.RELATE_MODULE = @RELATE_MODULE
		   AND DC.DISPATCH_ID = @DISPATCH_ID
		   AND DC.COMPON_ID = CD.COMPON_ID
		   AND CD.CONSUME_FLAG = '0'
	]]>
	</select>
	<!-- 清除对已经调度完成的人员履历信息 -->
	<select id="clean_practi_resume">
	<![CDATA[
		DELETE FROM T_PRACTI_RESUME WHERE PRACTI_DIARY_ID = ?
	]]>
	</select>
	<!-- 运输部件信息 -->
	<select id="count_logistics_trandetail">
	<![CDATA[
		SELECT LT.LICENSE_PLATE, LT.DRIVER, CG.VALUE COMPON_GENERIC, C.CALCULATE, CS.VALUE COMPON_SPECIFIC, SUM(LT.COUNTS) COUNTS, LT.REMARK
		  FROM T_LOGISTICS_TRANDETAIL LT
		  LEFT JOIN T_DISPATCH_COMPON DC ON LT.DISPATCH_COMPON_ID = DC.DISPATCH_COMPON_ID
		  LEFT JOIN T_COMPONENT C ON DC.COMPON_ID = C.COMPON_ID
		  LEFT JOIN BM_COMPONENT_GENERIC CG ON C.COMPON_GENERIC = CG.CODE
		  LEFT JOIN BM_COMPONENT_SPECIFIC CS ON C.COMPON_SPECIFIC = CS.CODE
		 WHERE LT.TRANSPORT_ID = ?
		 GROUP BY LT.LICENSE_PLATE, LT.DRIVER, CG.VALUE, C.CALCULATE, CS.VALUE, LT.REMARK
	]]>
	</select>
	<!-- 回场部件信息 -->
	<select id="count_logistics_backdetail">
	<![CDATA[
		SELECT LB.LICENSE_PLATE, LB.DRIVER, CG.VALUE COMPON_GENERIC, C.CALCULATE, CS.VALUE COMPON_SPECIFIC, SUM(LB.COUNTS) COUNTS, LB.REMARK
		  FROM T_LOGISTICS_BACKDETAIL LB
		  LEFT JOIN T_COMPONENT_DIARY CD ON LB.COMPON_DIARY_ID = CD.COMPON_DIARY_ID
		  LEFT JOIN T_COMPONENT C ON CD.COMPON_ID = C.COMPON_ID
		  LEFT JOIN BM_COMPONENT_GENERIC CG ON C.COMPON_GENERIC = CG.CODE
		  LEFT JOIN BM_COMPONENT_SPECIFIC CS ON C.COMPON_SPECIFIC = CS.CODE
		 WHERE LB.BACKSPORT_ID = ?
		 GROUP BY LB.LICENSE_PLATE, LB.DRIVER, CG.VALUE, C.CALCULATE, CS.VALUE, LB.REMARK
	]]>
	</select>
	<!-- 项目在用设备部件汇总 -->
	<select id="project_ecinused_gather">
	<![CDATA[
		DECLARE @PROJECT_ID BIGINT
		DECLARE @EQUIP_ID BIGINT
		SET @PROJECT_ID = ?
		SET @EQUIP_ID = ?
		SELECT ED.EQUIP_DIARY_ID,
		       ED.RECORD_ID,
		       BEG.VALUE EQUIP_GENERIC,
		       BES.VALUE EQUIP_SPECIFIC,
		       ED.EXW_SERIAL,
		       ED.BUILDING_NUM,
		       BCG.VALUE COMPON_GENERIC,
		       BCS.VALUE COMPON_SPECIFIC,
		       C.DIMENSIONS,
		       CD.CALCULATE,
		       ISNULL(SUM(CD.COUNTS), 0) COUNTS,
		       ISNULL(SUM(C.KNOT_METRIC * CD.COUNTS), 0) KNOT_METRIC
		  FROM T_EQUIPMENT_DIARY ED
		  LEFT JOIN T_COMPONENT_DIARY CD ON CD.FLOW_ID = ED.FLOW_ID
		  LEFT JOIN T_COMPONENT C ON C.COMPON_ID = CD.COMPON_ID
		  LEFT JOIN BM_EQUIP_SPECIFIC BES ON BES.CODE = ED.EQUIP_SPECIFIC
		  LEFT JOIN BM_EQUIP_GENERIC BEG ON BEG.CODE = ED.EQUIP_GENERIC
		  LEFT JOIN BM_COMPONENT_SPECIFIC BCS ON BCS.CODE = CD.COMPON_SPECIFIC
		  LEFT JOIN BM_COMPONENT_GENERIC BCG ON BCG.CODE = CD.COMPON_GENERIC
		 WHERE ED.PROJECT_ID = @PROJECT_ID
		   AND ED.EQUIP_ID = CASE WHEN @EQUIP_ID IS NULL THEN ED.EQUIP_ID ELSE @EQUIP_ID END
		 GROUP BY ED.EQUIP_DIARY_ID,ED.FLOW_ID, ED.RECORD_ID, BES.VALUE, BEG.VALUE, ED.EXW_SERIAL, ED.BUILDING_NUM, BCG.VALUE, BCS.VALUE,C.DIMENSIONS,CD.CALCULATE
		 ORDER BY ED.EQUIP_DIARY_ID ASC;
	]]>
	</select>
	<!-- 项目未用设备部件汇总 -->
	<select id="project_ecunused_gather">
	<![CDATA[
	 	SELECT BCG.VALUE COMPON_GENERIC, BCS.VALUE COMPON_SPECIFIC,C.DIMENSIONS, C.CALCULATE, BCH.COUNTS COUNTS
  		 FROM
		 T_PROJECT_COMPON BCH 
		 LEFT JOIN T_COMPONENT C ON BCH.COMPON_ID=C.COMPON_ID
		   LEFT JOIN BM_COMPONENT_SPECIFIC BCS ON BCS.CODE = C.COMPON_SPECIFIC
		  LEFT JOIN BM_COMPONENT_GENERIC BCG ON BCG.CODE = C.COMPON_GENERIC
		 WHERE BCH.PROJECT_ID = ? AND BCH.COUNTS>0 AND BCH.STATUS=0
	]]>
	</select>
	<!-- 项目未用设备部件汇总2 -->
	<select id="project_ecunused_gather2">
	<![CDATA[
		 SELECT PC.COMPON_ID, SUM(ISNULL(PC.COUNTS,0)) COUNTS
		 FROM T_PROJECT_COMPON PC 
		 WHERE PC.STATUS = 0
		 GROUP BY PC.COMPON_ID 
	]]>
	</select>
	<!-- 过滤调度合同 -->
	<select id="list_by_trans_status">
	<![CDATA[
		DECLARE @CONTRACTSERIAL VARCHAR(128)
		DECLARE @PROJECT_NAME VARCHAR(128)
		DECLARE @EQUIPSERIAL VARCHAR(64)
		SET @CONTRACTSERIAL = ?
		SET @PROJECT_NAME = ?
		SET @EQUIPSERIAL = ?
		
		SELECT T.CONTRACT_ID contractId
			,T.PROJECT_NAME projectName
			,T.CONTRACT_SERIAL contractSerial
			,T.CONTRACT_THEME contractTheme
			,T.SUBCONTRACT subcontract
			,T.FUND_TYPE fundType
			,T.PB_ENT pbEnt
			,T.PB_MODULE pbModule
			,T.PB_ENT_NAME pbEntName
			,T.PB_ENT_LINK_MAN pbEntLinkMan
			,T.PA_ENT abEnt
			,T.PA_MODULE paModule
			,T.PA_ENT_NAME paEntName
			,T.PA_ENT_LINK_MAN paEntLinkMan
			,T.ENTERPRISE_SERIAL enterpriseSerial
			,T.COVER cover
			,T.SALESMAN_ID salesmanId
			,T.SALESMAN salesman
			,T.COLLECTION_RATIO collectionRatio
			,T.PROJECT_ID projectId
			,T.PROJECT_SERIAL projectSerial
			,T.PROJECT_NAME projectName
			,T.ADDRESS address
			,T.SIGNING_TIME signingTime
			,T.CONTRACT_AMOUNT contractAmount
			,T.APPLYFOR_STATE applyforState
			,T.PROVIDED_DATE providedDate
			,T.EQUIP_COUNT equipCount
			,T.CONSTRACT_NO contractNo
			,T.COMPETENT_DEPARTMET competentDepartment
			,T.TAX_MODE taxMode
			,T.APPLICABLE_TAX_RATE applicableTaxRate
			,T.SIGNEG_AREA signedArea
			,T.DISTRICT district
			,T.BELONG_TO_AREA belongToArea
			,T.CONTRACT_CATEGORY contractCategory
			,BA.VALUE  belongToAreaName
			,BC.VALUE contractCategoryName
			,_EQUIP.EQUIP_SERIAL equipSerial
			,(CASE T.APPLYFOR_STATE
				    WHEN  0 THEN '待提交'
					WHEN  1 THEN '待处理'
					WHEN  2 THEN '待审批'
					WHEN  3 THEN '待调度'
					WHEN  4 THEN '待执行'
					WHEN  5 THEN '执行中'
					WHEN  6 THEN '执行完成'
					WHEN  7 THEN '作废待审'
					WHEN  8 THEN '作废待批'
					WHEN  9 THEN '作废'
					END
			
			) applyforStateName
			,(CASE T.FUND_TYPE
				    WHEN  0 THEN '付款'
					WHEN  1 THEN '收款'
					END
			
			) fundTypeName
	 FROM T_CONTRACT_LEASE T 
	LEFT JOIN T_DISPATCH TD ON TD.RELATE_ID = T.CONTRACT_ID AND TD.RELATE_MODULE = 'CONTRACT_LEASE' AND TD.DEL_FLAG='1' AND TD.APPLYFOR_STATE = '3' AND TD.EFFECTIVE=1
	LEFT JOIN T_DISPATCH_EQUIP TE ON TE.DISPATCH_ID = TD.DISPATCH_ID 
	LEFT JOIN BM_BELONG_TO_AREA BA ON BA.CODE = T.BELONG_TO_AREA
	LEFT JOIN BM_CONTRACT_CATEGORY BC ON BC.CODE = T.CONTRACT_CATEGORY
	LEFT JOIN T_EQUIPMENT _EQUIP ON _EQUIP.EQUIP_ID = TE.EQUIP_ID
	WHERE TE.WORK_STATUS = '0' AND  TE.DISPATCH_EQUIP_ID IS NOT NULL
	 AND (
			    CHARINDEX((CASE WHEN @PROJECT_NAME IS NULL THEN T.PROJECT_NAME ELSE @PROJECT_NAME END), T.PROJECT_NAME) > 0
			   OR CHARINDEX((CASE WHEN @CONTRACTSERIAL IS NULL THEN CAST(T.CONTRACT_SERIAL AS VARCHAR(64)) ELSE @CONTRACTSERIAL END), CAST(T.CONTRACT_SERIAL AS VARCHAR(64))) > 0
			   OR CHARINDEX((CASE WHEN @EQUIPSERIAL IS NULL THEN _EQUIP.EQUIP_SERIAL ELSE @EQUIPSERIAL END), _EQUIP.EQUIP_SERIAL) > 0
		   )
	]]>
	</select>
</mapper>