/**
 * 版权所有：厦门市巨龙软件工程有限公司
 * Copyright 2010 Xiamen Dragon Software Eng. Co. Ltd.
 * All right reserved. 
 *====================================================
 * 文件名称: DepartmentServiceImpl.java
 * 修订记录：
 * No    日期				作者(操作:具体内容)
 * 1.    2010-12-26			chenxy(创建:创建文件)
 *====================================================
 * 类描述：(说明未实现或其它不应生成javadoc的内容)
 * 
 */
package com.knight.system.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.knight.core.Constants;
import com.knight.core.exception.BusinessException;
import com.knight.core.service.impl.BaseLongPKServiceImpl;
import com.knight.system.dao.DepartmentDao;
import com.knight.system.model.Department;
import com.knight.system.service.DepartmentService;

/**
 * @ClassName:DepartmentServiceImpl
 * @Description:TODO(这里用一句话描述这个类的作用)
 * @author:chenxy
 * @date 2011-8-24 上午10:00:29
 * @since JDK Version 1.5
 */
public class DepartmentServiceImpl extends BaseLongPKServiceImpl<Department> implements DepartmentService {

	private DepartmentDao departmentDao;

	public DepartmentServiceImpl(DepartmentDao dao) {
		super(dao);
		this.departmentDao = dao;
	}

	public Map<Long, String> queryAllDepartment() {
		List<Department> departmentList = departmentDao.getAll();
		Map<Long, String> departMap = new HashMap<Long, String>(departmentList.size());
		for (Department d : departmentList) {
			departMap.put(d.getDepId(), d.getDepName());
		}
		return departMap;
	}

	public void createDepartment(Department department) {
		List<Department> ds = departmentDao.queryBySerial(department.getDepSerial());
		if (!ds.isEmpty()) {
			throw new BusinessException("该部门已经存在!");
		}
		Long parentId = department.getParentId();
		String depPath = "";
		int level = 0;
		if (parentId == null || Department.TOP_DEPID.equals(parentId)) {
			parentId = Department.TOP_DEPID;
			depPath = Department.TOP_DEPID + ".";
		} else {
			Department parentDepartment = departmentDao.get(parentId);
			if (!department.getDepSerial().startsWith(parentDepartment.getDepSerial())) {
				throw new BusinessException("部门编号必须以上级编号为开头!");
			}
			depPath = parentDepartment.getPath();
			level = parentDepartment.getDepLevel();
		}
		if (level < 1) {
			level = 1;
		}
		department.setDepLevel(level + 1);
		departmentDao.save(department);
		department.setPath(depPath + department.getDepId() + ".");
		departmentDao.save(department);
	}

	public List<Department> findByParentId(Long parentId) {
		return departmentDao.findByParentId(parentId);
	}

	public List<Department> findByPath(String path) {
		return departmentDao.findByPath(path);
	}

	public void remove(Long depId) {
		Department d = departmentDao.get(depId);
		d.setDepSerial("_" + d.getDepSerial());
		d.setDepName("(x)" + d.getDepName());
		d.setDelFlag(Constants.DISENABLED);
		departmentDao.save(d);
	}

}
