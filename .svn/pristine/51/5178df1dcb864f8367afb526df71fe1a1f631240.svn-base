/**
 *====================================================
 * 文件名称: EquipInspectSchemaServiceImpl.java
 * 修订记录：
 * No    日期				作者(操作:具体内容)
 * 1.    2014-5-6			chenxy(创建:创建文件)
 *====================================================
 * 类描述：(说明未实现或其它不应生成javadoc的内容)
 */
package com.knight.emms.service.impl;

import java.util.Date;

import javax.annotation.Resource;

import com.knight.core.util.DateUtil;
import com.knight.emms.constant.Constant;
import com.knight.emms.constant.Status;
import com.knight.emms.dao.EquipFlowDao;
import com.knight.emms.dao.EquipInspectDao;
import com.knight.emms.dao.EquipInspectSchemaDao;
import com.knight.emms.model.EquipFlow;
import com.knight.emms.model.EquipInspect;
import com.knight.emms.model.EquipInspectSchema;
import com.knight.emms.service.EquipInspectSchemaService;
import com.knight.emms.support.SchemaSupport;
import com.knight.system.service.impl.BusinessLongPKServiceImpl;

/**
 * @ClassName: EquipInspectSchemaServiceImpl
 * @Description: TODO(这里用一句话描述这个类的作用)
 * @author chenxy
 * @date 2014-5-6 下午11:01:54
 */
public class EquipInspectSchemaServiceImpl extends BusinessLongPKServiceImpl<EquipInspectSchema> implements EquipInspectSchemaService {

	private EquipInspectSchemaDao equipInspectSchemaDao;

	@Resource
	private EquipInspectDao equipInspectDao;

	@Resource
	private EquipFlowDao equipFlowDao;

	public EquipInspectSchemaServiceImpl(EquipInspectSchemaDao dao) {
		super(dao);
		this.equipInspectSchemaDao = dao;
	}

	public void saveOrUpdate(EquipInspectSchema equipInspectSchema) {
		if (equipInspectSchema.getInspectSchemaId() == null) {
			equipInspectSchemaDao.save(equipInspectSchema);
		} else {
			equipInspectSchemaDao.merge(equipInspectSchema);
		}
		EquipFlow equipFlow = equipFlowDao.get(equipInspectSchema.getFlowId());
		equipFlow.setEmployInspectSchemaId(equipInspectSchema.getInspectSchemaId());
		equipFlowDao.save(equipFlow);
	}

	public void createWaitEquipInspect(EquipInspectSchema schema) {
		SchemaSupport.caculateCurrentExeSchemaTimes(schema);
		EquipInspect inspect = new EquipInspect();
		inspect.setRepairStatus(Constant.DISENABLED);
		inspect.setEquipInspectSchema(schema);
		inspect.setCycleTimes(schema.getCycleTimes());
		inspect.setThisEndCycleDate(schema.getThisEndCycleDate());
		inspect.setStatus(Status.HandleResult.untreated);
		equipInspectDao.saveSerialModel(inspect);
		SchemaSupport.caculateSchemaNextDate(schema);
		if (schema.getNextFormTime().getTime() <= DateUtil.setEndDay(new Date()).getTime()) {
			this.createWaitEquipInspect(schema);
		}
	}

}
